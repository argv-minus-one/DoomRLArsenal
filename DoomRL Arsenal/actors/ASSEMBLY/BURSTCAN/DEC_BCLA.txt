
ACTOR RLBurstCannonLaserRifle : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was marked to death by %k's laser rifle."
  Inventory.Pickupmessage "You picked up an Burst Laser Rifle."
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Burst Laser Rifle"
  Weapon.Kickback 40
  Weapon.SelectionOrder 20
  Weapon.SlotNumber 6
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLBurstCannonLaserRifleClip"
  Weapon.AmmoType2 "Cell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleNanoMod",1,2)
    LASR A 1 A_WeaponReady (48)
    Loop
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip",1,2)
    LASR A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    LASR A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip", 80, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip", 104, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleClip", 1)
    LASR A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ReadyAfterFire:
    LASR A 14 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    LASR A 10 A_WeaponReady (WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRiflePowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLBurstCannonLaserRifle",0,0,0)
	TNT1 A 1 A_TakeInventory("RLBurstCannonLaserRifle",1)
	Stop
  AfterModDrop:
    LASR A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    LASR A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    LASR A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    LASR A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleBurst",1)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRiflePowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBurst",3,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 1.5, -1, (random(1,7)*10), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 1.5, -1, (random(1,7)*10), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBurst",3,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 1.5, -1, (random(1,7)*12), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 1.5, -1, (random(1,7)*12), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBurst",3,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (1, 1, -1, (random(1,7)*10), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1, 1, -1, (random(1,7)*10), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBurst",3,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*10), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*10), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/burstlaserrifle", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleFirestormMod",1,1)
    Goto FireFinish+7
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleFiringState",1,3)
    LASR B 1 Bright A_GunFlash
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleFiringState",1)
    Goto FireFinish+9
	LASR C 1 Bright A_GunFlash
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleFiringState",1)
    Goto FireFinish+9
    LASR B 1 Bright A_GunFlash
	LASR C 1 Bright
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBurst",3,1)
    Goto Fire
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleBurst",3)
    Goto ReadyAfterFire
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleNanoMod",1,"Ready")
	LASR A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip", 80, "Ready")
	Goto Reload+5
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip", 104, "Ready")
	TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleTechnicalMod",1,"Reload1")
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 2
    LASR I 2
    LASR J 2
    TNT1 A 0 A_PlaySound("weapons/burstlaserrifleunload", 5)
    LASR K 2
    LASR L 2
    LASR M 2
    LASR N 2
    LASR O 2
    LASR P 2
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
	Goto ReloadWorking
  Reload1:
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 1
    LASR I 1
    LASR J 1
    TNT1 A 0 A_PlaySound("weapons/burstlaserrifleunload", 5)
    LASR K 2
    LASR L 2
    LASR M 2
    LASR N 2
    LASR O 2
    LASR P 2
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Cell", 1)
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip",80,3)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleClip",104,2)
	TNT1 A 0 A_JumpIfInventory("Cell",1,2)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleBurst", 3)
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/burstlaserrifleload", 6)
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleTechnicalMod",1,"ReloadFinish1")
    LASR K 2
    LASR J 2
    LASR I 2
    LASR H 2
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 8
	Goto Ready
  ReloadFinish1:
    LASR K 1
    LASR J 1
    LASR I 1
    LASR H 2
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 8
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleFirestormMod",1,1)
    Goto Flash+2
    TNT1 A 2 Bright A_Light2
    Goto LightDone
    TNT1 A 3 Bright A_Light2
    Goto LightDone
  Spawn:
    LASR X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRiflePowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLBurstCannonLaserRifle",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLBurstCannonLaserRifleSelected : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleFiringState : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleBurst : Inventory
{
inventory.maxamount 3
}

Actor RLBurstCannonLaserRifleModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRiflePowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLBurstCannonLaserRifleClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 104
   Inventory.Icon ""
}

ACTOR RLBurstCannonLaserRiflePickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		LASR X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifle",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/burstlaserriflepickup")
		TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifle",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvBurst Laser Rifle.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Cell",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Burst Laser Rifle =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Cell",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Cell",80)
		Stop
	AmmoFull:
		LASR X 1
		Fail
	}
}

ACTOR DroppedRLBurstCannonLaserRifle
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		LASR X 1
		Loop
	Death:
		TNT1 A 0
		LASR X 1 A_SpawnItem("RLBurstCannonLaserRiflePickup",0,0,0,0)
		Stop
	}
}
