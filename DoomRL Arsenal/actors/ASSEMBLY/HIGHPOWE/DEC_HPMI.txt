
ACTOR RLHighPowerMinigun : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was transformed into a fine spray by %k's minigun."
  Inventory.Pickupmessage "You picked up a High Power Minigun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "High Power Minigun"
  Weapon.Kickback 40
  Weapon.SelectionOrder 25
  Weapon.SlotNumber 4
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLHighPowerMinigunClip"
  Weapon.AmmoType2 "Clip"
  States
  {
  Ready:
	TNT1 A 0 A_GunFlash ("FlashErase", GFF_NOEXTCHANGE)
	TNT1 A 0 A_StopSound (CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunNanoMod",1,2)
    QMIN A 1 A_WeaponReady (48)
    Goto Ready+3
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip",1,2)
    QMIN A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    QMIN A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 130, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 169, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 208, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunNanoMod",2,2)
    QMIN A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
    QMIN A 9 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GunFlash ("FlashErase", GFF_NOEXTCHANGE)
	TNT1 A 0 A_StopSound (CHAN_WEAPON)
	TNT1 A 0 A_StopSound (6)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunModLimit", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunPowerMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunBulkMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunAgilityMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunTechnicalMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLHighPowerMinigun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLHighPowerMinigun",1)
	Stop
  AfterModDrop:
    QMIN A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    QMIN A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
    TNT1 A 0 A_ClearReFire
	TNT1 A 0 A_GunFlash ("FlashErase", GFF_NOEXTCHANGE)
	TNT1 A 0 A_StopSound (CHAN_WEAPON)
	TNT1 A 0 A_StopSound (6)
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    QMIN A 2 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    QMIN A 2 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
  FireWindUp:
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunFirestormMod",2,"FireWindUp2")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunFirestormMod",1,"FireWindUp1")
	QMIN B 4 A_PlaySound("weapons/hpminigunwindup", 6)
	QMIN CD 3
	QMIN AB 3
	QMIN CD 2
	QMIN ABCD 1
    Goto FireStart
  FireWindUp1:
	QMIN B 3 A_PlaySound("weapons/hpminigunwindup", 6)
	QMIN CD 2
	QMIN AB 2
	QMIN CD 1
    Goto FireStart
  FireWindUp2:
	QMIN B 2 A_PlaySound("weapons/hpminigunwindup", 6)
	QMIN CD 1
	QMIN ABCD 1
    Goto FireStart
  Hold:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
  FireStart:
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunAmmochain",1)
	TNT1 A 0 A_PlaySound("weapons/hpminigunspin", 6, 1, 1)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunPowerMod",2,"FirePP")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAgilityMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*8), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*8), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunPowerMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAgilityMod",2,"FireAA")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (5.5, 1.5, -1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (5.5, 1.5, -1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePP:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*9), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 2, -1, (random(1,5)*9), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePA:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (5.5, 1.5, -1, (random(1,5)*8), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (5.5, 1.5, -1, (random(1,5)*8), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireAA:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (5, 1, -1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (5, 1, -1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSniperMod",2,"FireSS")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunPowerMod",1,"FireSP")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAgilityMod",1,"FireSA")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (4, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (4, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSS:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSP:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (4, 0, 1, (random(1,5)*8), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (4, 0, 1, (random(1,5)*8), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSA:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, 1, (random(1,5)*7), "RLBulletPuff", FBF_NORANDOM)
    Goto FireFinish
  FireFinish:
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.2, 0, Sin(Pitch) * 0.2, 1)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulletchainState",2,2)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunBulletchainState",2)
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunBulletchainState",1)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunAmmochain",4,2)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunAmmochain",4)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunState",3,"FireState3")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunState",2,"FireState2")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunState",1,"FireState1")
    TNT1 A 0 A_PlaySound("weapons/highpowerminigun", CHAN_WEAPON, 1, 1, 0.7)
    QMIN E 1 Bright A_GunFlash
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunState",1)
    Goto FireStart
  FireState1:
    QMIN F 1 Bright A_GunFlash ("FlashSecond")
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunState",1)
	TNT1 A 0 A_JumpIfNoAmmo("WindDown")
    TNT1 A 0 A_ReFire
	Goto FireStart
  FireState2:
    QMIN G 1 Bright A_GunFlash
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunState",1)
	TNT1 A 0 A_JumpIfNoAmmo("WindDown")
    TNT1 A 0 A_ReFire
	Goto FireStart
  FireState3:
    QMIN H 1 Bright A_GunFlash ("FlashSecond")
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunState",3)
	TNT1 A 0 A_JumpIfNoAmmo("WindDown")
    TNT1 A 0 A_ReFire
	Goto WindDown
  WindDown:
	TNT1 A 0 A_StopSound (CHAN_WEAPON)
	TNT1 A 0 A_GunFlash ("FlashErase", GFF_NOEXTCHANGE)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunFirestormMod",2,"WindDown2")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunFirestormMod",1,"WindDown1")
	QMIN A 2 A_PlaySound("weapons/hpminigunwinddown", 6)
	QMIN BC 2
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	QMIN D 2
	QMIN ABC 3
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	QMIN DAB 4
	QMIN CD 2
	Goto Ready
  WindDown1:
	QMIN A 1 A_PlaySound("weapons/hpminigunwinddown", 6)
	QMIN BC 1
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	QMIN D 2
	QMIN ABC 2
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	QMIN D 3
	Goto Ready
  WindDown2:
	QMIN A 1 A_PlaySound("weapons/hpminigunwinddown", 6)
	QMIN B 1
	QMIN C 2
	QMIN D 3
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	TNT1 A 0
	Goto Ready
  Reload:
    TNT1 A 0 A_ClearReFire
	TNT1 A 0 A_StopSound (CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunNanoMod",1,"Ready")
	QMIN A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 130, "Ready")
	Goto Reload+9
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 169, "Ready")
	Goto Reload+9
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip", 208, "Ready")
	TNT1 A 0 A_JumpIfInventory("Clip", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunTechnicalMod",2,"Reload2")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunTechnicalMod",1,"Reload1")
    QMIN L 2
    QMIN M 2
    TNT1 A 0 A_PlaySound("weapons/hpminigununload", 5)
    QMIN N 2
    QMIN O 2
    QMIN P 2
    QMIN Q 2
    QMIN R 22
    QMIN Q 2
    QMIN P 2
    QMIN O 2
    QMIN N 2
	Goto ReloadWorking
  Reload1:
    QMIN L 1
    QMIN M 1
    TNT1 A 0 A_PlaySound("weapons/hpminigununload", 5)
    QMIN N 1
    QMIN O 2
    QMIN P 2
    QMIN Q 2
    QMIN R 22
    QMIN Q 2
    QMIN P 2
    QMIN O 2
    QMIN N 2
	Goto ReloadWorking
  Reload2:
    QMIN L 1
    QMIN M 1
    TNT1 A 0 A_PlaySound("weapons/hpminigununload", 5)
    QMIN N 1
    QMIN O 1
    QMIN P 1
    QMIN Q 1
    QMIN R 22
    QMIN Q 2
    QMIN P 2
    QMIN O 2
    QMIN N 2
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Clip", 1)
	TNT1 A 0 A_GiveInventory("RLHighPowerMinigunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip",130,5)
	Goto ReloadWorking+7
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip",169,3)
	Goto ReloadWorking+7
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunClip",208,2)
	TNT1 A 0 A_JumpIfInventory("Clip",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/hpminigunload", 7)
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunTechnicalMod",2,"ReloadFinish2")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunTechnicalMod",1,"ReloadFinish1")
    QMIN S 2
    QMIN T 2
    QMIN U 2
	Goto ReloadSpin
  ReloadFinish1:
    QMIN S 1
    QMIN T 1
    QMIN U 1
	Goto ReloadSpin
  ReloadFinish2:
    QMIN S 1
    QMIN T 1
    QMIN U 1
	Goto ReloadSpin1
  ReloadSpin:
	TNT1 A 0 A_PlaySound("weapons/hpminigunwinddown", 6)
	QMIN A 3
	QMIN B 3
	QMIN C 3
	QMIN D 4
	QMIN A 4
	QMIN B 4
	QMIN C 5
	QMIN D 5
	Goto Ready
  ReloadSpin1:
	TNT1 A 0 A_PlaySound("weapons/hpminigunwinddown", 6)
	QMIN A 2
	QMIN B 2
	QMIN C 3
	QMIN D 3
	QMIN A 4
	QMIN B 4
	QMIN C 5
	QMIN D 5
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulletchainState",2,"Flash3")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulletchainState",1,"Flash2")
    QMIN I 1 Bright A_Light1
    Goto LightDone
  Flash2:
    QMIN J 1 Bright A_Light2
    Goto LightDone
  Flash3:
    QMIN K 1 Bright A_Light (3)
    Goto LightDone
  FlashSecond:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulletchainState",2,"FlashSecond3")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunBulletchainState",1,"FlashSecond2")
    QMIN V 1 Bright A_Light1
    Goto LightDone
  FlashSecond2:
    QMIN W 1 Bright A_Light2
    Goto LightDone
  FlashSecond3:
    QMIN Y 1 Bright A_Light (3)
    Goto LightDone
  FlashErase:
    TNT1 A 1 A_Light0
    Goto LightDone
  Spawn:
    QMIN X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ArmorModConversion:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemBlue",1, "ArmorModConversionBlue")
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemRed",1, "ArmorModConversionRed")
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItem",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItemBlue",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \chCombat \c-Mode.")
	Goto AfterModDrop
  ArmorModConversionBlue:
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemBlue",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItemRed",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \cgCommando \c-Mode.")
	Goto AfterModDrop
  ArmorModConversionRed:
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemRed",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItem",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \cdSecurity \c-Mode.")
	Goto AfterModDrop
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_StopSound (6)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunModLimit", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunPowerMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunBulkMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunAgilityMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunTechnicalMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLHighPowerMinigunNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2)
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLHighPowerMinigun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLHighPowerMinigunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLHighPowerMinigunState : Inventory
{
inventory.maxamount 3
}

Actor RLHighPowerMinigunBulletchainState : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunAmmochain : Inventory
{
inventory.maxamount 4
}

Actor RLHighPowerMinigunModLimit : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunPowerMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunBulkMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunAgilityMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunTechnicalMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunFirestormMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunNanoMod : Inventory
{
inventory.maxamount 2
}

Actor RLHighPowerMinigunSniperMod : Inventory
{
inventory.maxamount 2
}

ACTOR RLHighPowerMinigunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 208
   Inventory.Icon ""
}

ACTOR RLHighPowerMinigunPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		QMIN X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/hpminigunpickup")
		TNT1 A 0 A_GiveInventory("RLHighPowerMinigun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvHigh Power Minigun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Clip",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= High Power Minigun =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Clip",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Clip",130)
		Stop
	AmmoFull:
		QMIN X 1
		Fail
	}
}

ACTOR DroppedRLHighPowerMinigun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		QMIN X 1
		Loop
	Death:
		TNT1 A 0
		QMIN X 1 A_SpawnItem("RLHighPowerMinigunPickup",0,0,0,0)
		Stop
	}
}
