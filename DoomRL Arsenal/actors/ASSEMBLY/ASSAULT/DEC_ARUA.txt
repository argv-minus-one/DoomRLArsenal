
ACTOR RLAssaultRifleBattleRifle : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was sniped by %k's assault rifle."
  Inventory.Pickupmessage "You picked up an assault rifle."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Assault Rifle"
  Weapon.Kickback 40
  Weapon.SelectionOrder 25
  Weapon.SlotNumber 4
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLAssaultRifleBattleRifleClip"
  Weapon.AmmoType2 "Clip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleNanoMod",1,"NanoRegenCheck")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
    UACR B 1 A_WeaponReady (48)
    Goto Ready+1
    UACR A 1 A_WeaponReady (48)
    Goto Ready+1
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,"NanoRegenCheckBegin")
    UACR B 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin2
  NanoRegenCheckBegin:
    UACR A 70 A_WeaponReady (WRF_ALLOWZOOM)
  NanoRegenCheckBegin2:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip", 20, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleClip", 1)
    UACR A 17 A_WeaponReady (WRF_ALLOWZOOM)
    Goto NanoRegenCheckBegin2
  ReadyAfterFire:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,3)
    UACR B 14 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    UACR B 10 A_WeaponReady (WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    Goto Ready
    UACR A 14 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    UACR A 10 A_WeaponReady (WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRiflePowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAssaultRifleBattleRifle",0,0,0)
	TNT1 A 1 A_TakeInventory("RLAssaultRifleBattleRifle",1)
	Stop
  AfterModDrop:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
    UACR B 8 A_WeaponReady (16)
    Goto Ready
    UACR A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
    UACR B 10 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
    UACR A 10 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
    UACR B 1 A_Lower
    Loop
    UACR A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
    UACR B 1 A_Raise
    Loop
    UACR A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRiflePowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleAgilityMod",1,"FireA")
	TNT1 A 0 A_FireBullets (0, 0, -1, 15, "RLBulletPuff")
    Goto FireFinish
  FireP:
	TNT1 A 0 A_FireBullets (0, 0, -1, 20, "RLBulletPuff")
    Goto FireFinish
  FireA:
	TNT1 A 0 A_FireBullets (0, 0, -1, 15, "RLBulletPuff")
    Goto FireFinish
  FireS:
	TNT1 A 0 A_FireBullets (0, 0, 1, 15, "RLBulletPuff")
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifle", CHAN_WEAPON)
    UACR Y 1 Bright A_GunFlash
    UACR Z 1 Bright
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,3)
    UACR VB 1
    Goto ReadyAfterFire
    UACR WA 1
    Goto ReadyAfterFire
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleNanoMod",1,"Ready")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,2)
	UACR B 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
    Goto Reload+4
	UACR A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip", 20, "Ready")
	Goto Reload+7
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip", 26, "Ready")
	TNT1 A 0 A_JumpIfInventory("Clip", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleTechnicalMod",1,"Reload1")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,11)
    UACR N 2
    UACR O 2
    UACR P 2
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifleunload", 5)
    UACR Q 2
    UACR R 8
    UACR S 2
    UACR T 2
    UACR U 2
//    TNT1 A 0 A_PlaySound("weapons/assaultbattleriflecock", 7)
	Goto ReloadWorking
    UACR C 2
    UACR D 2
    UACR E 2
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifleunload", 5)
    UACR F 2
    UACR G 8
    UACR H 2
    UACR I 2
    UACR J 2
	Goto ReloadWorking
  Reload1:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",1,11)
    UACR N 1
    UACR O 1
    UACR P 1
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifleunload", 5)
    UACR Q 2
    UACR R 8
    UACR S 2
    UACR T 2
    UACR U 2
//    TNT1 A 0 A_PlaySound("weapons/assaultbattleriflecock", 7)
	Goto ReloadWorking
    UACR C 1
    UACR D 1
    UACR E 1
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifleunload", 5)
    UACR F 2
    UACR G 8
    UACR H 2
    UACR I 2
    UACR J 2
	Goto ReloadWorking
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Clip", 1)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",20,3)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleClip",26,2)
	TNT1 A 0 A_JumpIfInventory("Clip",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/assaultbattlerifleload", 6)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleTechnicalMod",1,"ReloadFinish1")
    UACR K 3
    UACR L 5
    UACR M 3
    UACR A 6
	Goto Ready
  ReloadFinish1:
    UACR K 2
    UACR L 5
    UACR M 2
    UACR A 5
	Goto Ready
  Flash:
    TNT1 A 1 A_Light1
    TNT1 A 1 A_Light2
    Goto LightDone
  Spawn:
    UACR X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRiflePowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleFirestormMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
    TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLAssaultRifleBattleRifle",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLAssaultRifleBattleRifleSelected : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRiflePowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLAssaultRifleBattleRifleClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 26
   Inventory.Icon ""
}

ACTOR RLAssaultRifleBattleRiflePickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		UACR X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifle",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/assaultriflepickup")
		TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifle",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvAssault Rifle.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Clip",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Assault Rifle =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Clip",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Clip",20)
		Stop
	AmmoFull:
		UACR X 1
		Fail
	}
}

ACTOR DroppedRLAssaultRifleBattleRifle
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		UACR X 1
		Loop
	Death:
		TNT1 A 0
		UACR X 1 A_SpawnItem("RLAssaultRifleBattleRiflePickup",0,0,0,0)
		Stop
	}
}
