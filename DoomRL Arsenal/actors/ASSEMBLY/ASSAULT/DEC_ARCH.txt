
ACTOR RLAssaultRifleChaingun : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was perforated by %k's chaingun."
  Inventory.Pickupmessage "You picked up an Assault Chaingun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Assault Chaingun"
  Weapon.Kickback 40
  Weapon.SelectionOrder 25
  Weapon.SlotNumber 4
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLAssaultRifleChaingunClip"
  Weapon.AmmoType2 "Clip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunState",1)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunNanoMod",1,2)
    PKCG A 1 A_WeaponReady (48)
    Loop
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip",1,2)
    PKCG A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    PKCG A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip", 40, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip", 52, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunClip", 1)
    PKCG A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ReadyAfterFire:
    TNT1 A 0 A_PlaySound("weapons/assaultchaingunwinddown", 6)
	PKCG AB 3 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
	PKCG CD 4 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
    PKCG A 5 A_WeaponReady (WRF_ALLOWRELOAD | WRF_ALLOWZOOM | WRF_NOBOB)
	PKCG B 5
	PKCG CD 6
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAssaultRifleChaingun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLAssaultRifleChaingun",1)
	Stop
  AfterModDrop:
    PKCG A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    PKCG A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    PKCG A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    PKCG A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunAgilityMod",1,"FireA")
	TNT1 A 0 A_FireBullets (1, 1, -1, 15, "RLBulletPuff")
    Goto FireFinish
  FireP:
	TNT1 A 0 A_FireBullets (1, 1, -1, 20, "RLBulletPuff")
    Goto FireFinish
  FireA:
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, 15, "RLBulletPuff")
    Goto FireFinish
  FireS:
	TNT1 A 0 A_FireBullets (0, 0, -1, 15, "RLBulletPuff")
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/assaultchaingun", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunFirestormMod",1,1)
    Goto FireFinish+5
    PKCG A 1 A_GunFlash
    PKCG BC 1
    Goto FireFinish+12
    PKCG A 1 A_GunFlash
    PKCG BCD 1
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunState",1,2)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunState",1)
    Goto ReadyAfterFire
  FireEnd:
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunState",1)
    Goto ReadyAfterFire
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunNanoMod",1,"Ready")
	PKCG A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip", 40, "Ready")
	Goto Reload+5
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip", 52, "Ready")
	TNT1 A 0 A_JumpIfInventory("Clip", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunTechnicalMod",1,"Reload1")
    CHGG C 3
    CHGG D 3
    CHGG E 3
    CHGG F 3 A_PlaySound("weapons/assaultchaingununload", 5)
    CHGG F 3
	Goto ReloadWorking
  Reload1:
    CHGG C 2
    CHGG D 2
    CHGG E 2
    CHGG F 3 A_PlaySound("weapons/assaultchaingununload", 5)
    CHGG F 3
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Clip", 1)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip",40,3)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunClip",52,2)
	TNT1 A 0 A_JumpIfInventory("Clip",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/assaultchaingunload", 7)
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunTechnicalMod",1,"ReloadFinish1")
    CHGG G 3
    CHGG F 3
    CHGG E 3
    CHGG D 3
    CHGG C 3
	Goto ReloadSpin
  ReloadFinish1:
    CHGG G 2
    CHGG F 2
    CHGG E 2
    CHGG D 3
    CHGG C 3
	Goto ReloadSpin
  ReloadSpin:
    TNT1 A 0 A_PlaySound("weapons/assaultchaingunwinddown", 6)
	PKCG AB 3
	PKCG CD 4
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	PKCG AB 5
	PKCG CD 6
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunState",1,4)
    PKCF A 1 Bright A_Light2
    PKCF B 1 Bright A_Light1
	TNT1 A 0
    Goto LightDone
    PKCF C 1 Bright A_Light2
    PKCF D 1 Bright A_Light1
	TNT1 A 0
    Goto LightDone
  Spawn:
    MGUN A -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLAssaultRifleChaingun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLAssaultRifleChaingunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunState : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLAssaultRifleChaingunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 52
   Inventory.Icon ""
}

ACTOR RLAssaultRifleChaingunPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		MGUN A -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/assaultchaingunpickup")
		TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvAssault Chaingun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Clip",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Assault Chaingun =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Clip",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Clip",40)
		Stop
	AmmoFull:
		MGUN A 1
		Fail
	}
}

ACTOR DroppedRLAssaultRifleChaingun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		MGUN A 1
		Loop
	Death:
		TNT1 A 0
		MGUN A 1 A_SpawnItem("RLAssaultRifleChaingunPickup",0,0,0,0)
		Stop
	}
}
