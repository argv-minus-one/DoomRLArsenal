
ACTOR RLDemolitionAmmoMinigun : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was transformed into a fine spray by %k's minigun."
  Inventory.Pickupmessage "You picked up a Demolition Ammo Minigun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Demolition Ammo Minigun"
  Weapon.Kickback 40
  Weapon.SelectionOrder 25
  Weapon.SlotNumber 4
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLDemolitionAmmoMinigunClip"
  Weapon.AmmoType2 "Clip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunState",1)
    ZGGG A 1 A_WeaponReady (48)
	Goto Ready+2
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLDemolitionAmmoMinigun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLDemolitionAmmoMinigun",1)
	Stop
  AfterModDrop:
    ZGGG A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    ZGGG A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
    TNT1 A 0 A_ClearReFire
	TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    ZGGG A 2 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    ZGGG A 2 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
  FireWindUp:
	ZGGG B 4 A_PlaySound("weapons/demominigunwindup", 6)
	ZGGG CD 3
	ZGGG AB 3
	ZGGG CD 2
	ZGGG ABCD 1
    Goto FireStart
  Hold:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
  FireStart:
    TNT1 A 0 A_PlaySound("weapons/demominigunspin", 6, 1, 1)
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunAmmochain",1)
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 2, -1, 5, "RLDemoMinigunPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 2, -1, 5, "RLDemoMinigunPuff", "None")
    Goto FireFinish
  FireFinish:
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunState",1,"FireState")
    TNT1 A 0 A_PlaySound("weapons/demominigun", CHAN_WEAPON, 1, 0, 0.7)
    ZGGF A 1 Bright A_GunFlash
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunAmmochain",4,2)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunAmmochain",4)
	TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunState",1)
    Goto FireStart
  FireState:
    ZGGF B 1 Bright A_GunFlash
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunState",1)
	TNT1 A 0 A_JumpIfNoAmmo(2)
    ZGGG A 0 A_ReFire
  WindDown:
	ZGGG A 2 A_PlaySound("weapons/demominigunwinddown", 6)
	ZGGG BC 2
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	ZGGG D 2
	ZGGG ABC 3
	TNT1 A 0 A_JumpIfNoAmmo(2)
	TNT1 A 0 A_WeaponReady(WRF_NOBOB | WRF_NOSWITCH)
	ZGGG DAB 4
	ZGGG CD 2
	Goto Ready
  Reload:
    TNT1 A 0 A_ClearReFire
	ZGGG A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunClip", 200, "Ready")
	TNT1 A 0 A_JumpIfInventory("Clip", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_StopSound(6)
    ZGGR A 5
    ZGGR B 5
    ZGGR C 5
    ZGGR D 5
    ZGGR E 5
    ZGGR F 5
    ZGGR G 5 A_PlaySound("weapons/demominigununload", 5)
    ZGGR G 5
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Clip", 1)
	TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunClip",200,2)
	TNT1 A 0 A_JumpIfInventory("Clip",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/demominigunload", 7)
    ZGGR H 8
    ZGGR G 5
    ZGGR F 5
    ZGGR E 5
    ZGGR D 5
    ZGGR C 5
    ZGGR B 5
    ZGGR A 5
	Goto ReloadSpin
  ReloadSpin:
	TNT1 A 0 A_PlaySound("weapons/demominigunwinddown", 6)
	ZGGG A 3
	ZGGG B 3
	ZGGG C 3
	ZGGG D 4
	ZGGG A 4
	ZGGG B 4
	ZGGG C 5
	ZGGG D 5
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigunState",1,2)
    TNT1 A 1 A_Light2
    Goto LightDone
    TNT1 A 1 A_Light1
    Goto LightDone
  Spawn:
    ZGGP A -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3,4)
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLDemolitionAmmoMinigun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLDemoMinigunPuff
{ 
   +NOGRAVITY
   +NOBLOCKMAP
   +PUFFONACTORS
   +PUFFGETSOWNER
   +RANDOMIZE
   +THRUGHOST
   RenderStyle Add
   Alpha 0.9
   Mass 5
   Scale 0.6
   Decal "RevenantScorch"
   Damagetype "Fire"
   States
   {
   Spawn:
      TNT1 A 0
      TNT1 A 0 A_PlaySound("weapons/minigunexp", 7, 0.5, 0, 0.5)
      TNT1 A 0 A_Explode (20,16, 0, 1)
      MICX ABCDEFG 2 Bright
      Stop
   }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLDemolitionAmmoMinigunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoMinigunState : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoMinigunAmmochain : Inventory
{
inventory.maxamount 4
}

ACTOR RLDemolitionAmmoMinigunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 200
   Inventory.Icon ""
}

ACTOR RLDemolitionAmmoMinigunPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		ZGGP A -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLDemolitionAmmoMinigun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/demominigunpickup")
		TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvDemolition Ammo Minigun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Clip",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv=M= Demolition Ammo Minigun =M=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Clip",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Clip",200)
		Stop
	AmmoFull:
		ZGGP A 1
		Fail
	}
}

ACTOR DroppedRLDemolitionAmmoMinigun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		ZGGP A 1
		Loop
	Death:
		TNT1 A 0
		ZGGP A 1 A_SpawnItem("RLDemolitionAmmoMinigunPickup",0,0,0,0)
		Stop
	}
}
