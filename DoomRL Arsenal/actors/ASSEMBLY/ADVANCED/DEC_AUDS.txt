
ACTOR RLAutoDoubleShotgun : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was crushed by %k's auto double shotgun."
  Inventory.Pickupmessage "You picked up an auto double shotgun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Auto Double Shotgun"
  Weapon.Kickback 40
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 3
  Weapon.AmmoUse1 2
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLAutoDoubleShotgunClip"
  Weapon.AmmoType2 "Shell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunNanoMod",1,"NanoRegenCheck")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,"Ready2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,"Ready2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,"Ready1")
    AUTD G 1 A_WeaponReady (48)
    Loop
  Ready1:
    AUTD E 1 A_WeaponReady (48)
    Loop
  Ready2:
    AUTD A 1 A_WeaponReady (48)
    Loop
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",1,"NanoRegenCheckBegin")
    AUTD G 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    AUTD G 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip", 20, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunClip", 1)
    AUTD G 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAutoDoubleShotgun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLAutoDoubleShotgun",1)
	Stop
  AfterModDrop:
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,5)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,4)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,2)
    AUTD G 8 A_WeaponReady (16)
    Goto Ready
    AUTD E 8 A_WeaponReady (16)
    Goto Ready
    AUTD A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    AUTD A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,5)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,4)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,2)
    AUTD G 1 A_Lower
    Goto DeselectLoop
    AUTD E 1 A_Lower
    Goto DeselectLoop
    AUTD A 1 A_Lower
    Goto DeselectLoop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,5)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,4)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,2)
    AUTD G 1 A_Raise
    Goto SelectLoop
    AUTD E 1 A_Raise
    Goto SelectLoop
    AUTD A 1 A_Raise
    Goto SelectLoop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunAmmochain",1)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAgilityMod",1,"FireA")
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (12, 7.5, 10, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (12, 7.5, 10, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_FireBullets (12, 7.5, 15, 5, "RLBulletPuff")
    Goto FireFinish
  FireP:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeP")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (12, 7.5, 10, 6, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (12, 7.5, 10, 6, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeP:
	TNT1 A 0 A_FireBullets (12, 7.5, 15, 6, "RLBulletPuff")
    Goto FireFinish
  FireA:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeA")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (11.5, 7, 10, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (11.5, 7, 10, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeA:
	TNT1 A 0 A_FireBullets (11.5, 7, 15, 5, "RLBulletPuff")
    Goto FireFinish
  FireS:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeS")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,3)
	TNT1 A 0 A_FireBullets (10, 5.5, 9, 5, "RLBulletPuff")
	TNT1 A 0 A_FireBullets (0, 0, -1, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (10, 5.5, 9, 5, "RLBulletPuff", "None")
	TNT1 A 0 A_FireBullets (0, 0, -1, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeS:
	TNT1 A 0 A_FireBullets (10, 5.5, 14, 5, "RLBulletPuff")
	TNT1 A 0 A_FireBullets (0, 0, -1, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/autodoubleshotgun", CHAN_WEAPON)
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -4, 0, Sin(Pitch) * 4, 1)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunFirestormMod",1,"FireFinishF")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,"FireFinish2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,"FireFinish2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,"FireFinish1")
    AUTD G 4 A_GunFlash
    AUTD G 4
    Goto FireFinishAmmochain
  FireFinish1:
    AUTD E 4 A_GunFlash
    AUTD F 2
    AUTD G 2
    Goto FireFinishAmmochain
  FireFinish2:
    AUTD A 4 A_GunFlash
    AUTD B 2
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,2)
    AUTD C 2
    Goto FireFinishAmmochain
    AUTD D 2
    Goto FireFinishAmmochain
  FireFinishF:
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,"FireFinish2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,"FireFinish2")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,"FireFinish1")
    AUTD G 2 A_GunFlash
    Goto FireFinishAmmochain
  FireFinishF1:
    AUTD E 1 A_GunFlash
    AUTD F 1
    AUTD G 1
    Goto FireFinishAmmochain
  FireFinishF2:
    AUTD A 2 A_GunFlash
    AUTD B 1
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,2)
    AUTD C 1
    Goto FireFinishAmmochain
    AUTD D 1
    Goto FireFinishAmmochain
  FireFinishAmmochain:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunAmmochain",4,1)
    Goto Ready
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunAmmochain",4)
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunNanoMod",1,"Ready")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip", 20, "Ready")
	Goto Reload+4
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip", 26, "Ready")
	TNT1 A 0 A_JumpIfInventory("Shell", 1, 1)
	Goto Ready
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,"ReloadSecondarySequence")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",5,"ReloadSecondarySequence")
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",3,"ReloadTertiarySequence")
	TNT1 A 0 // Play the reload animation.
  ReloadMainSequence:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunTechnicalMod",1,"Reload1")
    AUTD H 4
    AUTD I 4
    AUTD J 4
    AUTD K 4
    AUTD L 4
	TNT1 A 0 A_PlaySound("weapons/autodoubleshotgunload", 6)
	Goto ReloadWorking
  Reload1:
    AUTD H 4
    AUTD I 4
    AUTD J 3
    AUTD K 3
    AUTD L 3
	TNT1 A 0 A_PlaySound("weapons/autodoubleshotgunload", 6)
	Goto ReloadWorking
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Shell", 1)
	TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",20,9)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunClip",26,7)
	TNT1 A 0 A_JumpIfInventory("Shell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunTechnicalMod",1,"ReloadFinish1")
    AUTD M 15
    AUTD N 4
    AUTD O 4
    AUTD P 4
    AUTD Q 4
	Goto Ready
  ReloadFinish1:
    AUTD M 15
    AUTD N 4
    AUTD O 3
    AUTD P 3
    AUTD Q 3
	Goto Ready
  ReloadSecondarySequence:
    AUTD Q 4
    AUTD P 4
    AUTD O 4
    AUTD N 4
    AUTD M 4
	TNT1 A 0 A_PlaySound("weapons/autodoubleshotgununload", 5)
    AUTD L 7
    AUTD K 4
    AUTD J 4
    AUTD I 4
    AUTD H 4
    AUTD G 20
	Goto ReloadMainSequence
  ReloadTertiarySequence:
    AUTD E 2
    AUTD F 2
    AUTD G 2
	Goto ReloadMainSequence
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunFirestormMod",1,3)
    AUTD R 2 Bright A_Light1
    AUTD S 2 Bright A_Light2
    Goto LightDone
    AUTD R 1 Bright A_Light1
    AUTD S 1 Bright A_Light2
    Goto LightDone
  Spawn:
    AUTD X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  CancelAssembly:
	TNT1 A 0 A_Print("Assembly canceled.")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLAutoDoubleShotgun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLAutoDoubleShotgunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunAmmochain : Inventory
{
inventory.maxamount 4
}

Actor RLAutoDoubleShotgunModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLAutoDoubleShotgunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 26
   Inventory.Icon ""
}

ACTOR RLAutoDoubleShotgunPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		AUTD X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/autodoubleshotgunpickup")
		TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvAuto Double Shotgun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Shell",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Auto Double Shotgun =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Shell",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Shell",20)
		Stop
	AmmoFull:
		AUTD X 1
		Fail
	}
}

ACTOR DroppedRLAutoDoubleShotgun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		AUTD X 1
		Loop
	Death:
		TNT1 A 0
		AUTD X 1 A_SpawnItem("RLAutoDoubleShotgunPickup",0,0,0,0)
		Stop
	}
}
