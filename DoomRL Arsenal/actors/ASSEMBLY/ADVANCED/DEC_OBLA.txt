
ACTOR RLOverchargedBlaster : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was pierced by %k's overcharged blaster."
  Inventory.Pickupmessage "You picked up a Overcharged Blaster."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Overcharged Blaster"
  Weapon.Kickback 40
  Weapon.SelectionOrder 1899
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 0
  Weapon.AmmoGive1 0
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    OBLA A 1 A_WeaponReady (WRF_ALLOWZOOM)
	Loop
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterFirestormMod", 1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLOverchargedBlaster",0,0,0)
	TNT1 A 1 A_TakeInventory("RLOverchargedBlaster",1)
	Stop
  AfterModDrop:
    OBLA A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    OBLA A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    OBLA D 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLOverchargedBlasterSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    OBLA D 1 A_Raise
    Loop
  Fire:
    OBLA A 2
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*32), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 2, 1, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((256), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 2, 1, 0, 3, 1, 10)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*40), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 2, 1, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((320), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 2, 1, 0, 3, 1, 10)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*32), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 1.5, 0.5, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((256), 0, 1, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 1.5, 0.5, 0, 3, 1, 10)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*32), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((256), 0, 0, "none", "Red", RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/overchargedblaster", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterFirestormMod",1,"FireFinishF1")
    OBLA E 4 Bright A_GunFlash
    OBLA A 2
    OBLA B 2
    OBLA C 2
    OBLA D 4
    OBLA C 6
    OBLA D 4
    OBLA C 6
    OBLA D 4
    OBLA C 6
    OBLA B 2
    OBLA A 2
	Goto Ready
  FireFinishF1:
    OBLA E 2 Bright A_GunFlash
    OBLA A 2
    OBLA B 2
    OBLA C 2
    OBLA D 3
    OBLA C 5
    OBLA D 3
    OBLA C 5
    OBLA D 3
    OBLA C 5
    OBLA B 2
    OBLA A 2
	Goto Ready
  Flash:
    TNT1 A 2 A_Light2
    TNT1 A 1 A_Light1
    Goto LightDone
  Spawn:
    OBLA X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLOverchargedBlasterFirestormMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLOverchargedBlaster",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLOverchargedBlasterSelected : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLOverchargedBlasterPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		OBLA X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLOverchargedBlaster",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/overchargedblasterpickup")
		TNT1 A 0 A_GiveInventory("RLOverchargedBlaster",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvOvercharged Blaster.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Overcharged Blaster =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLOverchargedBlaster
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		OBLA X 1
		Loop
	Death:
		TNT1 A 0
		OBLA X 1 A_SpawnItem("RLOverchargedBlasterPickup",0,0,0,0)
		Stop
	}
}
