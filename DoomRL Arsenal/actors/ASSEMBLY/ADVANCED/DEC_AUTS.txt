
ACTOR RLAutoshotgun : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was abolished by %k's autoshotgun."
  Inventory.Pickupmessage "You picked up an autoshotgun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Autoshotgun"
  Weapon.Kickback 40
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 3
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLAutoshotgunClip"
  Weapon.AmmoType2 "Shell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunNanoMod",1,2)
    AUTS A 1 A_WeaponReady (48)
    Loop
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip",1,2)
    AUTS A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    AUTS A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip", 20, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip", 26, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLAutoshotgunClip", 1)
    AUTS A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAutoshotgun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLAutoshotgun",1)
	Stop
  AfterModDrop:
    AUTS A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    AUTS A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    AUTS A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLAutoshotgunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    AUTS A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_GiveInventory("RLAutoshotgunAmmochain",1)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAgilityMod",1,"FireA")
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6.5, 3, 5, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6.5, 3, 5, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_FireBullets (6.5, 3, 8, 5, "RLBulletPuff")
    Goto FireFinish
  FireP:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeP")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6.5, 3, 5, 6, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6.5, 3, 5, 6, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeP:
	TNT1 A 0 A_FireBullets (6.5, 3, 8, 6, "RLBulletPuff")
    Goto FireFinish
  FireA:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeA")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 2.5, 5, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 2.5, 5, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeA:
	TNT1 A 0 A_FireBullets (6, 2.5, 8, 5, "RLBulletPuff")
    Goto FireFinish
  FireS:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeS")
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,3)
	TNT1 A 0 A_FireBullets (4.5, 1, 4, 5, "RLBulletPuff")
	TNT1 A 0 A_FireBullets (0, 0, -1, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (4.5, 1, 4, 5, "RLBulletPuff", "None")
	TNT1 A 0 A_FireBullets (0, 0, -1, 5, "RLBulletPuff", "None")
    Goto FireFinish
  FireRenegadeS:
	TNT1 A 0 A_FireBullets (4.5, 1, 8, 5, "RLBulletPuff")
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/autoshotgun", CHAN_WEAPON)
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -2, 0, Sin(Pitch) * 2, 1)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunFirestormMod",1,"FireFinish2")
    AUTS B 2 Bright A_GunFlash
    AUTS C 2 Bright
    AUTS A 2
    Goto FireFinish2+3
  FireFinish2:
    AUTS B 1 Bright A_GunFlash
    AUTS C 1 Bright
    AUTS D 1
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunAmmochain",4,1)
    Goto Ready
	TNT1 A 0 A_TakeInventory("RLAutoshotgunAmmochain",4)
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunNanoMod",1,"Ready")
	AUTS A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip", 20, "Ready")
	Goto Reload+5
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip", 26, "Ready")
	TNT1 A 0 A_JumpIfInventory("Shell", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunTechnicalMod",1,"Reload1")
    AUTS D 4
    AUTS E 4
    AUTS F 4
	TNT1 A 0 A_PlaySound("weapons/autoshotgununload", 5)
    AUTS G 4
    AUTS H 4
    AUTS I 4
    AUTS J 4
    TNT1 A 35
	Goto ReloadWorking
  Reload1:
    AUTS D 3
    AUTS E 3
    AUTS F 3
	TNT1 A 0 A_PlaySound("weapons/autoshotgununload", 5)
    AUTS G 4
    AUTS H 4
    AUTS I 4
    AUTS J 4
    TNT1 A 35
	Goto ReloadWorking
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Shell", 1)
	TNT1 A 0 A_GiveInventory("RLAutoshotgunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip",20,9)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunClip",26,7)
	TNT1 A 0 A_JumpIfInventory("Shell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_JumpIfInventory("RLAutoshotgunTechnicalMod",1,"ReloadFinish1")
    AUTS J 2
    AUTS I 2
    AUTS H 2
    AUTS G 2
	TNT1 A 0 A_PlaySound("weapons/autoshotgunload", 6)
    AUTS F 2
    AUTS E 2
    AUTS D 2
    AUTS A 7 A_ReFire
	Goto Ready
  ReloadFinish1:
    AUTS J 2
    AUTS I 1
    AUTS K 1
    AUTS L 1
	TNT1 A 0 A_PlaySound("weapons/autoshotgunload", 6)
    AUTS F 2
    AUTS E 2
    AUTS D 2
    AUTS A 7 A_ReFire
	Goto Ready
  Flash:
    TNT1 A 2 A_Light1
    TNT1 A 2 A_Light2
    Goto LightDone
  Spawn:
    AUTS X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  CancelAssembly:
	TNT1 A 0 A_Print("Assembly canceled.")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLAutoshotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLAutoshotgun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLAutoshotgunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunAmmochain : Inventory
{
inventory.maxamount 4
}

Actor RLAutoshotgunModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLAutoshotgunSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLAutoshotgunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 26
   Inventory.Icon ""
}

ACTOR RLAutoshotgunPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		AUTS X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLAutoshotgun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/autoshotgunpickup")
		TNT1 A 0 A_GiveInventory("RLAutoshotgun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvAutoshotgun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Shell",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Autoshotgun =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Shell",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Shell",20)
		Stop
	AmmoFull:
		AUTS X 1
		Fail
	}
}

ACTOR DroppedRLAutoshotgun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		AUTS X 1
		Loop
	Death:
		TNT1 A 0
		AUTS X 1 A_SpawnItem("RLAutoshotgunPickup",0,0,0,0)
		Stop
	}
}
