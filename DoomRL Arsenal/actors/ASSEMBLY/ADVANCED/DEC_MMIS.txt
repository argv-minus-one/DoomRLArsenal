
ACTOR RLMiniMissilePistol : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was punted by %k's mini-rocket."
  Inventory.Pickupmessage "You picked up a mini-missile pistol."
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Mini-missile Pistol"
  Weapon.Kickback 40
  Weapon.SelectionOrder 2900
  Weapon.SlotNumber 5
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLMiniMissilePistolClip"
  Weapon.AmmoType2 "RocketAmmo"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolNanoMod",1,2)
    FRGN A 1 A_WeaponReady (WRF_ALLOWRELOAD | WRF_ALLOWZOOM)
    Loop
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolClip",1,2)
    FRGN A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    FRGN A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolClip", 6, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolClip", 8, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLMiniMissilePistolClip", 1)
    FRGN A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLMiniMissilePistol",0,0,0)
	TNT1 A 1 A_TakeInventory("RLMiniMissilePistol",1)
	Stop
  AfterModDrop:
    FRGN A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    FRGN A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    FRGN A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLMiniMissilePistolSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    FRGN A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
    FRGN A 3
    FRGN B 3 Bright A_GunFlash
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolFirestormMod",1,"FireF")
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissile", frandom(1,-1), 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileSharpshooter", frandom(1,-1), 1)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileP", frandom(1,-1), 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissilePSharpshooter", frandom(1,-1), 1)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileA", frandom(1,-1), 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileASharpshooter", frandom(1,-1), 1)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileS", frandom(1,-1), 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileSSharpshooter", frandom(1,-1), 1)
    Goto FireFinish
  FireF:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileF", frandom(1,-1), 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLMiniMissileFSharpshooter", frandom(1,-1), 1)
    Goto FireFinish
  FireFinish:
    FRGN CD 3 Bright
    FRGN A 2
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolNanoMod",1,"Ready")
    FRGN A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolClip", 6, "Ready")
	Goto Reload+5
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolClip", 8, "Ready")
	TNT1 A 0 A_JumpIfInventory("RocketAmmo", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolTechnicalMod",1,"Reload1")
    FRGN E 3
    FRGN F 3
    FRGN G 3
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolopen", 5)
    FRGN H 3
    FRGN I 3
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolload", 6)
    FRGN J 3
	Goto ReloadWorking
  Reload1:
    FRGN E 2
    FRGN F 2
    FRGN G 2
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolopen", 5)
    FRGN H 3
    FRGN I 3
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolload", 6)
    FRGN J 3
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("RocketAmmo", 1)
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolBulkMod",1,3)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolClip", 8)
	TNT1 A 0 A_GiveInventory("RLMiniMissilePistolClip", 6)
	Goto ReloadWorking+6
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolClip", 8)
	TNT1 A 0 A_GiveInventory("RLMiniMissilePistolClip", 8)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolTechnicalMod",1,"ReloadFinish1")
    FRGN K 3
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolclose", 7)
    FRGN G 3
    FRGN F 3
    FRGN E 3
    FRGN A 7 A_ReFire
	Goto Ready
  ReloadFinish1:
    FRGN K 3
	TNT1 A 0 A_PlaySound("weapons/minimissilepistolclose", 7)
    FRGN G 2
    FRGN F 2
    FRGN E 2
    FRGN A 7 A_ReFire
	Goto Ready
  Flash:
    TNT1 A 3 A_Light1
    TNT1 A 3 A_Light2
    TNT1 A 3 A_Light1
    Goto LightDone
  Spawn:
    FRGN X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLMiniMissilePistolNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLMiniMissilePistol",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLMiniMissile : Rocket
{
  Radius 5
  Height 3
  Scale 0.7
  Speed 20
  Decal "RevenantScorch"
  Damage 10
  Damagetype "Fire"
  SeeSound "weapons/minimissilepistol"
  DeathSound "weapons/smallexp"
  Species "Player"
  +THRUSPECIES
  -DEHEXPLOSION
  -ROCKETTRAIL
  +THRUGHOST
  States
  {
  Spawn:
    FLAR A 1 Bright
    Loop
  Death:
    FREX A 6 Bright A_Explode (32,64)
    FREX B 4 Bright
    FREX C 2 Bright
    Stop
  }
}

ACTOR RLMiniMissileP : RLMiniMissile
{
  States
  {
  Death:
    FREX A 6 Bright A_Explode (48,64)
    FREX B 4 Bright
    FREX C 2 Bright
    Stop
  }
}

ACTOR RLMiniMissileA : RLMiniMissile
{
  Speed 25
}

ACTOR RLMiniMissileS : RLMiniMissile
{
  States
  {
  Spawn:
	TNT1 A 0 A_CustomMissile("RLRocketSmoke", 8, 0, 0)
    FLAR A 4 Bright A_ScaleVelocity(1.10)
    Loop
  }
}

ACTOR RLMiniMissileF : RLMiniMissile
{
  States
  {
  Death:
	TNT1 A 0 A_SetScale (1.00)
    FREX A 6 Bright A_Explode (32,128)
    FREX B 4 Bright
    FREX C 2 Bright
    Stop
  }
}

//-------------------------------------------------------------------
//		SHARPSHOOTER PROJECTILES

ACTOR RLMiniMissileSharpshooter : RLMiniMissile
{
  Damage (80)
}

ACTOR RLMiniMissilePSharpshooter : RLMiniMissileP
{
  Damage (80)
}

ACTOR RLMiniMissileASharpshooter : RLMiniMissileA
{
  Damage (80)
}

ACTOR RLMiniMissileSSharpshooter : RLMiniMissileS
{
  Damage (80)
}

ACTOR RLMiniMissileFSharpshooter : RLMiniMissileF
{
  Damage (80)
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLMiniMissilePistolSelected : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLMiniMissilePistolClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 8
   Inventory.Icon ""
}

ACTOR RLMiniMissilePistolPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		FRGN X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistol",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/minimissilepistolpickup")
		TNT1 A 0 A_GiveInventory("RLMiniMissilePistol",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvMini-missile Pistol.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("RocketAmmo",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Mini-missile Pistol =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RocketAmmo",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("RocketAmmo",1)
		Stop
	AmmoFull:
		FRGN X 1
		Fail
	}
}

ACTOR DroppedRLMiniMissilePistol
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		FRGN X 1
		Loop
	Death:
		TNT1 A 0
		FRGN X 1 A_SpawnItem("RLMiniMissilePistolPickup",0,0,0,0)
		Stop
	}
}
