
ACTOR RLStormBlaster : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was jolted by %k's storm blaster."
  Inventory.Pickupmessage "You picked up a Storm Blaster."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Storm Blaster"
  Weapon.Kickback 40
  Weapon.SelectionOrder 1899
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLStormBlasterClip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    Goto NanoRegenCheck
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",1,2)
    BLAS C 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS B 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS A 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip", 15, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip", 20, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLStormBlasterClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 6 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS B 6 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS A 6 A_WeaponReady (32)
    Goto NanoRegenCheckBegin
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLStormBlaster",0,0,0)
	TNT1 A 1 A_TakeInventory("RLStormBlaster",1)
	Stop
  AfterModDrop:
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 8 A_WeaponReady (16)
	Goto Ready
    BLAS B 8 A_WeaponReady (16)
	Goto Ready
    BLAS A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 8 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
	Goto Ready
    BLAS B 8 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
	Goto Ready
    BLAS A 8 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    BLAS D 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLStormBlasterSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    BLAS D 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Ready")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 2
	Goto FireBegin
    BLAS B 2
	Goto FireBegin
    BLAS A 2
	Goto FireBegin
  FireBegin:
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (6.5, 4, 2, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6.5, 4, 2, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (6.5, 4, 2, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6.5, 4, 2, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (6, 4, 2, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (6, 4, 2, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (4.5, 2, 2, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (4.5, 2, 2, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/blaster", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterFirestormMod",1,"FireFinishF1")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS G 3 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS F 3 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS E 3 Bright A_GunFlash
	Goto FireFinishFinal
  FireFinishF1:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",5,2)
    BLAS G 2 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS F 2 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS E 2 Bright A_GunFlash
	Goto FireFinishFinal
  FireFinishFinal:
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterFirestormMod",1,"FireFinishFinalF1")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterClip",5,2)
    BLAS C 6
	Goto Ready
    BLAS B 6
	Goto Ready
    BLAS A 6
	Goto Ready
  FireFinishFinalF1:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",10,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",5,2)
    BLAS C 4
	Goto Ready
    BLAS B 4
	Goto Ready
    BLAS A 4
	Goto Ready
  Flash:
    TNT1 A 2 A_Light2
    TNT1 A 1 A_Light1
    Goto LightDone
  Spawn:
    BLAS X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLStormBlasterNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3)
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLStormBlaster",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLStormBlasterSelected : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLStormBlasterClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 20
   Inventory.Icon ""
}

ACTOR RLStormBlasterPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		BLAS X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLStormBlaster",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/stormblasterpickup")
		TNT1 A 0 A_GiveInventory("RLStormBlaster",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cvStorm Blaster.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Storm Blaster =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLStormBlaster
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		BLAS X 1
		Loop
	Death:
		TNT1 A 0
		BLAS X 1 A_SpawnItem("RLStormBlasterPickup",0,0,0,0)
		Stop
	}
}
