
Actor RLUseBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLUsePowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseSniperMod : Inventory
{
inventory.maxamount 1
}

Actor RLUseOnyxMod : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBulkMod
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		BMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBulkModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLPowerMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		PMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPowerModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLAgilityMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		AMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLAgilityModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLTechnicalMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		TMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTechnicalModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLNanoMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		NMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanoModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLFirestormMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		FMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFirestormModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLSniperMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		SMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLSniperModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLOnyxMod : DroppedRLBulkMod
{
	States
	{
	Spawn:
		OMOD ABCDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOnyxModItem",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		ASSEMBLY LEARNT TOKENS

//-------------------------------------------------------------------
//		BASIC

Actor RLChainswordAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPiercingBladeAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSilencedPistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLShredderPistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSpeedloaderPistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHighPowerWeaponAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLElephantGunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHeavyShotgunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaticShrapnelAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTacticalShotgunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLGatlingGunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLMicroLauncherAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		ADVANCED

Actor RLDoubleChainsawAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLStormPistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaPistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLAutoshotgunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNanoShrapnelAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLFocusedDoubleShotgunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBulletstormChaingunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLAssaultRifleAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBurstCannonAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTacticalRocketLauncherAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLGrenadeLauncherAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHyperblasterAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaRifleMkIIAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLVBFG9000AssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLMiniMissilePistolAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		MASTER

Actor RLRipperAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLDemolitionAmmoAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNanomanufactureAmmoAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLMotherInLawAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaRefractorAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBiggestFuckingGunAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLAutocannonAssemblyLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		EXOTIC MOD EFFECTS

Actor RLJackhammerNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLJackhammerFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLJackhammerSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLRailgunNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRailgunFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRailgunSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLMysteriousMagnumNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLMysteriousMagnumFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLMysteriousMagnumSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLBFG10KNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBFG10KFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBFG10KSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLUnknownHeraldNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLUnknownHeraldFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLUnknownHeraldSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLFragShotgunNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLFragShotgunFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLFragShotgunSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLQuadShotgunNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLQuadShotgunFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLQuadShotgunSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLLightweaverNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLLightweaverFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLLightweaverSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLTrigunNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTrigunFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTrigunSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLGrammatonClericBerettaNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLGrammatonClericBerettaFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLGrammatonClericBerettaSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLAntiFreakJackalNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLAntiFreakJackalFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLAntiFreakJackalSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLTantrumCannonNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTantrumCannonFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLTantrumCannonSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLRevenantsLauncherNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRevenantsLauncherFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRevenantsLauncherSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLNullPointerNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNullPointerFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNullPointerSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLParticleBeamCannonNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLParticleBeamCannonFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLParticleBeamCannonSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLPlasmaRedirectionCannonNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaRedirectionCannonFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLPlasmaRedirectionCannonSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLSteelBeastNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSteelBeastFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSteelBeastSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLHellsReignNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHellsReignFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHellsReignSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLSussGunNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSussGunFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLSussGunSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLJudgeOfTheDeadNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLJudgeOfTheDeadFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLJudgeOfTheDeadSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLHurricaneCannonNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHurricaneCannonFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLHurricaneCannonSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLNeuralStunnerNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNeuralStunnerFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLNeuralStunnerSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLBaronBlasterNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBaronBlasterFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLBaronBlasterSniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


Actor RLRealityDistortionArrayNanoLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRealityDistortionArrayFirestormLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}

Actor RLRealityDistortionArraySniperLearntToken : Inventory
{
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
inventory.maxamount 1
}


//-------------------------------------------------------------------
//		BULK MOD

ACTOR RLBulkModItem : CustomInventory 16500
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  Tag "Bulk Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "BMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Bulk Mod Pack."
  States
  {
  Spawn:
    BMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseBulkMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseBulkMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Bulk Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Bulk Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLChainsawSelected",1,"RLChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSelected",1,"RLNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000Selected",1,"RLNuclearBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"AdvancedWeapon")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSelected",1,"RLHighPowerBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSelected",1,"RLHighPowerNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSelected",1,"RLHighPowerNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// HAHAHA PLEASE GOD NO
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000Selected",1,"RLHighPowerNuclearBFG9000")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawSelected",1,"RLDoubleChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterSelected",1,"RLStormBlaster")
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolSelected",1,"RLStormNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolSelected",1,"RLSuperchargedNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000Selected",1,"RLNuclearVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSelected",1,"RLAssaultRifleNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSelected",1,"RLBurstCannonNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
// Nano Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSelected",1,"RLNanoShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSelected",1,"RLNanoShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSelected",1,"RLNanoShrapnelSuperShotgun")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLChainsaw:
  RLDoubleChainsaw:
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",1,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawAgilityMod",1,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",1,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",3,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",2,1)
    Goto RLRipperAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawConfirm", 1) // Double Chainsaw
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDouble Chainsaw? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChainsawModding
  RLRipperAssembly:
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",1,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawAgilityMod",1,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",3,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",2,1)
    Goto RLChainsawModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",1,1)
    Goto RLChainsawModding
    TNT1 A 0 A_GiveInventory("RLRipperConfirm", 1) // Ripper
    TNT1 A 0 A_GiveInventory("RLRipperAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvRipper? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChainsawModding
  RLChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChainsawBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPistol:
  RLPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,1)
    Goto RLPistolStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolConfirm", 1) // High Power Pistol
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",2,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,1)
    Goto RLPistolNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLStormPistolConfirm", 1) // Storm Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the Storm Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",3,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,1)
    Goto RLPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",2,1)
    Goto RLPistolModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoPistolConfirm", 1) // Nano Pistol
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLHeavyShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",2,"RLAutoshotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,1)
    Goto RLAutoshotgunAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunConfirm", 1) // Heavy Shotgun
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHeavy Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLAutoshotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",2,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",2,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,1)
    Goto RLShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,1)
    Goto RLShotgunModding
    TNT1 A 0 A_GiveInventory("RLAutoshotgunConfirm", 1) // Autoshotgun
    TNT1 A 0 A_GiveInventory("RLAutoShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAutoshotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLHeavyDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",2,"RLAutoDoubleShotgunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,1)
    Goto RLAutoDoubleShotgunAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunConfirm", 1) // Heavy Double Shotgun
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHeavy Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLAutoDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,1)
    Goto RLDoubleShotgunModding
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunConfirm", 1) // Auto Double Shotgun
    TNT1 A 0 A_GiveInventory("RLAutoShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAuto Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLGatlingGunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,"RLChaingunHighPower")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,1)
    Goto RLChaingunHighPower // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLGatlingGunConfirm", 1) // Gatling Gun
    TNT1 A 0 A_GiveInventory("RLGatlingGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvGatling Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunHighPower:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",2,"RLBulletstormChaingunAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,1)
    Goto RLBulletstormChaingunAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunConfirm", 1) // High Power Chaingun
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLBulletstormChaingunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",3,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,1)
    Goto RLChaingunBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunConfirm", 1) // Bulletstorm Chaingun
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBulletstorm Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",2,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,"RLChaingunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,1)
    Goto RLChaingunNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,1)
    Goto RLChaingunNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunConfirm", 1) // Burst Cannon Chaingun
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",3,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,1)
    Goto RLChaingunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,1)
    Goto RLChaingunModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoChaingunConfirm", 1) // Nano Chaingun
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLRocketLauncherTacticalRocketLauncher:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",3,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",2,1)
    Goto RLRocketLauncherNanoManufactureAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherConfirm", 1) // Tactical Rocket Launcher
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvTactical Rocket Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",3,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",2,1)
    Goto RLRocketLauncherModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoRocketLauncherConfirm", 1) // Nano Rocket Launcher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Rocket Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",2,"RLPlasmaRifleMkIIAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,1)
    Goto RLPlasmaRifleMkIIAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleConfirm", 1) // High Power Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleMkIIAssembly:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",2,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,1)
    Goto RLPlasmaRifleBurstCannon // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,1)
    Goto RLPlasmaRifleBurstCannon
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIConfirm", 1) // Plasma Rifle Mk.II
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Rifle Mk.II? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",2,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,"RLPlasmaRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,1)
    Goto RLPlasmaRifleNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,1)
    Goto RLPlasmaRifleNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleConfirm", 1) // Burst Cannon Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",2,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",3,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,1)
    Goto RLPlasmaRifleModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoPlasmaRifleConfirm", 1) // Nano Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000HighPower:
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000AgilityMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000TechnicalMod",1,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",2,"RLBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",1,1)
    Goto RLBFG9000BiggestFuckingGun // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000Confirm", 1) // High Power BFG9000
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power BFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBFG9000Modding
  RLBFG9000BiggestFuckingGun:
	TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000AgilityMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000TechnicalMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",2,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",2,1)
    Goto RLBFG9000Modding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",1,1)
    Goto RLBFG9000Modding
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunConfirm", 1) // Biggest Fucking Gun
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBiggest Fucking Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBFG9000Modding
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterHighPower:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",1,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"RLBlasterStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,1)
    Goto RLBlasterStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterConfirm", 1) // High Power Blaster
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",2,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",2,"RLBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,1)
    Goto RLBlasterNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",1,1)
    Goto RLBlasterNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLStormBlasterConfirm", 1) // Storm Blaster
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",2,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",3,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,1)
    Goto RLBlasterModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",2,1)
    Goto RLBlasterModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoBlasterConfirm", 1) // Nano Blaster
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",2,"RLCombatPistolStormCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,1)
    Goto RLCombatPistolStormCombatPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolConfirm", 1) // High Power Combat Pistol
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolStormCombatPistol:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",2,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,"RLCombatPistolNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,1)
    Goto RLCombatPistolNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,1)
    Goto RLCombatPistolNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolConfirm", 1) // Storm Combat Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",3,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,1)
    Goto RLCombatPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",2,1)
    Goto RLCombatPistolModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoCombatPistolConfirm", 1) // Nano Combat Pistol
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLDesertEagleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",2,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,1)
    Goto RLDesertEagleStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleConfirm", 1) // High Power Desert Eagle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",2,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,"RLDesertEagleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,1)
    Goto RLDesertEagleNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,1)
    Goto RLDesertEagleNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleConfirm", 1) // Storm Handcannon
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",3,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",2,1)
    Goto RLDesertEagleModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoDesertEagleConfirm", 1) // Nano Desert Eagle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziHighPower:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,"RLUziStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,1)
    Goto RLUziStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerUziConfirm", 1) // High Power Uzi
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,1)
    Goto RLUziBurstCannon // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,1)
    Goto RLUziBurstCannon
    TNT1 A 0 A_GiveInventory("RLStormUziConfirm", 1) // Dual Uzis
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDual Uzis? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,"RLUziNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,1)
    Goto RLUziNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,1)
    Goto RLUziNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziConfirm", 1) // Burst Cannon Uzi
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",3,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,1)
    Goto RLUziModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,1)
    Goto RLUziModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoUziConfirm", 1) // Nano Uzi
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",2,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,1)
    Goto RLBattleRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleConfirm", 1) // High Power Battle Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",2,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",2,"RLBattleRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,1)
    Goto RLBattleRifleNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,1)
    Goto RLBattleRifleNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleConfirm", 1) // Burst Cannon Battle Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst-Fire Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",3,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",2,1)
    Goto RLBattleRifleModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoBattleRifleConfirm", 1) // Nano Battle Rifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterHighPower:
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterFirestormMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSniperMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterAgilityMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterTechnicalMod",1,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterPowerMod",2,"RLTristarBlasterNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterPowerMod",1,1)
    Goto RLTristarBlasterNanoManufactureAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterConfirm", 1) // High Power Tristar Blaster
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Tristar Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLTristarBlasterModding
  RLTristarBlasterNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterFirestormMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",2,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSniperMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterPowerMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterAgilityMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterTechnicalMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",3,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",1,1)
    Goto RLTristarBlasterModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",2,1)
    Goto RLTristarBlasterModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoTristarBlasterConfirm", 1) // Nano Tristar Blaster
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Tristar Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLTristarBlasterModding
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherFirestormMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherNanoMod",2,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSniperMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherPowerMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherAgilityMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherTechnicalMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherBulkMod",3,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherNanoMod",1,1)
    Goto RLMissileLauncherModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherBulkMod",2,1)
    Goto RLMissileLauncherModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoMissileLauncherConfirm", 1) // Nano Missile Launcher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Missile Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMissileLauncherModding
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherFirestormMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherNanoMod",2,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSniperMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherPowerMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherAgilityMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherTechnicalMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherBulkMod",3,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherNanoMod",1,1)
    Goto RLNapalmLauncherModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherBulkMod",2,1)
    Goto RLNapalmLauncherModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoNapalmLauncherConfirm", 1) // Nano Napalm Launcher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Napalm Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNapalmLauncherModding
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunHighPower:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,1)
    Goto RLMinigunBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunConfirm", 1) // High Power Minigun
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",2,"RLMinigunNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,1)
    Goto RLMinigunNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,1)
    Goto RLMinigunNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunConfirm", 1) // Burst Cannon Minigun
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",3,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,1)
    Goto RLMinigunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",2,1)
    Goto RLMinigunModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoMinigunConfirm", 1) // Nano Minigun
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,1)
    Goto RLLaserRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleConfirm", 1) // High Power Laser Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,"RLLaserRifleNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,1)
    Goto RLLaserRifleNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,1)
    Goto RLLaserRifleNanoManufactureAmmo
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleConfirm", 1) // Burst Cannon Laser Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",2,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,1)
    Goto RLLaserRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,1)
    Goto RLLaserRifleModding
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoLaserRifleConfirm", 1) // Nano Laser Rifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",1,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",1,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",2,"RLNuclearPlasmaPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",1,1)
    Goto RLNuclearPlasmaPistolStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolConfirm", 1) // High Power Nuclear Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",2,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",2,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",1,1)
    Goto RLNuclearPlasmaPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",1,1)
    Goto RLNuclearPlasmaPistolModding
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolConfirm", 1) // Storm Nuclear Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaRifle:
  RLNuclearPlasmaRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",2,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",1,1)
    Goto RLNuclearPlasmaRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleConfirm", 1) // High Power Nuclear Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Nuclear Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaRifleModding
  RLNuclearPlasmaRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",2,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",2,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",1,1)
    Goto RLNuclearPlasmaRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",1,1)
    Goto RLNuclearPlasmaRifleModding
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleConfirm", 1) // Burst Cannon Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Nuclear Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaRifleModding
  RLNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearBFG9000:
  RLNuclearBFG9000HighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",1,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000NanoMod",1,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",1,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",1,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000AgilityMod",1,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",2,"RLNuclearBFG9000BiggestFuckingGun")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",1,1)
    Goto RLNuclearBFG9000BiggestFuckingGun // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000Confirm", 1) // High Power Nuclear BFG9000
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you really, really want to assemble the \cvHigh Power Nuclear BFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearBFG9000Modding
  RLNuclearBFG9000BiggestFuckingGun:
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000NanoMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000AgilityMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",2,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",2,1)
    Goto RLNuclearBFG9000Modding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",1,1)
    Goto RLNuclearBFG9000Modding
    TNT1 A 0 A_GiveInventory("RLNuclearBiggestFuckingGunConfirm", 1) // Biggest Fucking Nuclear Gun
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBiggest Fucking Nuclear Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearBFG9000Modding
  RLNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaPistol:
  RLHighPowerNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaRifle:
  RLHighPowerNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearBFG9000:
  RLHighPowerNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLDoubleChainsaw:
  RLDoubleChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormBlaster:
  RLStormBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormBlasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormNuclearPlasmaPistol:
  RLStormNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperchargedNuclearPlasmaPistol:
  RLSuperchargedNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearVBFG9000:
  RLNuclearVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000BulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoshotgun:
  RLAutoshotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoshotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoshotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleNuclearPlasmaRifle:
  RLAssaultRifleNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonNuclearPlasmaRifle:
  RLBurstCannonNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// NANO SHRAPNEL
  RLNanoShrapnelShotgun:
  RLNanoShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelDoubleShotgun:
  RLNanoShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelSuperShotgun:
  RLNanoShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunBulkMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorBulk", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorBulkToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeBulk", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		POWER MOD

ACTOR RLPowerModItem : CustomInventory 16501
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  Tag "Power Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "PMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Power Mod Pack."
  States
  {
  Spawn:
    PMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUsePowerMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUsePowerMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Power Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Power Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUsePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLChainsawSelected",1,"RLChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSelected",1,"RLNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000Selected",1,"RLNuclearBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"AdvancedWeapon")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSelected",1,"RLHighPowerBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSelected",1,"RLHighPowerNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSelected",1,"RLHighPowerNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// HAHAHA PLEASE GOD NO
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000Selected",1,"RLHighPowerNuclearBFG9000")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawSelected",1,"RLDoubleChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterSelected",1,"RLStormBlaster")
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolSelected",1,"RLStormNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterSelected",1,"RLOverchargedBlaster")
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolSelected",1,"RLSuperchargedNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunSelected",1,"RLBulletstormChaingun")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000Selected",1,"RLNuclearVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSelected",1,"RLAssaultRifleNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSelected",1,"RLBurstCannonNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
// Nano Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSelected",1,"RLNanoShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunSelected",1,"RLNanoShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSelected",1,"RLNanoShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSelected",1,"RLNanoShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunSelected",1,"RLNanoShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunSelected",1,"RLNanoShrapnelPlasmaShotgun")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLChainsaw:
  RLDoubleChainsaw:
	TNT1 A 0 A_JumpIfInventory("RLChainsawAgilityMod",1,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",1,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",2,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",2,"RLRipperAssembly")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",1,1)
    Goto RLRipperAssembly // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",1,1)
    Goto RLChainsawModding
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawConfirm", 1) // Double Chainsaw
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDouble Chainsaw? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChainsawModding
  RLRipperAssembly:
	TNT1 A 0 A_JumpIfInventory("RLChainsawAgilityMod",1,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",2,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",2,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",2,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",1,1)
    Goto RLChainsawModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",1,1)
    Goto RLChainsawModding
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",1,1)
    Goto RLChainsawModding
    TNT1 A 0 A_GiveInventory("RLRipperConfirm", 1) // Ripper
    TNT1 A 0 A_GiveInventory("RLRipperAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvRipper? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChainsawModding
  RLChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChainsawPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPistol:
  RLPistolShredderPistol:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolHighPower")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolHighPower // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLShredderPistolConfirm", 1) // Shredder Pistol
    TNT1 A 0 A_GiveInventory("RLShredderPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvShredder Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",2,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,1)
    Goto RLPistolPlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolConfirm", 1) // High Power Pistol
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolPlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,1)
    Goto RLPistolDemolitionAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolDemolitionAmmo
    TNT1 A 0 A_GiveInventory("RLEnergyPistolConfirm", 1) // Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",3,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,1)
    Goto RLPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,1)
    Goto RLPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoPistolConfirm", 1) // Demolition Ammo Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLElephantGunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",2,"RLShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,1)
    Goto RLShotgunPlasmaticShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLElephantGunConfirm", 1) // Elephant Gun
    TNT1 A 0 A_GiveInventory("RLElephantGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvElephant Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",2,"RLShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,1)
    Goto RLShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunConfirm", 1) // Plasmatic Shrapnel Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",2,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",2,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,1)
    Goto RLShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,1)
    Goto RLShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunConfirm", 1) // Nano Shrapnel Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:
  RLTacticalShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",1,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",2,"RLCombatShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,1)
    Goto RLCombatShotgunPlasmaticShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunConfirm", 1) // Tactical Shotgun
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvTactical Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",1,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",2,"RLCombatShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,1)
    Goto RLCombatShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunConfirm", 1) // Plasmatic Shrapnel Combat Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Combat Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",2,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",2,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,1)
    Goto RLCombatShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",1,1)
    Goto RLCombatShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunConfirm", 1) // Nano Shrapnel Combat Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Combat Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLFocusedDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",2,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",2,"RLDoubleShotgunPlasmaticShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,1)
    Goto RLDoubleShotgunPlasmaticShrapnel // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,1)
    Goto RLDoubleShotgunPlasmaticShrapnel
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunConfirm", 1) // Focused Double Shotgun
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvFocused Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",2,"RLDoubleShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,1)
    Goto RLDoubleShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunConfirm", 1) // Plasmatic Shrapnel Double Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,1)
    Goto RLDoubleShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunConfirm", 1) // Nano Shrapnel Double Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunHighPower:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,"RLChaingunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,1)
    Goto RLChaingunBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunConfirm", 1) // High Power Chaingun
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",3,"RLChaingunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",2,1)
    Goto RLChaingunDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunConfirm", 1) // Burst Cannon Chaingun
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",3,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",2,1)
    Goto RLChaingunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,1)
    Goto RLChaingunModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoChaingunConfirm", 1) // Demolition Ammo Chaingun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLMotherInLawAssembly:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,1)
    Goto RLRocketLauncherModding
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,1)
    Goto RLRocketLauncherModding
    TNT1 A 0 A_GiveInventory("RLMotherInLawConfirm", 1) // Mother-In-Law
    TNT1 A 0 A_GiveInventory("RLMotherInLawAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMother-In-Law? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,"RLPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,1)
    Goto RLPlasmaRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleConfirm", 1) // High Power Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",3,"RLPlasmaRefractorAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,1)
    Goto RLPlasmaRefractorAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleConfirm", 1) // Burst Cannon Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRefractorAssembly:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",2,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",3,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",2,1)
    Goto RLPlasmaRifleModding
    TNT1 A 0 A_GiveInventory("RLPlasmaRefractorConfirm", 1) // Plasma Refractor
    TNT1 A 0 A_GiveInventory("RLPlasmaRefractorAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Refractor? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000HighPower:
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000AgilityMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000TechnicalMod",1,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",2,"RLVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",1,1)
    Goto RLVBFG9000Assembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000Confirm", 1) // High Power BFG9000
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power BFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBFG9000Modding
  RLVBFG9000Assembly:
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000AgilityMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000TechnicalMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",3,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",2,1)
    Goto RLBFG9000Modding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLVBFG9000Confirm", 1) // VBFG9000
    TNT1 A 0 A_GiveInventory("RLVBFG9000AssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvVBFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBFG9000Modding
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterHighPower:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",2,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,1)
    Goto RLBlasterOvercharged // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterConfirm", 1) // High Power Blaster
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterOvercharged:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",2,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,1)
    Goto RLBlasterModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",1,1)
    Goto RLBlasterModding
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterConfirm", 1) // Overcharged Blaster
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvOvercharged Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",2,"RLCombatPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,1)
    Goto RLCombatPistolPlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolConfirm", 1) // High Power Combat Pistol
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolPlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",2,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,1)
    Goto RLCombatPistolDemolitionAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,1)
    Goto RLCombatPistolDemolitionAmmo
    TNT1 A 0 A_GiveInventory("RLEnergyCombatPistolConfirm", 1) // Plasma Combat Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",3,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,1)
    Goto RLCombatPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,1)
    Goto RLCombatPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoCombatPistolConfirm", 1) // Demolition Ammo Combat Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLDesertEagleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",2,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,1)
    Goto RLDesertEaglePlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleConfirm", 1) // High Power Handcannon
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEaglePlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",2,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,1)
    Goto RLDesertEagleDemolitionAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,1)
    Goto RLDesertEagleDemolitionAmmo
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleConfirm", 1) // Plasma Handcannon
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",3,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,1)
    Goto RLDesertEagleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoDesertEagleConfirm", 1) // Demolition Ammo Handcannon
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEaglePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziHighPower:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,"RLUziBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,1)
    Goto RLUziBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerUziConfirm", 1) // High Power Uzi
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",3,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,1)
    Goto RLUziPlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziConfirm", 1) // Burst Cannon Uzi
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziPlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,1)
    Goto RLUziDemolitionAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,1)
    Goto RLUziDemolitionAmmo
    TNT1 A 0 A_GiveInventory("RLPlasmaUziConfirm", 1) // Plasma Uzi
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",3,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,1)
    Goto RLUziModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,1)
    Goto RLUziModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoUziConfirm", 1) // Demolition Ammo Uzi
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",2,"RLBattleRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,1)
    Goto RLBattleRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleConfirm", 1) // High Power Battle Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",3,"RLBattleRifleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",2,1)
    Goto RLBattleRifleDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleConfirm", 1) // Burst Cannon Battle Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst-Fire Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",3,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",2,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,1)
    Goto RLBattleRifleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoBattleRifleConfirm", 1) // Demolition Ammo Battle Rifle
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunFirestormMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunAgilityMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunTechnicalMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunBulkMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",1,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",2,"RLSuperShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",1,1)
    Goto RLSuperShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunConfirm", 1) // Plasmatic Shrapnel Super Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Super Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLSuperShotgunModding
  RLSuperShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunFirestormMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunAgilityMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunTechnicalMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunBulkMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",2,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",2,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",1,1)
    Goto RLSuperShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",1,1)
    Goto RLSuperShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunConfirm", 1) // Nano Shrapnel Super Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Super Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLSuperShotgunModding
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunFirestormMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunAgilityMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunTechnicalMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunBulkMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",1,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",2,"RLAssaultShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",1,1)
    Goto RLAssaultShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunConfirm", 1) // Plasmatic Shrapnel Assault Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Assault Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLAssaultShotgunModding
  RLAssaultShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunFirestormMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunAgilityMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunTechnicalMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunBulkMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",2,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",2,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",1,1)
    Goto RLAssaultShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",1,1)
    Goto RLAssaultShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunConfirm", 1) // Nano Shrapnel Assault Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Assault Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLAssaultShotgunModding
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterHighPower:
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterFirestormMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSniperMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterPowerMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterAgilityMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterTechnicalMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",2,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",1,1)
    Goto RLTristarBlasterModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterConfirm", 1) // High Power Tristar Blaster
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Tristar Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLTristarBlasterModding
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunFirestormMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunAgilityMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunTechnicalMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunBulkMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",1,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",2,"RLPlasmaShotgunNanoShrapnel")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",1,1)
    Goto RLPlasmaShotgunNanoShrapnel // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm", 1) // Plasmatic Shrapnel Plasma Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvOvercharged Plasma Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaShotgunModding
  RLPlasmaShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunFirestormMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunAgilityMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunTechnicalMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunBulkMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",2,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",2,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",1,1)
    Goto RLPlasmaShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",1,1)
    Goto RLPlasmaShotgunModding
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunConfirm", 1) // Nano Shrapnel Plasma Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Plasma Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaShotgunModding
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunHighPower:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",2,"RLMinigunBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,1)
    Goto RLMinigunBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunConfirm", 1) // High Power Minigun
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",3,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",2,1)
    Goto RLMinigunDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunConfirm", 1) // Burst Cannon Minigun
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",2,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",3,"RLAutocannonAssembly")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",2,1)
    Goto RLAutocannonAssembly // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,1)
    Goto RLAutocannonAssembly
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunConfirm", 1) // Demolition Ammo Minigun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLAutocannonAssembly:
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",2,1)
    Goto RLMinigunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,1)
    Goto RLMinigunModding
    TNT1 A 0 A_GiveInventory("RLAutocannonConfirm", 1) // Autocannon
    TNT1 A 0 A_GiveInventory("RLAutocannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAutocannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,"RLLaserRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,1)
    Goto RLLaserRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleConfirm", 1) // High Power Laser Rifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,1)
    Goto RLLaserRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleConfirm", 1) // Burst Cannon Laser Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolHighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",2,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",1,1)
    Goto RLNuclearPlasmaPistolSupercharged // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolConfirm", 1) // High Power NuclearPlasmaRifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolSupercharged:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",2,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",2,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",1,1)
    Goto RLNuclearPlasmaPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",1,1)
    Goto RLNuclearPlasmaPistolModding
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolConfirm", 1) // Supercharged Nuclear Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvSupercharged Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaRifle:
  RLNuclearPlasmaRifleHighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",1,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",2,"RLNuclearPlasmaRifleBurstCannon")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",1,1)
    Goto RLNuclearPlasmaRifleBurstCannon // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleConfirm", 1) // High Power NuclearPlasmaRifle
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHigh Power Nuclear Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaRifleModding
  RLNuclearPlasmaRifleBurstCannon:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",3,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",2,1)
    Goto RLNuclearPlasmaRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleConfirm", 1) // Burst Cannon Nuclear Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLBurstCannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBurst Nuclear Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaRifleModding
  RLNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearBFG9000:
  RLNuclearBFG9000HighPower:
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",1,"RLNuclearVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",1,"RLNuclearVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",1,"RLNuclearVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000AgilityMod",1,"RLNuclearVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",2,"RLNuclearVBFG9000Assembly")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",1,1)
    Goto RLNuclearVBFG9000Assembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000Confirm", 1) // High Power Nuclear BFG9000
    TNT1 A 0 A_GiveInventory("RLHighPowerWeaponAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you really, really want to assemble the \cvHigh Power Nuclear BFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearBFG9000Modding
  RLNuclearVBFG9000Assembly:
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000AgilityMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",3,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",2,1)
    Goto RLNuclearBFG9000Modding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000Confirm", 1) // Nuclear VBFG9000
    TNT1 A 0 A_GiveInventory("RLVBFG9000AssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNuclear VBFG9000? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearBFG9000Modding
  RLNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEaglePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaPistol:
  RLHighPowerNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaRifle:
  RLHighPowerNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearBFG9000:
  RLHighPowerNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLDoubleChainsaw:
  RLDoubleChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEaglePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormBlaster:
  RLStormBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormNuclearPlasmaPistol:
  RLStormNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEaglePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLOverchargedBlaster:
  RLOverchargedBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperchargedNuclearPlasmaPistol:
  RLSuperchargedNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearVBFG9000:
  RLNuclearVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000PowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoshotgun:
  RLAutoshotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoshotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoshotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBulletstormChaingun:
  RLBulletstormChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleNuclearPlasmaRifle:
  RLAssaultRifleNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonNuclearPlasmaRifle:
  RLBurstCannonNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRiflePowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// NANO SHRAPNEL
  RLNanoShrapnelShotgun:
  RLNanoShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelCombatShotgun:
  RLNanoShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelDoubleShotgun:
  RLNanoShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelSuperShotgun:
  RLNanoShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelAssaultShotgun:
  RLNanoShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelPlasmaShotgun:
  RLNanoShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunPowerMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorPower", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorPowerToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadePower", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		AGILITY MOD

ACTOR RLAgilityModItem : CustomInventory 16502
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  Tag "Agility Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "AMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up an Agility Mod Pack."
  States
  {
  Spawn:
    AMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseAgilityMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseAgilityMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Agility Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Agility Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLChainsawSelected",1,"RLChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSelected",1,"RLNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000Selected",1,"RLNuclearBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"AdvancedWeapon")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSelected",1,"RLHighPowerBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSelected",1,"RLHighPowerNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSelected",1,"RLHighPowerNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// HAHAHA PLEASE GOD NO
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000Selected",1,"RLHighPowerNuclearBFG9000")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawSelected",1,"RLDoubleChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterSelected",1,"RLStormBlaster")
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolSelected",1,"RLStormNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterSelected",1,"RLOverchargedBlaster")
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolSelected",1,"RLSuperchargedNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunSelected",1,"RLBulletstormChaingun")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000Selected",1,"RLNuclearVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSelected",1,"RLAssaultRifleNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSelected",1,"RLBurstCannonNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
// Nano Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSelected",1,"RLNanoShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunSelected",1,"RLNanoShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSelected",1,"RLNanoShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSelected",1,"RLNanoShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunSelected",1,"RLNanoShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunSelected",1,"RLNanoShrapnelPlasmaShotgun")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLChainsaw:
  RLChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChainsawAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPistol:
  RLPistolSpeedloader:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolConfirm", 1) // Speedloader Pistol
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvRevolver? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLFocusedDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,1)
    Goto RLDoubleShotgunModding
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunConfirm", 1) // Focused Double Shotgun
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvFocused Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",3,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",2,1)
    Goto RLChaingunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunConfirm", 1) // Assault Rifle Chaingun
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLGrenadeLauncherAssembly:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",3,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",2,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherConfirm", 1) // Grenade Launcher
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvGrenade Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",3,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",2,1)
    Goto RLHyperBlasterAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleConfirm", 1) // Assault Rifle Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLHyperBlasterAssembly:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",3,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",2,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLHyperblasterConfirm", 1) // Hyperblaster
    TNT1 A 0 A_GiveInventory("RLHyperblasterAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHyperblaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLMiniMissilePistolAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,1)
    Goto RLDesertEagleModding
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolConfirm", 1) // Mini-missile Pistol
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMini-missile Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",3,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",2,1)
    Goto RLUziModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziConfirm", 1) // Assault Rifle Uzi
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",3,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",2,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleConfirm", 1) // Assault Rifle Battle Rifle
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",3,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",2,1)
    Goto RLMinigunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunConfirm", 1) // Assault Rifle Minigun
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",3,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,1)
    Goto RLLaserRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleConfirm", 1) // Assault Rifle Laser Rifle
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaRifle:
  RLNuclearPlasmaRifleAssaultRifle:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRiflePowerMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleBulkMod",1,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",3,"RLNuclearPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleAgilityMod",2,1)
    Goto RLNuclearPlasmaRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleConfirm", 1) // Assault Rifle Nuclear Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLAssaultRifleAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAssault Nuclear Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaRifleModding
  RLNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearBFG9000:
  RLNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaPistol:
  RLHighPowerNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaRifle:
  RLHighPowerNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearBFG9000:
  RLHighPowerNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLDoubleChainsaw:
  RLDoubleChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormBlaster:
  RLStormBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormNuclearPlasmaPistol:
  RLStormNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLOverchargedBlaster:
  RLOverchargedBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperchargedNuclearPlasmaPistol:
  RLSuperchargedNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearVBFG9000:
  RLNuclearVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000AgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoshotgun:
  RLAutoshotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoshotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoshotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBulletstormChaingun:
  RLBulletstormChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleNuclearPlasmaRifle:
  RLAssaultRifleNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonNuclearPlasmaRifle:
  RLBurstCannonNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// NANO SHRAPNEL
  RLNanoShrapnelShotgun:
  RLNanoShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelCombatShotgun:
  RLNanoShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelDoubleShotgun:
  RLNanoShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelSuperShotgun:
  RLNanoShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelAssaultShotgun:
  RLNanoShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelPlasmaShotgun:
  RLNanoShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunAgilityMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorAgility", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorAgilityToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeAgility", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		TECHNICAL MOD

ACTOR RLTechnicalModItem : CustomInventory 16503
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  Tag "Technical Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "TMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Technical Mod Pack."
  States
  {
  Spawn:
    TMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseTechnicalMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseTechnicalMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Technical Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Technical Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLChainsawSelected",1,"RLChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"AdvancedWeapon")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"AdvancedWeapon")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawSelected",1,"RLDoubleChainsaw")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLChainsaw:
  RLRipperAssembly:
	TNT1 A 0 A_JumpIfInventory("RLChainsawAgilityMod",1,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawTechnicalMod",1,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",2,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",3,"RLChainsawModding")
	TNT1 A 0 A_JumpIfInventory("RLChainsawPowerMod",2,1)
    Goto RLChainsawModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChainsawBulkMod",1,1)
    Goto RLChainsawModding
    TNT1 A 0 A_GiveInventory("RLRipperConfirm", 1) // Ripper
    TNT1 A 0 A_GiveInventory("RLRipperAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvRipper? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChainsawModding
  RLChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChainsawTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPistol:
  RLPistolSilenced:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolShredder")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolShredder // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLSilencedPistolConfirm", 1) // Silenced Pistol
    TNT1 A 0 A_GiveInventory("RLSilencedPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvSilenced Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolShredder:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,"RLPistolSpeedloader")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,1)
    Goto RLPistolSpeedloader // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLShredderPistolConfirm", 1) // Shredder Pistol
    TNT1 A 0 A_GiveInventory("RLShredderPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvShredder Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolSpeedloader:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",2,"RLPistolStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,1)
    Goto RLPistolModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolConfirm", 1) // Speedloader Pistol
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvRevolver? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",3,"RLPistolPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",2,1)
    Goto RLPistolPlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormPistolConfirm", 1) // Storm Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolPlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",3,"RLPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,1)
    Goto RLPistolDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLEnergyPistolConfirm", 1) // Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,1)
    Goto RLPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,1)
    Goto RLPistolModding
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,1)
    Goto RLPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoPistolConfirm", 1) // Demolition Ammo Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:	
  RLTacticalShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",2,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",1,1)
    Goto RLCombatShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunConfirm", 1) // Tactical Shotgun
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvTactical Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLFocusedDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,1)
    Goto RLDoubleShotgunModding
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunConfirm", 1) // Focused Double Shotgun
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvFocused Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,1)
    Goto RLChaingunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,1)
    Goto RLChaingunModding
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,1)
    Goto RLChaingunModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoChaingunConfirm", 1) // Demolition Ammo Chaingun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLMicroLauncherAssembly:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLMicroLauncherConfirm", 1) // Micro Launcher
    TNT1 A 0 A_GiveInventory("RLMicroLauncherAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMicro Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleMkIIAssembly:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",3,"RLHyperBlasterAssembly")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",2,1)
    Goto RLHyperBlasterAssembly // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIConfirm", 1) // Plasma Rifle Mk.II
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Rifle Mk.II? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLHyperBlasterAssembly:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",2,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",2,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,1)
    Goto RLPlasmaRifleModding
    TNT1 A 0 A_GiveInventory("RLHyperblasterConfirm", 1) // Hyperblaster
    TNT1 A 0 A_GiveInventory("RLHyperblasterAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvHyperblaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000TechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",2,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",3,"RLBlasterOvercharged")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",2,1)
    Goto RLBlasterOvercharged // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormBlasterConfirm", 1) // Storm Blaster
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterOvercharged:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterTechnicalMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",3,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,1)
    Goto RLBlasterModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterConfirm", 1) // Overcharged Blaster
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvOvercharged Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolStormCombatPistol:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",3,"RLCombatPistolPlasmaCombatPistol")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",2,1)
    Goto RLCombatPistolPlasmaCombatPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolConfirm", 1) // Storm Combat Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolPlasmaCombatPistol:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",3,"RLCombatPistolDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",2,1)
    Goto RLCombatPistolDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLEnergyCombatPistolConfirm", 1) // Plasma Combat Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,1)
    Goto RLCombatPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,1)
    Goto RLCombatPistolModding
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,1)
    Goto RLCombatPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoCombatPistolConfirm", 1) // Demolition Ammo Combat Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLMiniMissilePistolAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",3,"RLDesertEagleStormPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",2,1)
    Goto RLDesertEagleStormPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolConfirm", 1) // Mini-missile Pistol
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMini-missile Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",3,"RLDesertEaglePlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",2,1)
    Goto RLDesertEaglePlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleConfirm", 1) // Storm Handcannon
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEaglePlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",3,"RLDesertEagleDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",2,1)
    Goto RLDesertEagleDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleConfirm", 1) // Plasma Handcannon
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,1)
    Goto RLDesertEagleModding
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,1)
    Goto RLDesertEagleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoDesertEagleConfirm", 1) // Demolition Ammo Handcannon
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",3,"RLUziPlasmaPistol")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",2,1)
    Goto RLUziPlasmaPistol // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormUziConfirm", 1) // Dual Uzis
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDual Uzis? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziPlasmaPistol:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",3,"RLUziDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,1)
    Goto RLUziDemolitionAmmo // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaUziConfirm", 1) // Plasma Uzi
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,1)
    Goto RLUziModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,1)
    Goto RLUziModding
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,1)
    Goto RLUziModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoUziConfirm", 1) // Demolition Ammo Uzi
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,1)
    Goto RLBattleRifleModding
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,1)
    Goto RLBattleRifleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoBattleRifleConfirm", 1) // Demolition Ammo Battle Rifle
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,1)
    Goto RLMinigunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,1)
    Goto RLMinigunModding
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,1)
    Goto RLMinigunModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunConfirm", 1) // Demolition Ammo Minigun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolStormPistol:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",2,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",3,"RLNuclearPlasmaPistolSupercharged")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",2,1)
    Goto RLNuclearPlasmaPistolSupercharged // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolConfirm", 1) // Storm Nuclear Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLStormPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvStorm Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolSupercharged:
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolBulkMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolAgilityMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolTechnicalMod",1,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",3,"RLNuclearPlasmaPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolPowerMod",2,1)
    Goto RLNuclearPlasmaPistolModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolConfirm", 1) // Supercharged Nuclear Plasma Pistol
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvSupercharged Nuclear Plasma Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearPlasmaPistolModding
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000TechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLDoubleChainsaw:
  RLDoubleChainsawModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleChainsawModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleChainsawTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000TechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoshotgun:
  RLAutoshotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoshotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoshotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIITechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleTechnicalMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorTechnical", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorTechnicalToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeTechnical", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		NANO MOD

ACTOR RLNanoModItem : CustomInventory 16504
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  +INVENTORY.NEVERRESPAWN
  Tag "Nano Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "NMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Nano Mod Pack."
  States
  {
  Spawn:
    NMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseNanoMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseNanoMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Nano Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Nano Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"RLLightweaver")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"RLNeuralStunner")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"RLRealityDistortionArray")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLPistol:
  RLPistolNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",4,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",3,1)
    Goto RLPistolModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoPistolConfirm", 1) // Nano Pistol
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",3,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",2,1)
    Goto RLShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunConfirm", 1) // Nano Shrapnel Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:	
  RLCombatShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",3,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",2,1)
    Goto RLCombatShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunConfirm", 1) // Nano Shrapnel Combat Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Combat Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLDoubleShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",3,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",2,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunConfirm", 1) // Nano Shrapnel Double Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",4,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",3,1)
    Goto RLChaingunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoChaingunConfirm", 1) // Nano Chaingun
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLMotherInLawAssembly:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",2,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",2,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",3,"RLRocketLauncherNanoManufactureAmmo")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",2,1)
    Goto RLRocketLauncherNanoManufactureAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,1)
    Goto RLRocketLauncherModding
    TNT1 A 0 A_GiveInventory("RLMotherInLawConfirm", 1) // Mother-In-Law
    TNT1 A 0 A_GiveInventory("RLMotherInLawAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMother-In-Law? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",4,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",3,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoRocketLauncherConfirm", 1) // Nano RocketLauncher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic RocketLauncher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",4,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",3,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoPlasmaRifleConfirm", 1) // Nano Plasma Rifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Plasma Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000NanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",4,"RLBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",3,1)
    Goto RLBlasterModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoBlasterConfirm", 1) // Nano Blaster
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBlasterModding
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBlasterNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",4,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",3,1)
    Goto RLCombatPistolModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoCombatPistolConfirm", 1) // Nano Combat Pistol
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLDesertEagleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",4,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",3,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoDesertEagleConfirm", 1) // Nano Handcannon
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",4,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",3,1)
    Goto RLUziModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoUziConfirm", 1) // Nano Uzi
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",4,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",3,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoBattleRifleConfirm", 1) // Nano Battle Rifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunFirestormMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunAgilityMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunTechnicalMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunBulkMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",3,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",2,1)
    Goto RLSuperShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunConfirm", 1) // Nano Shrapnel Super Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Super Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLSuperShotgunModding
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunFirestormMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunAgilityMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunTechnicalMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunBulkMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",3,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",2,1)
    Goto RLAssaultShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunConfirm", 1) // Nano Shrapnel Assault Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Assault Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLAssaultShotgunModding
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterFirestormMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSniperMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterPowerMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterAgilityMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterTechnicalMod",1,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",4,"RLTristarBlasterModding")
	TNT1 A 0 A_JumpIfInventory("RLTristarBlasterBulkMod",3,1)
    Goto RLTristarBlasterModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoTristarBlasterConfirm", 1) // Nano Tristar Blaster
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Tristar Blaster? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLTristarBlasterModding
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunNanoShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunFirestormMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunAgilityMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunTechnicalMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunBulkMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",3,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",2,1)
    Goto RLPlasmaShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunConfirm", 1) // Nano Shrapnel Plasma Shotgun
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNano Plasma Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaShotgunModding
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherFirestormMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherNanoMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSniperMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherPowerMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherAgilityMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherTechnicalMod",1,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherBulkMod",4,"RLMissileLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLMissileLauncherBulkMod",3,1)
    Goto RLMissileLauncherModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoMissileLauncherConfirm", 1) // Nano Missile Launcher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Missile Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMissileLauncherModding
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherFirestormMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherNanoMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSniperMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherPowerMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherAgilityMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherTechnicalMod",1,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherBulkMod",4,"RLNapalmLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherBulkMod",3,1)
    Goto RLNapalmLauncherModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoNapalmLauncherConfirm", 1) // Nano Missile Launcher
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Napalm Launcher? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNapalmLauncherModding
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",4,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",3,1)
    Goto RLMinigunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoMinigunConfirm", 1) // Nano Minigun
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleNanoManufactureAmmo:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",4,"RLLaserRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,1)
    Goto RLLaserRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoLaserRifleConfirm", 1) // Nano LaserRifle
    TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvNanomachic Laser Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLLaserRifleModding
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJackhammerNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLJackhammerNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRailgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLRailgunNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLBFG10KNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLNullPointerNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLightweaver:
  RLLightweaverModding:
    TNT1 A 0 A_JumpIfInventory("RLLightweaverModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLightweaverModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLightweaverNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLLightweaverNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTrigunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLTrigunNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLHellsReignNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSussGunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLSussGunNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNeuralStunner:
  RLNeuralStunnerModding:
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRealityDistortionArray:
  RLRealityDistortionArrayModding:
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayNanoMod", 1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayNanoLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000NanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000NanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000NanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoshotgun:
  RLAutoshotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoshotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoshotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIINanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleNanoMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleNanoMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorNano", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorNanoToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
	TNT1 A 0 A_GiveInventory("PowerRLCyberneticArmorRegen", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeNano", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		FIRESTORM MOD

ACTOR RLFirestormModItem : CustomInventory 16505
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  +INVENTORY.NEVERRESPAWN
  Tag "Firestorm Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "FMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Firestorm Mod Pack."
  States
  {
  Spawn:
    FMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseFirestormMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseFirestormMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Firestorm Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Firestorm Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSelected",1,"RLNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000Selected",1,"RLNuclearBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"RLLightweaver")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"RLNeuralStunner")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"RLRealityDistortionArray")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSelected",1,"RLHighPowerBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSelected",1,"RLHighPowerNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSelected",1,"RLHighPowerNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// HAHAHA PLEASE GOD NO
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000Selected",1,"RLHighPowerNuclearBFG9000")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterSelected",1,"RLStormBlaster")
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolSelected",1,"RLStormNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterSelected",1,"RLOverchargedBlaster")
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolSelected",1,"RLSuperchargedNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunSelected",1,"RLBulletstormChaingun")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000Selected",1,"RLNuclearVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSelected",1,"RLAssaultRifleNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSelected",1,"RLBurstCannonNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
// Nano Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSelected",1,"RLNanoShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunSelected",1,"RLNanoShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSelected",1,"RLNanoShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSelected",1,"RLNanoShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunSelected",1,"RLNanoShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunSelected",1,"RLNanoShrapnelPlasmaShotgun")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLPistol:
  RLPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLPistolNanoMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolBulkMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolAgilityMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",1,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",2,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",3,"RLPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLPistolPowerMod",1,1)
    Goto RLPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLPistolTechnicalMod",2,1)
    Goto RLPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoPistolConfirm", 1) // Demolition Ammo Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPistolModding
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLAutoshotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",3,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",2,1)
    Goto RLShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAutoshotgunConfirm", 1) // Autoshotgun
    TNT1 A 0 A_GiveInventory("RLAutoShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAutoshotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLAutoDoubleShotgunAssembly:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",3,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",2,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunConfirm", 1) // Auto Double Shotgun
    TNT1 A 0 A_GiveInventory("RLAutoShotgunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAuto Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLChaingunNanoMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunBulkMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunAgilityMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",1,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",2,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",3,"RLChaingunModding")
	TNT1 A 0 A_JumpIfInventory("RLChaingunPowerMod",1,1)
    Goto RLChaingunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLChaingunTechnicalMod",2,1)
    Goto RLChaingunModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoChaingunConfirm", 1) // Demolition Ammo Chaingun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Chaingun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLChaingunModding
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLChaingunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLMotherInLawAssembly:
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherBulkMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherAgilityMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherTechnicalMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",2,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",1,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",3,"RLRocketLauncherModding")
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherPowerMod",2,1)
    Goto RLRocketLauncherModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLRocketLauncherNanoMod",1,1)
    Goto RLRocketLauncherModding
    TNT1 A 0 A_GiveInventory("RLMotherInLawConfirm", 1) // Mother-In-Law
    TNT1 A 0 A_GiveInventory("RLMotherInLawAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvMother-In-Law? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLRocketLauncherModding
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000BiggestFuckingGun:
	TNT1 A 0 A_JumpIfInventory("RLBFG9000NanoMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000AgilityMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000TechnicalMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000PowerMod",1,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",2,"RLBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLBFG9000BulkMod",2,1)
    Goto RLBFG9000Modding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",1,1)
    Goto RLBFG9000Modding
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunConfirm", 1) // Biggest Fucking Gun
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBiggest Fucking Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBFG9000Modding
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolNanoMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolBulkMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolAgilityMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",1,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",2,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",3,"RLCombatPistolModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolPowerMod",1,1)
    Goto RLCombatPistolModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLCombatPistolTechnicalMod",2,1)
    Goto RLCombatPistolModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoCombatPistolConfirm", 1) // Demolition Ammo Combat Pistol
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Combat Pistol? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatPistolModding
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLDesertEagleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleNanoMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleBulkMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleAgilityMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",1,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",2,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",3,"RLDesertEagleModding")
	TNT1 A 0 A_JumpIfInventory("RLDesertEaglePowerMod",1,1)
    Goto RLDesertEagleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLDesertEagleTechnicalMod",2,1)
    Goto RLDesertEagleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoDesertEagleConfirm", 1) // Demolition Ammo Handcannon
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Handcannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDesertEagleModding
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLUziNanoMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziBulkMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziAgilityMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",1,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",2,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",3,"RLUziModding")
	TNT1 A 0 A_JumpIfInventory("RLUziPowerMod",1,1)
    Goto RLUziModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLUziTechnicalMod",2,1)
    Goto RLUziModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoUziConfirm", 1) // Demolition Ammo Uzi
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Uzi? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLUziModding
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUziFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleNanoMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleBulkMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleAgilityMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",1,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",2,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",3,"RLBattleRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLBattleRiflePowerMod",1,1)
    Goto RLBattleRifleModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLBattleRifleTechnicalMod",2,1)
    Goto RLBattleRifleModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoBattleRifleConfirm", 1) // Demolition Ammo Battle Rifle
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Battle Rifle? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLBattleRifleModding
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLAutocannonAssembly:
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",1,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",2,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",3,"RLMinigunDemolitionAmmo")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,1)
    Goto RLMinigunDemolitionAmmo // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,1)
    Goto RLMinigunDemolitionAmmo
    TNT1 A 0 A_GiveInventory("RLAutocannonConfirm", 1) // Autocannon
    TNT1 A 0 A_GiveInventory("RLAutocannonAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvAutocannon? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunDemolitionAmmo:
	TNT1 A 0 A_JumpIfInventory("RLMinigunNanoMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunBulkMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunAgilityMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",1,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",2,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",3,"RLMinigunModding")
	TNT1 A 0 A_JumpIfInventory("RLMinigunPowerMod",1,1)
    Goto RLMinigunModding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLMinigunTechnicalMod",2,1)
    Goto RLMinigunModding
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoMinigunConfirm", 1) // Demolition Ammo Minigun
    TNT1 A 0 A_GiveInventory("RLDemolitionAmmoAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvDemolition Ammo Minigun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLMinigunModding
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMinigunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaRifle:
  RLNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearBFG9000:
  RLNuclearBFG9000BiggestFuckingGun:
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000NanoMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000AgilityMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000PowerMod",1,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",2,"RLNuclearBFG9000Modding")
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000BulkMod",2,1)
    Goto RLNuclearBFG9000Modding // Change to the next assembly to check.
	TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",1,1)
    Goto RLNuclearBFG9000Modding
    TNT1 A 0 A_GiveInventory("RLNuclearBiggestFuckingGunConfirm", 1) // Biggest Fucking Nuclear Gun
    TNT1 A 0 A_GiveInventory("RLBiggestFuckingGunAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvBiggest Fucking Nuclear Gun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLNuclearBFG9000Modding
  RLNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJackhammerFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLJackhammerFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRailgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLRailgunFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLBFG10KFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLNullPointerFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLightweaver:
  RLLightweaverModding:
    TNT1 A 0 A_JumpIfInventory("RLLightweaverModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLightweaverModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLightweaverFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLLightweaverFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTrigunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLTrigunFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLHellsReignFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSussGunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLSussGunFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNeuralStunner:
  RLNeuralStunnerModding:
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRealityDistortionArray:
  RLRealityDistortionArrayModding:
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayFirestormMod", 1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayFirestormLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaPistol:
  RLHighPowerNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaRifle:
  RLHighPowerNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearBFG9000:
  RLHighPowerNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormBlaster:
  RLStormBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormNuclearPlasmaPistol:
  RLStormNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLOverchargedBlaster:
  RLOverchargedBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperchargedNuclearPlasmaPistol:
  RLSuperchargedNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearVBFG9000:
  RLNuclearVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000FirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000FirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoShotgun:
  RLAutoShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAutoShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBulletstormChaingun:
  RLBulletstormChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleNuclearPlasmaRifle:
  RLAssaultRifleNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonNuclearPlasmaRifle:
  RLBurstCannonNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// NANO SHRAPNEL
  RLNanoShrapnelShotgun:
  RLNanoShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelCombatShotgun:
  RLNanoShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelDoubleShotgun:
  RLNanoShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelSuperShotgun:
  RLNanoShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelAssaultShotgun:
  RLNanoShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelPlasmaShotgun:
  RLNanoShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunFirestormMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunFirestormMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorFirestorm", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorFirestormToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeFirestorm", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		SNIPER MOD

ACTOR RLSniperModItem : CustomInventory 16506
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  +INVENTORY.NEVERRESPAWN
  Tag "Sniper Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "SMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up a Sniper Mod Pack."
  States
  {
  Spawn:
    SMOD ABCDCB 3 Bright
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseSniperMod",1,"WeaponSelect")
    TNT1 A 0 A_GiveInventory("RLUseSniperMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_Print("Use Sniper Mod again to apply to current weapon. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  FistSelection:
	TNT1 A 0 A_Print("Press Drop Weapon to drop Sniper Mod, or switch weapons to cancel.", 5)
    Fail
  WeaponSelect:
	TNT1 A 0 A_JumpIfInventory("RLFistSelected",1,"FistSelection")
	TNT1 A 0 A_TakeInventory("RLDoubleChainsawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLRipperConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSpeedloaderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLElephantGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoshotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelCombatShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHeavyDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutoDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLFocusedDoubleShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGatlingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBulletstormChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoChaingunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMotherInLawConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMicroLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLTacticalRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoRocketLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHyperBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRifleMkIIConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRiflePlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaRefractorConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLEnergyCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoCombatPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLMiniMissilePistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoBattleRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelSuperShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelAssaultShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoShrapnelPlasmaShotgunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAutocannonConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLDemolitionAmmoMinigunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoMissileLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonNuclearPlasmaRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearVBFG9000Confirm",1)
	TNT1 A 0 A_TakeInventory("RLNuclearBiggestFuckingGunConfirm",1)
	TNT1 A 0 A_TakeInventory("RLHighPowerNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSilencedPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLShredderPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLGrenadeLauncherConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormNuclearPlasmaPistolConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaDesertEagleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLPlasmaUziConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLSuperchargedNuclearPlasmaPistolConfirm",1)
  WeaponSelectMain:
    TNT1 A 0 A_TakeInventory("RLUseSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLPistolSelected",1,"RLPistol")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSelected",1,"RLShotgun")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSelected",1,"RLCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSelected",1,"RLDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSelected",1,"RLChaingun")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSelected",1,"RLRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSelected",1,"RLPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000Selected",1,"RLBFG9000")
// Exotic Weapons
    TNT1 A 0 A_JumpIfInventory("RLBlasterSelected",1,"RLBlaster")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSelected",1,"RLCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSelected",1,"RLDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSelected",1,"RLSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSelected",1,"RLAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSelected",1,"RLTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSelected",1,"RLPlasmaShotgun")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSelected",1,"RLMissileLauncher")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSelected",1,"RLNapalmLauncher")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSelected",1,"RLMinigun")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSelected",1,"RLLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSelected",1,"RLNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSelected",1,"RLNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000Selected",1,"RLNuclearBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLUziSelected",1,"RLUzi")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSelected",1,"RLBattleRifle")
// Unique Weapons
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSelected",1,"RLJackhammer")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSelected",1,"RLRailgun")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSelected",1,"RLMysteriousMagnum")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSelected",1,"RLBFG10K")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSelected",1,"RLUnknownHerald")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSelected",1,"RLNullPointer")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSelected",1,"RLFragShotgun")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSelected",1,"RLQuadShotgun")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSelected",1,"RLLightweaver")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSelected",1,"RLTantrumCannon")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSelected",1,"RLRevenantsLauncher")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSelected",1,"RLGrammatonClericBeretta")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSelected",1,"RLAntiFreakJackal")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSelected",1,"RLTrigun")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSelected",1,"RLParticleBeamCannon")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSelected",1,"RLPlasmaRedirectionCannon")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSelected",1,"RLSteelBeast")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSelected",1,"RLHellsReign")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSelected",1,"RLSussGun")
// Legendary Weapons
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSelected",1,"RLJudgeOfTheDead")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSelected",1,"RLHurricaneCannon")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSelected",1,"RLNeuralStunner")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSelected",1,"RLBaronBlaster")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySelected",1,"RLRealityDistortionArray")
// Basic Assemblies
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSelected",1,"RLSilencedPistol")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSelected",1,"RLShredderPistol")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSelected",1,"RLSpeedloaderPistol")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSelected",1,"RLElephantGun")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSelected",1,"RLGatlingGun")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSelected",1,"RLMicroLauncher")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSelected",1,"RLTacticalShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSelected",1,"RLHeavyShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSelected",1,"RLHeavyDoubleShotgun")
// High Power
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSelected",1,"RLHighPowerPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSelected",1,"RLHighPowerChaingun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSelected",1,"RLHighPowerPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000Selected",1,"RLHighPowerBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSelected",1,"RLHighPowerBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSelected",1,"RLHighPowerCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSelected",1,"RLHighPowerDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSelected",1,"RLHighPowerMinigun")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSelected",1,"RLHighPowerLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSelected",1,"RLHighPowerNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSelected",1,"RLHighPowerNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSelected",1,"RLHighPowerTristarBlaster")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSelected",1,"RLHighPowerUzi")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSelected",1,"RLHighPowerBattleRifle")
// HAHAHA PLEASE GOD NO
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000Selected",1,"RLHighPowerNuclearBFG9000")
// Plasmatic Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSelected",1,"RLPlasmaticShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSelected",1,"RLPlasmaticShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSelected",1,"RLPlasmaticShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSelected",1,"RLPlasmaticShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSelected",1,"RLPlasmaticShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSelected",1,"RLPlasmaticShrapnelPlasmaShotgun")
// Advanced Assemblies
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSelected",1,"RLTacticalRocketLauncher")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSelected",1,"RLStormPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSelected",1,"RLStormCombatPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSelected",1,"RLPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSelected",1,"RLCombatPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleSelected",1,"RLStormDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLStormUziSelected",1,"RLStormUzi")
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterSelected",1,"RLStormBlaster")
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolSelected",1,"RLStormNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleSelected",1,"RLPlasmaDesertEagle")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziSelected",1,"RLPlasmaUzi")
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterSelected",1,"RLOverchargedBlaster")
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolSelected",1,"RLSuperchargedNuclearPlasmaPistol")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSelected",1,"RLFocusedDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSelected",1,"RLHyperblaster")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunSelected",1,"RLBulletstormChaingun")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSelected",1,"RLMiniMissilePistol")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISelected",1,"RLPlasmaRifleMkII")
    TNT1 A 0 A_JumpIfInventory("RLAutoshotgunSelected",1,"RLAutoshotgun")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSelected",1,"RLAutoDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000Selected",1,"RLVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000Selected",1,"RLNuclearVBFG9000")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSelected",1,"RLGrenadeLauncher")
// Assault Rifle
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSelected",1,"RLAssaultRifleChaingun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSelected",1,"RLAssaultRiflePlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSelected",1,"RLAssaultRifleLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSelected",1,"RLAssaultRifleMinigun")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSelected",1,"RLAssaultRifleNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSelected",1,"RLAssaultRifleUzi")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSelected",1,"RLAssaultRifleBattleRifle")
// Burst Cannon
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSelected",1,"RLBurstCannonChaingun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSelected",1,"RLBurstCannonPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSelected",1,"RLBurstCannonLaserRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSelected",1,"RLBurstCannonMinigun")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSelected",1,"RLBurstCannonNuclearPlasmaRifle")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSelected",1,"RLBurstCannonUzi")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSelected",1,"RLBurstCannonBattleRifle")
// Nano Shrapnel
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSelected",1,"RLNanoShrapnelShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunSelected",1,"RLNanoShrapnelCombatShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSelected",1,"RLNanoShrapnelDoubleShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSelected",1,"RLNanoShrapnelSuperShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunSelected",1,"RLNanoShrapnelAssaultShotgun")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunSelected",1,"RLNanoShrapnelPlasmaShotgun")
	TNT1 A 0 A_Print("This weapon is unable to support this mod pack.", 4)
    Fail
  RLPistol:
  RLPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShotgun:
  RLShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLShotgunFirestormMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunNanoMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunAgilityMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunTechnicalMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunBulkMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",1,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",2,"RLShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLShotgunPowerMod",1,1)
    Goto RLShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunConfirm", 1) // Plasmatic Shrapnel Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLShotgunModding
  RLShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatShotgun:
  RLCombatShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunFirestormMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunNanoMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunAgilityMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunTechnicalMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunBulkMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",1,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",2,"RLCombatShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLCombatShotgunPowerMod",1,1)
    Goto RLCombatShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunConfirm", 1) // Plasmatic Shrapnel Combat Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Combat Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLCombatShotgunModding
  RLCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDoubleShotgun:
  RLDoubleShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunFirestormMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunNanoMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunAgilityMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunTechnicalMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunBulkMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",1,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",2,"RLDoubleShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunPowerMod",1,1)
    Goto RLDoubleShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunConfirm", 1) // Plasmatic Shrapnel Double Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Double Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLDoubleShotgunModding
  RLDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLChaingun:
  RLChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLChaingunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLChaingunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRocketLauncher:
  RLRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRocketLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRocketLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifle:
  RLPlasmaRefractor:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleFirestormMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleNanoMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleBulkMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleAgilityMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleTechnicalMod",1,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",4,"RLPlasmaRifleModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaRiflePowerMod",3,1)
    Goto RLPlasmaRifleModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaRefractorConfirm", 1) // Plasma Refractor
    TNT1 A 0 A_GiveInventory("RLPlasmaRefractorAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasma Refractor? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaRifleModding
  RLPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG9000:
  RLBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// EXOTICS
  RLBlaster:
  RLBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPistol:
  RLCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLDesertEagle:
  RLDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLDesertEagleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLDesertEagleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUzi:
  RLUziModding:
    TNT1 A 0 A_JumpIfInventory("RLUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUziSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBattleRifle:
  RLBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBattleRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBattleRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperShotgun:
  RLSuperShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunFirestormMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunNanoMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunAgilityMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunTechnicalMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunBulkMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",1,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",2,"RLSuperShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLSuperShotgunPowerMod",1,1)
    Goto RLSuperShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunConfirm", 1) // Plasmatic Shrapnel Super Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Super Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLSuperShotgunModding
  RLSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSuperShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultShotgun:
  RLAssaultShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunFirestormMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunNanoMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunAgilityMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunTechnicalMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunBulkMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",1,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",2,"RLAssaultShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunPowerMod",1,1)
    Goto RLAssaultShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunConfirm", 1) // Plasmatic Shrapnel Assault Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvPlasmatic Assault Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLAssaultShotgunModding
  RLAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTristarBlaster:
  RLTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTristarBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTristarBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaShotgun:
  RLPlasmaShotgunPlasmaticShrapnel:
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunFirestormMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunNanoMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunAgilityMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunTechnicalMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunBulkMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",1,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",2,"RLPlasmaShotgunModding")
	TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunPowerMod",1,1)
    Goto RLPlasmaShotgunModding // Change to the next assembly to check.
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunConfirm", 1) // Plasmatic Shrapnel Plasma Shotgun
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssemblyLearntToken", 1) // Assembly is now listed in the HUD menus
	TNT1 A 0 A_Print("Do you want to assemble the \cvOvercharged Plasma Shotgun? \c-Fire confirms - Altfire cancels.", 5)
    TNT1 A 0 A_PlaySound("hud/assemblyalert", 5)
    Goto RLPlasmaShotgunModding
  RLPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMissileLauncher:
  RLMissileLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMissileLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMissileLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMissileLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNapalmLauncher:
  RLNapalmLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNapalmLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNapalmLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMinigun:
  RLMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMinigunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMinigunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLaserRifle:
  RLLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLaserRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaPistol:
  RLNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearPlasmaRifle:
  RLNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearBFG9000:
  RLNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// UNIQUES
  RLJackhammer:
  RLJackhammerModding:
    TNT1 A 0 A_JumpIfInventory("RLJackhammerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJackhammerSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJackhammerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJackhammerSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLJackhammerSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRailgun:
  RLRailgunModding:
    TNT1 A 0 A_JumpIfInventory("RLRailgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRailgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRailgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRailgunSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLRailgunSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMysteriousMagnum:
  RLMysteriousMagnumModding:
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMysteriousMagnumSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLMysteriousMagnumSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBFG10K:
  RLBFG10KModding:
    TNT1 A 0 A_JumpIfInventory("RLBFG10KModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBFG10KSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBFG10KModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBFG10KSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLBFG10KSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLUnknownHerald:
  RLUnknownHeraldModding:
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLUnknownHeraldSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldModLimit",1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLUnknownHeraldSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNullPointer:
  RLNullPointerModding:
    TNT1 A 0 A_JumpIfInventory("RLNullPointerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNullPointerSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNullPointerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNullPointerSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLNullPointerSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFragShotgun:
  RLFragShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFragShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFragShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLFragShotgunSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLQuadShotgun:
  RLQuadShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLQuadShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLQuadShotgunSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLLightweaver:
  RLLightweaverModding:
    TNT1 A 0 A_JumpIfInventory("RLLightweaverModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLLightweaverSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLLightweaverModLimit",1)
    TNT1 A 0 A_GiveInventory("RLLightweaverSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLLightweaverSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTantrumCannon:
  RLTantrumCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTantrumCannonSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTantrumCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLTantrumCannonSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRevenantsLauncher:
  RLRevenantsLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRevenantsLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLRevenantsLauncherSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrammatonClericBeretta:
  RLGrammatonClericBerettaModding:
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGrammatonClericBerettaSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLGrammatonClericBerettaSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAntiFreakJackal:
  RLAntiFreakJackalModding:
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAntiFreakJackalSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLAntiFreakJackalSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTrigun:
  RLTrigunModding:
    TNT1 A 0 A_JumpIfInventory("RLTrigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTrigunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTrigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTrigunSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLTrigunSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLParticleBeamCannon:
  RLParticleBeamCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLParticleBeamCannonSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLParticleBeamCannonSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRedirectionCannon:
  RLPlasmaRedirectionCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRedirectionCannonSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRedirectionCannonSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSteelBeast:
  RLSteelBeastModding:
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSteelBeastSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSteelBeastModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLSteelBeastSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHellsReign:
  RLHellsReignModding:
    TNT1 A 0 A_JumpIfInventory("RLHellsReignModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHellsReignSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHellsReignModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHellsReignSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLHellsReignSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSussGun:
  RLSussGunModding:
    TNT1 A 0 A_JumpIfInventory("RLSussGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSussGunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSussGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSussGunSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLSussGunSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// LEGENDARIES
  RLJudgeOfTheDead:
  RLJudgeOfTheDeadModding:
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLJudgeOfTheDeadSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadModLimit",1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLJudgeOfTheDeadSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHurricaneCannon:
  RLHurricaneCannonModding:
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHurricaneCannonSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLHurricaneCannonSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNeuralStunner:
  RLNeuralStunnerModding:
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLNeuralStunnerSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBaronBlaster:
  RLBaronBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBaronBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBaronBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterSniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLBaronBlasterSniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLRealityDistortionArray:
  RLRealityDistortionArrayModding:
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayModLimit",1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArraySniperMod", 1)
    TNT1 A 0 A_GiveInventory("RLRealityDistortionArraySniperLearntToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSEMBLIES
// BASIC
  RLSilencedPistol:
  RLSilencedPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSilencedPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSilencedPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSilencedPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLShredderPistol:
  RLShredderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLShredderPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLShredderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLShredderPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSpeedloaderPistol:
  RLSpeedloaderPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLSpeedloaderPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSpeedloaderPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLElephantGun:
  RLElephantGunModding:
    TNT1 A 0 A_JumpIfInventory("RLElephantGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLElephantGunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLElephantGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLElephantGunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGatlingGun:
  RLGatlingGunModding:
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGatlingGunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGatlingGunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGatlingGunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMicroLauncher:
  RLMicroLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMicroLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMicroLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMicroLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLTacticalShotgun:
  RLTacticalShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyShotgun:
  RLHeavyShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHeavyShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHeavyDoubleShotgun:
  RLHeavyDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHeavyDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHeavyDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// HIGH POWER
  RLHighPowerPistol:
  RLHighPowerPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerChaingun:
  RLHighPowerChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerChaingunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerChaingunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerPlasmaRifle:
  RLHighPowerPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBFG9000:
  RLHighPowerBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBlaster:
  RLHighPowerBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerCombatPistol:
  RLHighPowerCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerCombatPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerCombatPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerDesertEagle:
  RLHighPowerDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerDesertEagleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerDesertEagleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerMinigun:
  RLHighPowerMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerMinigunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerMinigunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerLaserRifle:
  RLHighPowerLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaPistol:
  RLHighPowerNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearPlasmaRifle:
  RLHighPowerNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerNuclearBFG9000:
  RLHighPowerNuclearBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerNuclearBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerNuclearBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerTristarBlaster:
  RLHighPowerTristarBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerTristarBlasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerTristarBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerUzi:
  RLHighPowerUziModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerUziSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHighPowerBattleRifle:
  RLHighPowerBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHighPowerBattleRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHighPowerBattleRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// PLASMATIC SHRAPNEL
  RLPlasmaticShrapnelShotgun:
  RLPlasmaticShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelCombatShotgun:
  RLPlasmaticShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelCombatShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelCombatShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelDoubleShotgun:
  RLPlasmaticShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelSuperShotgun:
  RLPlasmaticShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelSuperShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelSuperShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelAssaultShotgun:
  RLPlasmaticShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelAssaultShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelAssaultShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaticShrapnelPlasmaShotgun:
  RLPlasmaticShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaticShrapnelPlasmaShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaticShrapnelPlasmaShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ADVANCED
  RLTacticalRocketLauncher:
  RLTacticalRocketLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLTacticalRocketLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLTacticalRocketLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormPistol:
  RLStormPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLStormPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormCombatPistol:
  RLStormCombatPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLStormCombatPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormCombatPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaPistol:
  RLPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLCombatPlasmaPistol:
  RLCombatPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLCombatPlasmaPistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLCombatPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormDesertEagle:
  RLStormDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLStormDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormDesertEagleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormUzi:
  RLStormUziModding:
    TNT1 A 0 A_JumpIfInventory("RLStormUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormBlaster:
  RLStormBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLStormBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLStormNuclearPlasmaPistol:
  RLStormNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLStormNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLStormNuclearPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaDesertEagle:
  RLPlasmaDesertEagleModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaDesertEagleModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaDesertEagleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaUzi:
  RLPlasmaUziModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaUziModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLOverchargedBlaster:
  RLOverchargedBlasterModding:
    TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLOverchargedBlasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLSuperchargedNuclearPlasmaPistol:
  RLSuperchargedNuclearPlasmaPistolModding:
    TNT1 A 0 A_JumpIfInventory("RLSuperchargedNuclearPlasmaPistolModLimit",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLSuperchargedNuclearPlasmaPistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLFocusedDoubleShotgun:
  RLFocusedDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLFocusedDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLFocusedDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLHyperblaster:
  RLHyperblasterModding:
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLHyperblasterSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLHyperblasterModLimit",1)
    TNT1 A 0 A_GiveInventory("RLHyperblasterSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLVBFG9000:
  RLVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLVBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLVBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNuclearVBFG9000:
  RLNuclearVBFG9000Modding:
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000ModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNuclearVBFG9000SniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000ModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNuclearVBFG9000SniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoShotgun:
  RLAutoShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAutoShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAutoDoubleShotgun:
  RLAutoDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAutoDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAutoDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBulletstormChaingun:
  RLBulletstormChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBulletstormChaingunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBulletstormChaingunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLMiniMissilePistol:
  RLMiniMissilePistolModding:
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLMiniMissilePistolSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolModLimit",1)
    TNT1 A 0 A_GiveInventory("RLMiniMissilePistolSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLPlasmaRifleMkII:
  RLPlasmaRifleMkIIModding:
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIIModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLPlasmaRifleMkIISniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIIModLimit",1)
    TNT1 A 0 A_GiveInventory("RLPlasmaRifleMkIISniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLGrenadeLauncher:
  RLGrenadeLauncherModding:
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLGrenadeLauncherSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherModLimit",1)
    TNT1 A 0 A_GiveInventory("RLGrenadeLauncherSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// ASSAULT RIFLE
  RLAssaultRifleChaingun:
  RLAssaultRifleChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleChaingunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleChaingunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRiflePlasmaRifle:
  RLAssaultRiflePlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRiflePlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRiflePlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleMinigun:
  RLAssaultRifleMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleMinigunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleMinigunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleLaserRifle:
  RLAssaultRifleLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleNuclearPlasmaRifle:
  RLAssaultRifleNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleNuclearPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleNuclearPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleUzi:
  RLAssaultRifleUziModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleUziSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLAssaultRifleBattleRifle:
  RLAssaultRifleBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLAssaultRifleBattleRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLAssaultRifleBattleRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// BURST CANNON
  RLBurstCannonChaingun:
  RLBurstCannonChaingunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonChaingunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonChaingunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonPlasmaRifle:
  RLBurstCannonPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonMinigun:
  RLBurstCannonMinigunModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonMinigunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonMinigunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonLaserRifle:
  RLBurstCannonLaserRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonNuclearPlasmaRifle:
  RLBurstCannonNuclearPlasmaRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonNuclearPlasmaRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonNuclearPlasmaRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonUzi:
  RLBurstCannonUziModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonUziSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonUziSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLBurstCannonBattleRifle:
  RLBurstCannonBattleRifleModding:
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLBurstCannonBattleRifleSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleModLimit",1)
    TNT1 A 0 A_GiveInventory("RLBurstCannonBattleRifleSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
// NANO SHRAPNEL
  RLNanoShrapnelShotgun:
  RLNanoShrapnelShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelCombatShotgun:
  RLNanoShrapnelCombatShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelCombatShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelCombatShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelDoubleShotgun:
  RLNanoShrapnelDoubleShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelDoubleShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelDoubleShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelSuperShotgun:
  RLNanoShrapnelSuperShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelSuperShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelSuperShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelAssaultShotgun:
  RLNanoShrapnelAssaultShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelAssaultShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelAssaultShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RLNanoShrapnelPlasmaShotgun:
  RLNanoShrapnelPlasmaShotgunModding:
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunModLimit",0,"NoMod")
    TNT1 A 0 A_JumpIfInventory("RLNanoShrapnelPlasmaShotgunSniperMod",0,"NoMod")
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunModLimit",1)
    TNT1 A 0 A_GiveInventory("RLNanoShrapnelPlasmaShotgunSniperMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorSniper", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorSniperToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeSniper", 1)
	Goto CyberneticArmorModdingContinue
  NoMod:
    TNT1 A 0 A_Print("This weapon cannot support further modification.")
    Fail
  AdvancedWeapon:
    TNT1 A 0 A_Print("This weapon is too advanced for basic modification.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

ACTOR RLOnyxModItem : CustomInventory 16508
{
  -COUNTITEM
  +INVENTORY.INVBAR
  +INVENTORY.UNTOSSABLE
  +INVENTORY.BIGPOWERUP
  +INVENTORY.NEVERRESPAWN
  Tag "Onyx Modpack"
  Inventory.InterHubAmount 8
  Inventory.MaxAmount 8
  Inventory.Icon "OMODI0"
  Inventory.Pickupsound "misc/modpackpickup"
  Inventory.UseSound "weapons/assembly"
  Inventory.PickupMessage "You picked up an Onyx Mod Pack."
  States
  {
  Spawn:
    OMOD ABCDCB 3
    Loop
  Pickup:
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,3)
	TNT1 A 0 A_JumpIfInventory("RLModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLModLimit", 1)
    Stop
	TNT1 A 0 A_JumpIfInventory("RLScavengerModLimit",0,"NoPickup")
    TNT1 A 0 A_GiveInventory("RLScavengerModLimit", 1)
    Stop
  Use:
	TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdingConfirm",1,"CyberneticArmorModding")
	TNT1 A 0 A_JumpIfInventory("RLUseOnyxMod",1,"ArmorSelect")
    TNT1 A 0 A_GiveInventory("RLUseOnyxMod", 1)
    TNT1 A 0 A_PlaySound("hud/generic", 5)
	TNT1 A 0 A_Print("Use Onyx Mod again to apply to current armor. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
    Fail
  ArmorSelect:
    TNT1 A 0 A_TakeInventory("RLUseOnyxMod", 1)
    TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"IndestructibleUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLGreenArmorToken",1,"GreenArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLBlueArmorToken",1,"BlueArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLRedArmorToken",1,"RedArmorUpgrade")
// Exotic Armors
    TNT1 A 0 A_JumpIfInventory("RLBallisticVestArmorToken",1,"BallisticVestArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLBulletProofVestArmorToken",1,"BulletProofVestArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLDuelistArmorToken",1,"DuelistArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLEnergyShieldedVestArmorToken",1,"EnergyShieldedVestArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLGothicArmorToken",1,"GothicArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLMedicalArmorToken",1,"MedicalArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLPhaseshiftArmorToken",1,"PhaseshiftArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLCyberwarriorArmorToken",1,"CyberwarriorArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLRepulsionWaveSuitArmorToken",1,"RepulsionWaveSuitArmorUpgrade")
    TNT1 A 0 A_JumpIfInventory("RLSurvivalMediArmorToken",1,"SurvivalMediArmorUpgrade")
// nope.avi
	TNT1 A 0 A_Print("This armor cannot be made indestructible.", 4)
    Fail
  GreenArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLGreenArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModGreenArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModGreenArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  BlueArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLBlueArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModBlueArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModBlueArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RedArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLRedArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModRedArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModRedArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  BallisticVestArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLBallisticVestArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  BulletProofVestArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLBulletProofVestArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  DuelistArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLDuelistArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModDuelistArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModDuelistArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  EnergyShieldedVestArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLEnergyShieldedVestArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  GothicArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL200ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLGothicArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModGothicArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModGothicArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  MedicalArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLMedicalArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModMedicalArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModMedicalArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  PhaseshiftArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLPhaseshiftArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberwarriorArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLCyberwarriorArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  RepulsionWaveSuitArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLRepulsionWaveSuitArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModRepulsionWaveSuitArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModRepulsionWaveSuitArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  SurvivalMediArmorUpgrade:
	TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
    TNT1 A 0 A_TakeInventory("RLSurvivalMediArmorToken", 1)
    TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
    TNT1 A 0 A_GiveInventory("RLOModSurvivalMediArmorToken",1)
    TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn", 1)
    TNT1 A 0 A_GiveInventory("RLOModSurvivalMediArmor",1)
    TNT1 A 0 A_Print("This armor has been made indestructible.")
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModding:
    TNT1 A 0 A_Print("Your Cybernetic Armor has been Onyx \c-modded.")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorModdingConfirm",1)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"CyberneticArmorModdingRenegade")
    TNT1 A 0 A_TakeInventory("RLCyberneticArmor",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorOnyx", 1)
	Goto CyberneticArmorModdingContinue
  CyberneticArmorModdingContinue:
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorOnyxToken", 1)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdedToken", 1)
    TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1,2)
    TNT1 A 0 A_TakeInventory("RLModLimit", 1)
    Stop
    TNT1 A 0 A_TakeInventory("RLScavengerModLimit", 1)
    Stop
  CyberneticArmorModdingRenegade:
    TNT1 A 0 A_TakeInventory("RLCyberneticArmorRenegade",1)
    TNT1 A 0 A_TakeInventory("BasicArmor",99999)
    TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegadeOnyx", 1)
	Goto CyberneticArmorModdingContinue
  IndestructibleUpgrade:
    TNT1 A 0 A_Print("This armor is already indestructible.")
    Fail
  NoPickup:
	TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
	TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
	TNT1 A 0 A_Print("You are already carrying the maximum amount of mod packs.", 5)
   NoPickup_NoPrint:
    TNT1 A 0
	Fail
  }
}

//-------------------------------------------------------------------
//		CHAINSAW

Actor RLDoubleChainsawConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLRipperConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		PISTOL

Actor RLSilencedPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLShredderPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLSpeedloaderPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLHighPowerPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLEnergyPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoPistolConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		SHOTGUN

Actor RLElephantGunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLHeavyShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaticShrapnelShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAutoShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		COMBAT SHOTGUN

Actor RLTacticalShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaticShrapnelCombatShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelCombatShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		DOUBLE SHOTGUN

Actor RLHeavyDoubleShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaticShrapnelDoubleShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelDoubleShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLFocusedDoubleShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAutoDoubleShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		CHAINGUN

Actor RLGatlingGunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLHighPowerChaingunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleChaingunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonChaingunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBulletstormChaingunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoChaingunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoChaingunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		ROCKET LAUNCHER

Actor RLMotherInLawConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLMicroLauncherConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLTacticalRocketLauncherConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLGrenadeLauncherConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoRocketLauncherConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		PLASMA RIFLE

Actor RLHighPowerPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRiflePlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLHyperBlasterConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaRefractorConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaRifleMkIIConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		BFG9000

Actor RLHighPowerBFG9000Confirm : Inventory
{
inventory.maxamount 1
}

Actor RLVBFG9000Confirm : Inventory
{
inventory.maxamount 1
}

Actor RLBiggestFuckingGunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		BLASTER

Actor RLHighPowerBlasterConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormBlasterConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLOverchargedBlasterConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoBlasterConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		COMBAT PISTOL

Actor RLHighPowerCombatPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormCombatPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLEnergyCombatPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoCombatPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoCombatPistolConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		DESERT EAGLE

Actor RLHighPowerDesertEagleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormDesertEagleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaDesertEagleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLMiniMissilePistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoDesertEagleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoDesertEagleConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		UZI

Actor RLHighPowerUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLPlasmaUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoUziConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoUziConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		BATTLE RIFLE

Actor RLHighPowerBattleRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleBattleRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonBattleRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoBattleRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoBattleRifleConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		SUPER SHOTGUN

Actor RLPlasmaticShrapnelSuperShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelSuperShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		ASSAULT SHOTGUN

Actor RLPlasmaticShrapnelAssaultShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelAssaultShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		PLASMA SHOTGUN

Actor RLPlasmaticShrapnelPlasmaShotgunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoShrapnelPlasmaShotgunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		TRISTAR BLASTER

Actor RLHighPowerTristarBlasterConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoTristarBlasterConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		MINIGUN

Actor RLHighPowerMinigunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleMinigunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonMinigunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAutocannonConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoMinigunConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLDemolitionAmmoMinigunConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		MISSILE LAUNCHER

Actor RLNanoManufactureAmmoMissileLauncherConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		NAPALM LAUNCHER

Actor RLNanoManufactureAmmoNapalmLauncherConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		LASER RIFLE

Actor RLHighPowerLaserRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleLaserRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonLaserRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLNanoManufactureAmmoLaserRifleConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		NUCLEAR PLASMA PISTOL

Actor RLHighPowerNuclearPlasmaPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLStormNuclearPlasmaPistolConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLSuperchargedNuclearPlasmaPistolConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		NUCLEAR PLASMA RIFLE

Actor RLHighPowerNuclearPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLAssaultRifleNuclearPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

Actor RLBurstCannonNuclearPlasmaRifleConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		Nuclear BFG9000
//The glorious engine of death.
Actor RLHighPowerNuclearBFG9000Confirm : Inventory
{
inventory.maxamount 1
}

Actor RLNuclearVBFG9000Confirm : Inventory
{
inventory.maxamount 1
}

Actor RLNuclearBiggestFuckingGunConfirm : Inventory
{
inventory.maxamount 1
}
