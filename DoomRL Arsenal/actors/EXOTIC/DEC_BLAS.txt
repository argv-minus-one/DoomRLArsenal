
ACTOR RLBlaster : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was zapped by %k's blaster."
  Inventory.Pickupmessage "You picked up a Blaster."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Blaster"
  Weapon.Kickback 40
  Weapon.SelectionOrder 1899
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLBlasterClip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    Goto NanoRegenCheck
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",1,2)
    BLAS C 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS B 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS A 70 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip", 10, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip", 13, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",3,2)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip", 16, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLBlasterBulkMod",4,2)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip", 19, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip", 22, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLBlasterClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 6 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS B 6 A_WeaponReady (32)
	Goto NanoRegenCheckBegin
    BLAS A 6 A_WeaponReady (32)
    Goto NanoRegenCheckBegin
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLBlaster",0,0,0)
	TNT1 A 1 A_TakeInventory("RLBlaster",1)
	Stop
  AfterModDrop:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 8 A_WeaponReady (16)
	Goto Ready
    BLAS B 8 A_WeaponReady (16)
	Goto Ready
    BLAS A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 9 A_WeaponReady (16)
	Goto Ready
    BLAS B 9 A_WeaponReady (16)
	Goto Ready
    BLAS A 9 A_WeaponReady (16)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    BLAS D 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLBlasterSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    BLAS D 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterConfirm",1, "AssembleHighPowerBlaster")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterConfirm",1, "AssembleStormBlaster")
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterConfirm",1, "AssembleOverchargedBlaster")
	TNT1 A 0 A_JumpIfInventory("RLNanoManufactureAmmoBlasterConfirm",1, "AssembleNanoManufactureAmmoBlaster")
	TNT1 A 0 A_JumpIfNoAmmo("Ready")
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 2
	Goto FireBegin
    BLAS B 2
	Goto FireBegin
    BLAS A 2
	Goto FireBegin
  FireBegin:
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FirePP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FireAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3, 0, -1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",3,"FirePPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FirePPA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (64), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FirePPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FirePAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3, 0, -1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireAA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FirePAA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",3,"FireAAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePPP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",4,"FirePPPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FirePPPA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (random(1,7)*9), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (72), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePPA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",3,"FirePPPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FirePPAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3, 0, -1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3, 0, -1, (64), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePAA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FirePPAA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",3,"FirePAAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireAAA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FirePAAA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",4,"FireAAAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 0, -1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePPPP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (random(1,7)*10), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 0, -1, (80), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePPPA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (3, 0, -1, (random(1,7)*9), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3, 0, -1, (72), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePPAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2.5, 0, -1, (64), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FirePAAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 0, -1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireAAAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0, -1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSS")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireSP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireSA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSS:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireSSP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireSSA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((48), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSSP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FireSPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireSPA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSSA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireSPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FireSAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1, 0, 1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSSP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FireSSPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*7), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((56), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSSA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FireSSAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((48), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSPP:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSSPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",3,"FireSPPP")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",1,"FireSPPA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (64), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSPA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",2,"FireSPPA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",2,"FireSPAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1, 0, 1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSAA:
	TNT1 A 0 A_JumpIfInventory("RLBlasterSniperMod",2,"FireSSAA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterPowerMod",1,"FireSPAA")
	TNT1 A 0 A_JumpIfInventory("RLBlasterAgilityMod",3,"FireSAAA")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0, 1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSSPP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*8), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((64), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSSAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((48), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSSPA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*7), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((56), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSPPP:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (random(1,7)*9), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0, 1, (72), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSPPA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1, 0, 1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1, 0, 1, (64), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSPAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0, 1, (56), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireSAAA:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (48), "RLLaserPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/blaster", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",2,"FireFinishF2")
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"FireFinishF1")
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS G 3 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS F 3 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS E 3 Bright A_GunFlash
	Goto FireFinishFinal
  FireFinishF1:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS G 2 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS F 2 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS E 2 Bright A_GunFlash
	Goto FireFinishFinal
  FireFinishF2:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS G 1 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS F 1 Bright A_GunFlash
	Goto FireFinishFinal
    BLAS E 1 Bright A_GunFlash
	Goto FireFinishFinal
  FireFinishFinal:
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",2,"FireFinishFinalF2")
	TNT1 A 0 A_JumpIfInventory("RLBlasterFirestormMod",1,"FireFinishFinalF1")
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 6
	Goto Ready
    BLAS B 6
	Goto Ready
    BLAS A 6
	Goto Ready
  FireFinishFinalF1:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 4
	Goto Ready
    BLAS B 4
	Goto Ready
    BLAS A 4
	Goto Ready
  FireFinishFinalF2:
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",8,4)
	TNT1 A 0 A_JumpIfInventory("RLBlasterClip",2,2)
    BLAS C 2
	Goto Ready
    BLAS B 2
	Goto Ready
    BLAS A 2
	Goto Ready
  Flash:
    TNT1 A 2 A_Light2
    TNT1 A 1 A_Light1
    Goto LightDone
  Spawn:
    BLAS X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerBlasterConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLStormBlasterConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLOverchargedBlasterConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLNanoManufactureAmmoBlasterConfirm",1, "CancelAssembly")
	Goto Ready
  CancelAssembly:
	TNT1 A 0 A_Print("Assembly canceled.")
	TNT1 A 0 A_PlaySound("hud/assemblycancel", 5)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(32,2,3)
	TNT1 A 0 A_Jump(256,3,4,5,6)
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLBlaster",1)
	Stop
  AssembleHighPowerBlaster:
	TNT1 A 0 A_Print("\cvHigh Power Blaster \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerBlasterConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLHighPowerBlaster",1)
	TNT1 A 0 A_SelectWeapon("RLHighPowerBlaster")
	TNT1 A 0 A_TakeInventory("RLBlaster",1)
	Stop
  AssembleStormBlaster:
	TNT1 A 0 A_Print("\cvStorm Blaster \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLStormBlasterConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLStormBlaster",1)
	TNT1 A 0 A_SelectWeapon("RLStormBlaster")
	TNT1 A 0 A_TakeInventory("RLBlaster",1)
	Stop
  AssembleOverchargedBlaster:
	TNT1 A 0 A_Print("\cvOvercharged Blaster \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLOverchargedBlasterConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLOverchargedBlaster",1)
	TNT1 A 0 A_SelectWeapon("RLOverchargedBlaster")
	TNT1 A 0 A_TakeInventory("RLBlaster",1)
	Stop
  AssembleNanoManufactureAmmoBlaster:
	TNT1 A 0 A_Print("\cvNanomachic Blaster \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1, 2)
	TNT1 A 0 A_Jump(256, 2)
    TNT1 A 0 A_PlaySound("technician/laugh", CHAN_VOICE)
    TNT1 A 0 A_PlaySound("weapons/masterassembly", CHAN_AUTO)
	TNT1 A 0 A_TakeInventory("RLBlasterSelected", 1)
    TNT1 A 0 A_TakeInventory("RLBlasterModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterPowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLBlasterFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLBlasterNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoBlasterConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoBlaster",1)
	TNT1 A 0 A_SelectWeapon("RLNanoManufactureAmmoBlaster")
	TNT1 A 0 A_TakeInventory("RLBlaster",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLBlasterSelected : Inventory
{
inventory.maxamount 1
}

Actor RLBlasterModLimit : Inventory
{
inventory.maxamount 4
}

Actor RLBlasterPowerMod : Inventory
{
inventory.maxamount 4
}

Actor RLBlasterBulkMod : Inventory
{
inventory.maxamount 4
}

Actor RLBlasterAgilityMod : Inventory
{
inventory.maxamount 4
}

Actor RLBlasterTechnicalMod : Inventory
{
inventory.maxamount 4
}

Actor RLBlasterNanoMod : Inventory
{
inventory.maxamount 2
}

Actor RLBlasterFirestormMod : Inventory
{
inventory.maxamount 2
}

Actor RLBlasterSniperMod : Inventory
{
inventory.maxamount 2
}

ACTOR RLBlasterClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 22
   Inventory.Icon ""
}

ACTOR RLBlasterPickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		BLAS X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLBlaster",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/blasterpickup")
		TNT1 A 0 A_GiveInventory("RLBlaster",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \ctBlaster.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Blaster =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLBlaster
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		BLAS X 1
		Loop
	Death:
		TNT1 A 0
		BLAS X 1 A_SpawnItem("RLBlasterPickup",0,0,0,0)
		Stop
	}
}
