
ACTOR RLLaserRifle : RLWeapon
{
  Inventory.Pickupsound "misc/w_pkup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was marked to death by %k's laser rifle."
  Inventory.Pickupmessage "You picked up a Laser Rifle."
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Laser Rifle"
  Weapon.Kickback 40
  Weapon.SelectionOrder 20
  Weapon.SlotNumber 6
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLLaserRifleClip"
  Weapon.AmmoType2 "Cell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,2)
    LASR A 1 A_WeaponReady (48)
    Goto Ready
  NanoRegenCheck:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",1,2)
    LASR A 70 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	Goto NanoRegenCheckBegin
  NanoRegenCheckBegin:
    LASR A 70 A_WeaponReady (32)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 40, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 52, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 64, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",4,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 76, "Ready")
	Goto NanoRegen
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 88, "Ready")
	Goto NanoRegen
  NanoRegen:
	TNT1 A 0 A_GiveInventory("RLLaserRifleClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",2,2)
    LASR A 17 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
    LASR A 9 A_WeaponReady (32)
    Goto NanoRegenCheckBegin+1
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLLaserRifle",0,0,0)
	TNT1 A 1 A_TakeInventory("RLLaserRifle",1)
	Stop
  AfterModDrop:
    LASR A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    LASR A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    LASR A 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLLaserRifleSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    LASR A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleConfirm",1, "AssembleHighPowerLaserRifle")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleConfirm",1, "AssembleAssaultRifleLaserRifle")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleConfirm",1, "AssembleBurstCannonLaserRifle")
	TNT1 A 0 A_JumpIfInventory("RLNanoManufactureAmmoLaserRifleConfirm",1, "AssembleNanoManufactureAmmoLaserRifle")
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_GiveInventory("RLLaserRifleAmmochain",1)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FirePP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FirePA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FireAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",3,"FirePPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FirePPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*7), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FirePPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FirePAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FirePAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",3,"FireAAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePPP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",4,"FirePPPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FirePPPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*8), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePPA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",3,"FirePPPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FirePPAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FirePPAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",3,"FirePAAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireAAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FirePAAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",4,"FireAAAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePPPP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*9), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, -1, (random(1,7)*9), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePPPA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*8), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePPAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*7), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FirePAAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireAAAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSS")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireSP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireSA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSS:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireSSP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireSSA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSSP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FireSPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireSPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSSA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireSPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FireSAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSSP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FireSSPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSSA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FireSSAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 15)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 15)
    Goto FireFinish
  FireSPP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSSPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",3,"FireSPPP")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",1,"FireSPPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSPA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSSPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",2,"FireSPPA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",2,"FireSPAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleSniperMod",2,"FireSSAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRiflePowerMod",1,"FireSPAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAgilityMod",3,"FireSAAA")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSSPP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*7), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*7), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 10)
    Goto FireFinish
  FireSSAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 20)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*5), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 20)
    Goto FireFinish
  FireSSPA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 1, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 15)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((random(1,7)*6), 0, 0, "none", "Red", RGF_NOPIERCING | RGF_SILENT | RGF_FULLBRIGHT, 0, "RLLaserPuff", 0, 0, 0, 3, 1, 15)
    Goto FireFinish
  FireSPPP:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*8), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*8), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSPPA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*7), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSPAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*6), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireSAAA:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_USEAMMO | FBF_NORANDOM)
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 1, (random(1,7)*5), "RLLaserPuff", FBF_NORANDOM)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/laserrifle", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,6)
    Goto FireFinish+10
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFiringState",1,3)
	TNT1 A 0 A_GiveInventory("RLLaserRifleFiringState",1)
    LASR C 1 Bright A_GunFlash
    Goto FireFinish+12
    LASR B 1 Bright A_GunFlash
	TNT1 A 0 A_TakeInventory("RLLaserRifleFiringState",1)
    Goto FireFinish+12
    LASR B 1 Bright A_GunFlash
	LASR C 1 Bright
    Goto FireFinish+12
    LASR B 1 Bright A_GunFlash
	LASR C 2 Bright
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleAmmochain",4,2)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_TakeInventory("RLLaserRifleAmmochain",4)
    LASR A 2 A_Refire
    LASR RS 3
    LASR S 4
    LASR SR 3
    LASR A 2 A_Refire
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleNanoMod",1,"Ready")
	LASR A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 40, "Ready")
	Goto Reload+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 52, "Ready")
	Goto Reload+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 64, "Ready")
	Goto Reload+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",4,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 76, "Ready")
	Goto Reload+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip", 88, "Ready")
	TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",4,"Reload4")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",3,"Reload3")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",2,"Reload2")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"Reload1")
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 2
    LASR I 2
    LASR J 2
    TNT1 A 0 A_PlaySound("weapons/laserrifleunload", 6)
    LASR K 2
    LASR L 2
    LASR M 2
    LASR N 2
    LASR O 2
    LASR P 2
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
	Goto ReloadWorking
  Reload1:
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 1
    LASR I 1
    LASR J 1
    TNT1 A 0 A_PlaySound("weapons/laserrifleunload", 6)
    LASR K 2
    LASR L 2
    LASR M 2
    LASR N 2
    LASR O 2
    LASR P 2
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
	Goto ReloadWorking
  Reload2:
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 1
    LASR I 1
    LASR J 1
    TNT1 A 0 A_PlaySound("weapons/laserrifleunload", 6)
    LASR K 1
    LASR L 1
    LASR M 1
    LASR N 2
    LASR O 2
    LASR P 2
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
	Goto ReloadWorking
  Reload3:
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 1
    LASR I 1
    LASR J 1
    TNT1 A 0 A_PlaySound("weapons/laserrifleunload", 6)
    LASR K 1
    LASR L 1
    LASR M 1
    LASR N 1
    LASR O 1
    LASR P 1
    LASR Q 10
    LASR P 2
    LASR O 2
    LASR N 2
    LASR M 2
    LASR L 2
	Goto ReloadWorking
  Reload4:
    LASR D 1
    LASR E 1
    LASR F 1
    LASR G 1
    LASR H 1
    LASR I 1
    LASR J 1
    TNT1 A 0 A_PlaySound("weapons/laserrifleunload", 6)
    LASR K 1
    LASR L 1
    LASR M 1
    LASR N 1
    LASR O 1
    LASR P 1
    LASR Q 10
    LASR P 1
    LASR O 1
    LASR N 1
    LASR M 2
    LASR L 2
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Cell", 1)
	TNT1 A 0 A_GiveInventory("RLLaserRifleClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",40,9)
	Goto ReloadWorking+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",52,7)
	Goto ReloadWorking+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",3,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",64,5)
	Goto ReloadWorking+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleBulkMod",4,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",76,3)
	Goto ReloadWorking+11
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleClip",88,2)
	TNT1 A 0 A_JumpIfInventory("Cell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/laserrifleload", 7)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",4,"ReloadFinish4")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",3,"ReloadFinish3")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",2,"ReloadFinish2")
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleTechnicalMod",1,"ReloadFinish1")
    LASR K 2
    LASR J 2
    LASR I 2
    LASR H 2
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 8
	Goto Ready
  ReloadFinish1:
    LASR K 1
    LASR J 1
    LASR I 1
    LASR H 2
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 8
	Goto Ready
  ReloadFinish2:
    LASR K 1
    LASR J 1
    LASR I 1
    LASR H 1
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 6
	Goto Ready
  ReloadFinish3:
    LASR K 1
    LASR J 1
    LASR I 1
    LASR H 1
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
    LASR A 3
	Goto Ready
  ReloadFinish4:
    LASR K 1
    LASR J 1
    LASR I 1
    LASR H 1
    LASR G 1
    LASR F 1
    LASR E 1
    LASR D 1
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",2,2)
	TNT1 A 0 A_JumpIfInventory("RLLaserRifleFirestormMod",1,2)
    Goto Flash+4
    TNT1 A 1 Bright A_Light2
    Goto LightDone
    TNT1 A 2 Bright A_Light2
    Goto LightDone
    TNT1 A 3 Bright A_Light2
    Goto LightDone
  Spawn:
    LASR X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	TNT1 A 0 A_JumpIfInventory("RLHighPowerLaserRifleConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLAssaultRifleLaserRifleConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLBurstCannonLaserRifleConfirm",1, "CancelAssembly")
	TNT1 A 0 A_JumpIfInventory("RLNanoManufactureAmmoLaserRifleConfirm",1, "CancelAssembly")
	Goto Ready
  ArmorModConversion:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemBlue",1, "ArmorModConversionBlue")
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemRed",1, "ArmorModConversionRed")
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItem",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItemBlue",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \chCombat \c-Mode.")
	Goto AfterModDrop
  ArmorModConversionBlue:
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemBlue",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItemRed",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \cgCommando \c-Mode.")
	Goto AfterModDrop
  ArmorModConversionRed:
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
	TNT1 A 0 A_TakeInventory("RLArmorModItemRed",1)
	TNT1 A 0 A_GiveInventory("RLArmorModItem",1)
	TNT1 A 0 A_PlaySound("hud/assemblyconfirm", 5)
	TNT1 A 0 A_Print("Armor Mod converted to \cdSecurity \c-Mode.")
	Goto AfterModDrop
  CancelAssembly:
	TNT1 A 0 A_Print("Assembly canceled.")
	TNT1 A 0 A_PlaySound("hud/assemblycancel", 5)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(32,2,3)
	TNT1 A 0 A_Jump(256,3,4,5,6)
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLBulkMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLPowerMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLAgilityMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLTechnicalMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLLaserRifle",1)
	Stop
  AssembleHighPowerLaserRifle:
	TNT1 A 0 A_Print("\cvHigh Power Laser Rifle \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHighPowerLaserRifleConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLHighPowerLaserRifle",1)
	TNT1 A 0 A_SelectWeapon("RLHighPowerLaserRifle")
	TNT1 A 0 A_TakeInventory("RLLaserRifle",1)
	Stop
  AssembleAssaultRifleLaserRifle:
	TNT1 A 0 A_Print("\cvAssault Laser Rifle \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssaultRifleLaserRifleConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLAssaultRifleLaserRifle",1)
	TNT1 A 0 A_SelectWeapon("RLAssaultRifleLaserRifle")
	TNT1 A 0 A_TakeInventory("RLLaserRifle",1)
	Stop
  AssembleBurstCannonLaserRifle:
	TNT1 A 0 A_Print("\cvBurst Laser Rifle \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLBurstCannonLaserRifleConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLBurstCannonLaserRifle",1)
	TNT1 A 0 A_SelectWeapon("RLBurstCannonLaserRifle")
	TNT1 A 0 A_TakeInventory("RLLaserRifle",1)
	Stop
  AssembleNanoManufactureAmmoLaserRifle:
	TNT1 A 0 A_Print("\cvNanomachic Laser Rifle \c-assembled.")
    TNT1 A 0 A_PlaySound("weapons/assembly", CHAN_ITEM)
	TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1, 2)
	TNT1 A 0 A_Jump(256, 2)
    TNT1 A 0 A_PlaySound("technician/laugh", CHAN_VOICE)
    TNT1 A 0 A_PlaySound("weapons/masterassembly", CHAN_AUTO)
	TNT1 A 0 A_TakeInventory("RLLaserRifleSelected", 1)
    TNT1 A 0 A_TakeInventory("RLLaserRifleModLimit", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRiflePowerMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleBulkMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleAgilityMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleTechnicalMod", 4)
    TNT1 A 0 A_TakeInventory("RLLaserRifleFirestormMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleSniperMod", 2)
    TNT1 A 0 A_TakeInventory("RLLaserRifleNanoMod", 2)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLNanoManufactureAmmoLaserRifleConfirm",1)
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, 2)
	TNT1 A 0 A_Jump(256, 2)
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_GiveInventory("RLNanoManufactureAmmoLaserRifle",1)
	TNT1 A 0 A_SelectWeapon("RLNanoManufactureAmmoLaserRifle")
	TNT1 A 0 A_TakeInventory("RLLaserRifle",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLLaserPuff : BulletPuff
{
  -ALLOWPARTICLES
  -RANDOMIZE
  +PUFFONACTORS
  +ALWAYSPUFF
  +THRUGHOST
  RenderStyle Add
  Translation "112:127=168:191"
  Alpha 1
  Scale 0.2
  VSpeed 0
  Mass 5
  Decal "RedPlasmaScorch"
  Damagetype "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 A_PlaySound("weapons/laserriflehit", CHAN_BODY, 1, 0, 2)
    SHOK ACEGIKMOQ 1 Bright A_FadeTo (0.1, 0.1, 0)
	Stop
  Melee:
    Goto Spawn
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLLaserRifleSelected : Inventory
{
inventory.maxamount 1
}

Actor RLLaserRifleFiringState : Inventory
{
inventory.maxamount 1
}

Actor RLLaserRifleAmmochain : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRifleModLimit : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRiflePowerMod : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRifleBulkMod : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRifleAgilityMod : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRifleTechnicalMod : Inventory
{
inventory.maxamount 4
}

Actor RLLaserRifleFirestormMod : Inventory
{
inventory.maxamount 2
}

Actor RLLaserRifleNanoMod : Inventory
{
inventory.maxamount 2
}

Actor RLLaserRifleSniperMod : Inventory
{
inventory.maxamount 2
}

ACTOR RLLaserRifleClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 88
   Inventory.Icon ""
}

ACTOR RLLaserRiflePickup : CustomInventory
{
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		LASR X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLLaserRifle",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup2") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/laserriflepickup")
		TNT1 A 0 A_GiveInventory("RLLaserRifle",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \ctLaser Rifle.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("Cell",0,1)
		Goto AmmoPickup
	NotPickup2:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Laser Rifle =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	AmmoPickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Cell",0,"AmmoFull")
		TNT1 A 0 A_PlaySound("misc/w_pkup")
		TNT1 A 1 A_GiveInventory("Cell",40)
		Stop
	AmmoFull:
		LASR X 1
		Fail
	}
}

ACTOR DroppedRLLaserRifle
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		LASR X 1
		Loop
	Death:
		TNT1 A 0
		LASR X 1 A_SpawnItem("RLLaserRiflePickup",0,0,0,0)
		Stop
	}
}
