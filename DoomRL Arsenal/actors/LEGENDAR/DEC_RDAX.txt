
ACTOR RLRealityDistortionArray : RLWeapon
{
  Inventory.Pickupsound "weapons/legendary"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was transformed by %k's Reality Distortion Array."
  Inventory.Pickupmessage "You picked up the goddamn Reality Distortion Array. Holy shit."
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Reality Distortion Array"
  Weapon.Kickback 40
  Weapon.SelectionOrder 20
  Weapon.SlotNumber 7
  Weapon.AmmoUse1 100
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLRealityDistortionArrayClip"
  Weapon.AmmoType2 "Cell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_AlertMonsters
    TNT1 A 0 A_PlaySound("weapons/rdaidle", CHAN_WEAPON)
    BG4G ABCD 3 A_WeaponReady (48)
    Loop
  ReadyReload:
    TNT1 A 0 A_PlaySound("weapons/rdaidle", CHAN_WEAPON)
    BG4G ABCD 3 A_WeaponReady (WRF_NOFIRE | WRF_ALLOWZOOM)
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArraySniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLRealityDistortionArraySelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLRealityDistortionArray",0,0,0)
	TNT1 A 1 A_TakeInventory("RLRealityDistortionArray",1)
	Stop
  AfterModDrop:
    TNT1 A 0 A_PlaySound("weapons/rdaidle", CHAN_WEAPON)
    BG4G ABCD 3 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
    TNT1 A 0 A_PlaySound("weapons/rdaidle", CHAN_WEAPON)
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    BG4G ABCD 3 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLRealityDistortionArraySelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    BG4G P 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLRealityDistortionArraySelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    BG4G E 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
    BG4G E 20 A_PlaySound ("weapons/rdacharge")
    BG4G F 4
    BG4G G 1
    BG4G H 1
    BG4G I 1
    BG4G J 1
    BG4G K 2 Bright
  FireSequence:
    TNT1 A 0 A_GunFlash
	TNT1 A 0 A_JumpIfNoAmmo("FireFinish")
	TNT1 A 0 A_AlertMonsters
  Fuckyoustopmessingwiththisthing:
    TNT1 A 0
    Goto Fuckyoustopmessingwiththisthing
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayNanoMod",1,"FireN")
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArraySniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayFirestormMod",1,"FireF")
	TNT1 A 0 A_FireBullets (4.5, 4.5, -1, 20, "RLBFG10kShot", 1)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_FireBullets (0.5, 0.5, 1, 20, "RLBFG10kShot", 1)
    Goto FireFinish
  FireN:
	TNT1 A 0 A_FireBullets (4.5, 4.5, -1, 20, "RLBFG10kShotSafe", 1)
    Goto FireFinish
  FireFinish:
    BG4G L 2 Bright
    BG4G M 2 Bright
    BG4G N 2 Bright
    TNT1 A 0 A_PlaySound ("weapons/rdacool", 6)
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayClip", 100, "ReadyReload")
	TNT1 A 0 A_JumpIfInventory("Cell", 1, 6)
    TNT1 A 0 A_PlaySound("weapons/rdaidle", CHAN_WEAPON)
    BG4G ABCD 3
	Goto Ready
	TNT1 A 0 // Play the reload animation.
    BG4G P 2
    BG4G Q 2
    BG4G P 2
    BG4G R 2
    BG4G S 2
    BG4G T 2
    BG4G U 2
    BG4G V 2
    BG4G W 2
    BG4G X 2
    BG4G Y 2
    BG4G Z 2 A_PlaySound("weapons/rdaunload", 5)
    TNT1 A 28
	Goto ReloadWorking
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Cell", 1)
	TNT1 A 0 A_GiveInventory("RLRealityDistortionArrayClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayClip",100,2)
	TNT1 A 0 A_JumpIfInventory("Cell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    BG4G Z 2
    BG4G Y 2 A_PlaySound("weapons/rdaload", 7)
    BG4G X 2
    BG4G W 2
    BG4G V 2
    BG4G U 2
    BG4G T 2
    BG4G S 2
    BG4G R 2
    BG4G P 2
    BG4G Q 2
    BG4G P 2
	Goto Ready
  Flash:
	TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArrayFirestormMod",1,1)
    Goto Flash+4
    TNT1 A 1 Bright A_Light(3)
    TNT1 A 1 Bright A_Light2
    TNT1 A 1 Bright A_Light1
    Goto LightDone
    TNT1 A 2 Bright A_Light(3)
    TNT1 A 2 Bright A_Light2
    TNT1 A 2 Bright A_Light1
    Goto LightDone
  Spawn:
    RDAB X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto ReadyReload
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArraySniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLRealityDistortionArrayNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLRealityDistortionArraySelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNanoMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLRealityDistortionArray",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

//-------------------------------------------------------------------
//		MECHANICS

Actor RLRealityDistortionArraySelected : Inventory
{
inventory.maxamount 1
}

Actor RLRealityDistortionArrayModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLRealityDistortionArrayFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLRealityDistortionArrayNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLRealityDistortionArraySniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLRealityDistortionArrayClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 100
   Inventory.Icon ""
}

ACTOR RLRealityDistortionArrayPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		RDAB X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLRealityDistortionArray",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/realitydistortionarraypickup")
		TNT1 A 0 A_GiveInventory("RLRealityDistortionArray",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up the goddamn \cdReality Distortion Array. \c-Holy shit.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= BFG 10K =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLRealityDistortionArray
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		RDAB X 1
		Loop
	Death:
		TNT1 A 0
		RDAB X 1 A_SpawnItem("RLRealityDistortionArrayPickup",0,0,0,0)
		Stop
	}
}
