
ACTOR RLNeuralStunner : RLWeapon
{
  Inventory.Pickupsound "weapons/neuralstunnerpickup"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was stunned by %k."
  Inventory.Pickupmessage "You picked up the Neural Stunner."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +NOAUTOFIRE
  +INVENTORY.UNTOSSABLE
  Scale 1.3
  Tag "NeuralStunner"
  Weapon.Kickback 0
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 15
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "Cell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    NEUG A 1 A_WeaponReady (48)
    Loop
  ReadyAfterFire:
    NEUG A 25 A_WeaponReady (WRF_ALLOWZOOM | WRF_NOBOB)
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLNeuralStunnerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNeuralStunner",0,0,0)
	TNT1 A 1 A_TakeInventory("RLNeuralStunner",1)
	Stop
  AfterModDrop:
    NEUG A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    NEUG A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLNeuralStunnerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    NEUG A 1 A_Lower
    Goto DeselectLoop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLNeuralStunnerSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    NEUG A 1 A_Raise
    Loop
  Click:
    NEUG BCD 1
    NEUG D 2
	TNT1 A 0 A_PlaySound("weapons/neuralstunnerclick", CHAN_WEAPON)
	TNT1 A 0 A_AlertMonsters
    NEUG D 4
    NEUG DCB 2
    Goto Ready
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Click")
	TNT1 A 0 A_AlertMonsters
    NEUG BCD 1
	TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerFirestormMod",1,"FireF")
	TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerNanoMod",1,"FireN")
	TNT1 A 0 A_JumpIfInventory("RLNeuralStunnerSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlast", 0, 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlastSharpshooter", 0, 1)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,3)
	TNT1 A 0 A_PlaySound("weapons/neuralstunner", CHAN_WEAPON)
	TNT1 A 0 A_RailAttack ((314), 0, 1, "None", "PaleGreen", RGF_SILENT | RGF_NOPIERCING | RGF_FULLBRIGHT, 0, "RLNeuralStunnerPuff", 0, 0, 0, 9, 2, 1, "None", 3)
    Goto FireFinish
	TNT1 A 0 A_PlaySound("weapons/neuralstunner", CHAN_WEAPON)
	TNT1 A 0 A_RailAttack ((315), 0, 1, "None", "PaleGreen", RGF_SILENT | RGF_NOPIERCING | RGF_FULLBRIGHT, 0, "RLNeuralStunnerPuff", 0, 0, 0, 9, 2, 1, "None", 3)
    Goto FireFinish
  FireF:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlastF", 0, 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlastSharpshooterF", 0, 1)
    Goto FireFinish
  FireN:
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlastN", 0, 1)
    Goto FireFinish
	TNT1 A 0 A_FireCustomMissile ("RLNeuralStunnerBlastSharpshooterN", 0, 1)
    Goto FireFinish
  FireFinish:
    NEUG E 2 Bright A_GunFlash
    NEUG FGFHI 1
    NEUG A 2
    Goto ReadyAfterFire
  Flash:
    TNT1 A 1 A_Light2
    TNT1 A 1 A_Light (5)
    Goto LightDone
  Spawn:
    NEUR AB 4 Bright
    Loop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLNeuralStunnerNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLNeuralStunnerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNanoMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLNeuralStunner",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLNeuralStunnerBlast : PlasmaBall
{
  Species "Player"
  +THRUSPECIES
  +FORCEPAIN
  Radius 8
  Height 8
  Alpha 0.98
  Damage (314)
  Damagetype "NeuralStun"
  SeeSound "weapons/neuralstunner"
  DeathSound "weapons/neuralstunnerhit"
  States
  {
  Spawn:
    STNB ABCD 2 Bright
    Loop
  Death:
    STNB DDDDDDEEEEEE 1 Bright A_Explode ((1),10,0)
    Stop
  }
}

ACTOR RLNeuralStunnerBlastF : RLNeuralStunnerBlast
{
  Damage (628)
  DeathSound "weapons/neuralstunnerheavyhit"
  States
  {
  Spawn:
    STNB ABCD 2 Bright
    Loop
  Death:
    BFE1 AAAABBBBCCCCDDDDEEEEFFFF 1 Bright A_Explode ((1),10,0)
    Stop
  }
}

ACTOR RLNeuralStunnerBlastN : RLNeuralStunnerBlast
{
  States
  {
  Spawn:
    STNB ABCD 2 Bright
    Goto SpawnLoop
  SpawnLoop:
    TNT1 A 0 A_SpawnItemEx ("RLNeuralStunnerBlastNEffect", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    STNB A 2 Bright A_RadiusThrust (-1000, 256, RTF_NOIMPACTDAMAGE, 150)
    TNT1 A 0 A_SpawnItemEx ("RLNeuralStunnerBlastNEffect", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    STNB B 2 Bright A_RadiusThrust (-1000, 256, RTF_NOIMPACTDAMAGE, 150)
    TNT1 A 0 A_SpawnItemEx ("RLNeuralStunnerBlastNEffect", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    STNB C 2 Bright A_RadiusThrust (-1000, 256, RTF_NOIMPACTDAMAGE, 150)
    TNT1 A 0 A_SpawnItemEx ("RLNeuralStunnerBlastNEffect", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    STNB D 2 Bright A_RadiusThrust (-1000, 256, RTF_NOIMPACTDAMAGE, 150)
    Loop
  }
}

ACTOR RLNeuralStunnerBlastNEffect : PlasmaBall
{
  -SOLID
  +NOCLIP
  Speed 0
  Damage 0
  Alpha 0.55
  Scale 0.4
  VSpeed 0
  SeeSound ""
  DeathSound ""
  States
  {
  Spawn:
    SHOK QOMKIGECA 1 Bright A_FadeTo (0.1, 0.05, 0)
	Stop
  }
}

ACTOR RLNeuralStunnerPuff
{ 
  +NOGRAVITY
  +NOBLOCKMAP
  +ALWAYSPUFF
  +PUFFONACTORS
  +RANDOMIZE
  +PUFFGETSOWNER
  Damagetype "NeuralStun"
  RenderStyle Add
  Alpha 0.98
  States
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_PlaySound("weapons/neuralstunnerhit", CHAN_BODY)
    STNB DDDDDDEEEEEE 1 Bright A_Explode ((1),10,0)
    Stop
  }
}

ACTOR RLNeuralStunnerPickupEffect
{
  Radius 16
  Height 8
  VSpeed 2
  +NOGRAVITY
  +NOINTERACTION
  Scale 1.3
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_ChangeVelocity (0, 0, 2, CVF_REPLACE)
    NEUR CCC 5
    Stop
  }
}

//-------------------------------------------------------------------
//		SHARPSHOOTER PROJECTILES

ACTOR RLNeuralStunnerBlastSharpshooter : RLNeuralStunnerBlast
{
  Damage (315)
}

ACTOR RLNeuralStunnerBlastSharpshooterF : RLNeuralStunnerBlastF
{
  Damage (315)
}

ACTOR RLNeuralStunnerBlastSharpshooterN : RLNeuralStunnerBlastN
{
  Damage (315)
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLNeuralStunnerSelected : Inventory
{
inventory.maxamount 1
}

Actor RLNeuralStunnerModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLNeuralStunnerNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLNeuralStunnerFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLNeuralStunnerSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLNeuralStunnerPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Scale 1.3
	Inventory.PickupFlash "RLNeuralStunnerPickupEffect"
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		NEUR AB 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLNeuralStunner",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/neuralstunnerpickup")
		TNT1 A 0 A_GiveInventory("RLNeuralStunner",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up the \ckNeural Stunner. \c-And a note signed ''-MM''")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ck=L= Neural Stunner =L=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLNeuralStunner
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	Scale 1.3
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		NEUR AB 4 Bright
		Loop
	Death:
		TNT1 A 0
		NEUR A 1 A_SpawnItem("RLNeuralStunnerPickup",0,0,0,0)
		Stop
	}
}
