
ACTOR RLHellsReign : RLWeapon
{
  Inventory.Pickupsound "weapons/unique"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o bowed down before %k's Hell's Reign."
  Inventory.Pickupmessage "You picked up Hell's Reign."
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Hell's Reign"
  Weapon.Kickback 40
  Weapon.SelectionOrder 20
  Weapon.SlotNumber 6
  Weapon.AmmoUse1 5
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLHellsReignClip"
  Weapon.AmmoType2 "Cell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"ReadyF")
    TNT1 A 0 A_PlaySound("weapons/hellsreignidle", 6, 1, 1)
    HELR ABC 1 A_WeaponReady (48)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignNanoMod",1,"ReadyN")
    Loop
  ReadyF:
    TNT1 A 0 A_PlaySound("weapons/hellsreignidle", 6, 1, 1)
    HE2R ABC 1 A_WeaponReady (48)
    Loop
  ReadyN:
	TNT1 A 0 A_JumpIfInventory("RLHellsReignHealingCooldown",1,"Ready")
	TNT1 A 0 A_GiveInventory("RLHellsReignHealingCooldown",1)
	TNT1 A 0 A_GiveInventory("Health",1)
    Goto Ready
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
    TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLHellsReignModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHellsReignSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLHellsReign",0,0,0)
	TNT1 A 1 A_TakeInventory("RLHellsReign",1)
	Stop
  AfterModDrop:
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"AfterModDropF")
    HELR ABCABCABC 1 A_WeaponReady (16)
    Goto Ready
  AfterModDropF:
    HE2R ABCABCABC 1 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"RenegadeAssemblyNoFireF")
    HELR ABCABCABC 1 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  RenegadeAssemblyNoFireF:
    HE2R ABCABCABC 1 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
    TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLHellsReignSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"DeselectLoopF")
    HELR J 1 A_Lower
    Loop
  DeselectLoopF:
    HE2R J 1 A_Lower
    Loop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLHellsReignSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"SelectLoopF")
    HELR I 1 A_Raise
    Loop
  SelectLoopF:
    HE2R I 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
    TNT1 A 0 A_StopSound(6)
    TNT1 A 0 A_PlaySound("weapons/hellsreign", CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"FireF")
    HELR D 3 Bright A_GunFlash
    HELR EF 3 Bright
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLHellsReignSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignAgilityMod",1,"FireA")
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBall", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAA 0 A_FireCustomMissile ("RLHellsReignBall", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBall", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAAAAA 0 A_FireCustomMissile ("RLHellsReignBall", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireP:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeP")
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallP", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAA 0 A_FireCustomMissile ("RLHellsReignBallP", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireRenegadeP:
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallP", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAAAAA 0 A_FireCustomMissile ("RLHellsReignBallP", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireA:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeA")
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBall", frandom(4,-4), 1, 0, 0, 0, frandom(1,-1))
	TNT1 AAAAA 0 A_FireCustomMissile ("RLHellsReignBall", frandom(4,-4), 0, 0, 0, 0, frandom(1,-1))
    Goto FireFinish
  FireRenegadeA:
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallA", frandom(4,-4), 1, 0, 0, 0, frandom(1,-1))
	TNT1 AAAAAAAA 0 A_FireCustomMissile ("RLHellsReignBallA", frandom(4,-4), 0, 0, 0, 0, frandom(1,-1))
    Goto FireFinish
  FireS:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeS")
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallS", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAA 0 A_FireCustomMissile ("RLHellsReignBallS", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireRenegadeS:
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallS", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAAAAA 0 A_FireCustomMissile ("RLHellsReignBallS", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinish
  FireF:
    HE2R D 3 Bright A_GunFlash
    HE2R EF 3 Bright
	TNT1 A 0 A_AlertMonsters
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeF")
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallF", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAA 0 A_FireCustomMissile ("RLHellsReignBallF", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinishF
  FireRenegadeF:
	TNT1 A 0 A_FireCustomMissile ("RLHellsReignBallF", frandom(5,-5), 1, 0, 0, 0, frandom(2,-2))
	TNT1 AAAAAAAA 0 A_FireCustomMissile ("RLHellsReignBallF", frandom(5,-5), 0, 0, 0, 0, frandom(2,-2))
    Goto FireFinishF
  FireFinish:
    HELR FGH 3 Bright
    HELR J 14
    TNT1 A 0 A_PlaySound("weapons/hellsreignidle", 6, 1, 1)
    HELR I 1
	HELR ABC 1 A_WeaponReady (62)
    Goto Ready
  FireFinishF:
    HE2R FGH 3 Bright
    HE2R J 14
    TNT1 A 0 A_PlaySound("weapons/hellsreignidle", 6, 1, 1)
    HE2R I 1
	HE2R ABC 1 A_WeaponReady (62)
    Goto Ready
  NoReloadLoop:
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"NoReloadLoopF")
	HELR ABC 1 A_WeaponReady (WRF_NOFIRE)
	Goto Ready
  NoReloadLoopF:
	HE2R ABC 1 A_WeaponReady (WRF_NOFIRE)
	Goto Ready
  Reload:
	TNT1 A 0
	TNT1 A 0 A_JumpIfInventory("RLHellsReignBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignClip", 20, "NoReloadLoop")
	Goto Reload+4
	TNT1 A 0 A_JumpIfInventory("RLHellsReignClip", 25, "NoReloadLoop")
	TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)
	Goto NoReloadLoop
	TNT1 A 0 // Play the reload animation.
    TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignTechnicalMod",1,"Reload1")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"Reload0F")
    HELR J 1
    HELR K 2
    HELR L 4
    HELR K 2
    HELR J 1
    HELR M 1
    HELR N 1
    HELR O 1
    HELR P 1
    TNT1 A 0 A_PlaySound("weapons/hellsreignunload", 5)
    TNT1 A 45
	Goto ReloadWorking
  Reload0F:
    HE2R J 1
    HE2R K 2
    HE2R L 4
    HE2R K 2
    HE2R J 1
    HE2R M 1
    HE2R N 1
    HE2R O 1
    HE2R P 1
    TNT1 A 0 A_PlaySound("weapons/hellsreignunload", 5)
    TNT1 A 45
	Goto ReloadWorking
  Reload1:
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"Reload1F")
    HELR J 1
    HELR K 2
    HELR L 4
    HELR K 2
    HELR J 1
    HELR M 1
    HELR N 1
    HELR O 1
    HELR P 1
    TNT1 A 0 A_PlaySound("weapons/hellsreignunload", 5)
    TNT1 A 42
	Goto ReloadWorking
  Reload1F:
    HE2R J 1
    HE2R K 2
    HE2R L 4
    HE2R K 2
    HE2R J 1
    HE2R M 1
    HE2R N 1
    HE2R O 1
    HE2R P 1
    TNT1 A 0 A_PlaySound("weapons/hellsreignunload", 5)
    TNT1 A 42
	Goto ReloadWorking
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Cell", 1)
	TNT1 A 0 A_GiveInventory("RLHellsReignClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignClip",20,3)
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLHellsReignClip",25,2)
	TNT1 A 0 A_JumpIfInventory("Cell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
    TNT1 A 0 A_PlaySound("weapons/hellsreignload", 7)
	TNT1 A 0 A_JumpIfInventory("RLHellsReignTechnicalMod",1,"ReloadFinish1")
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"ReloadFinish0F")
    HELR P 1
    HELR O 1
    HELR N 1
    HELR M 1
    HELR J 1
    HELR K 2
    HELR L 4
    HELR K 2
    HELR J 6
    HELR I 1
	Goto Ready
  ReloadFinish0F:
    HE2R P 1
    HE2R O 1
    HE2R N 1
    HE2R M 1
    HE2R J 1
    HE2R K 2
    HE2R L 4
    HE2R K 2
    HE2R J 6
    HE2R I 1
	Goto Ready
  ReloadFinish1:
	TNT1 A 0 A_JumpIfInventory("RLHellsReignFirestormMod",1,"ReloadFinish1F")
    HELR P 1
    HELR O 1
    HELR N 1
    HELR M 1
    HELR J 1
    HELR K 2
    HELR L 4
    HELR K 2
    HELR J 3
    HELR I 1
	Goto Ready
  ReloadFinish1F:
    HE2R P 1
    HE2R O 1
    HE2R N 1
    HE2R M 1
    HE2R J 1
    HE2R K 2
    HE2R L 4
    HE2R K 2
    HE2R J 3
    HE2R I 1
	Goto Ready
  Flash:
    TNT1 A 3 A_Light1
    TNT1 A 3 A_Light2
    TNT1 A 3 A_Light(5)
    TNT1 A 3 A_Light2
    TNT1 A 3 A_Light1
    Goto LightDone
  Spawn:
    HELR X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto NoReloadLoop
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLHellsReignModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLHellsReignNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLHellsReignSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
    TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_Jump(256,1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLHellsReign",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLHellsReignBall : PlasmaBall
{
  BounceType "Hexen"
  Species "Player"
  +THRUSPECIES
  +THRUGHOST
  -BOUNCEONFLOORS
  -NOGRAVITY
  +USEBOUNCESTATE
  BounceFactor 1
  WallBounceFactor 1
  BounceCount 3
  Gravity 0.3
  Radius 6
  Height 3
  Alpha 0.85
  Scale 0.45
  Speed 30
  Damage (20 * random(1,2))
  Decal "RailScorch"
  Damagetype "Plasma"
  SeeSound ""
  BounceSound "weapons/hellsreignbounce"
  DeathSound "weapons/hellsreignimpact"
  States
  {
  Spawn:
    WPLZ B 2 Bright
    WPLZ AABB 1 Bright A_SpawnItemEx ("RLHellsReignBallTrail", frandom(1,3), frandom(-1,1), frandom(1,3), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    Loop
  Bounce:
	TNT1 A 0 A_SpawnItemEx ("RLHellsReignShockwave", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    Goto Spawn+1
  Bounce.Actor.Creature:
	TNT1 A 0 A_Stop
  Death:
	TNT1 A 0 A_NoGravity
    WPLZ CDE 4 Bright
    Stop
  }
}

ACTOR RLHellsReignBallP : RLHellsReignBall
{
  Damage (25 * random(1,2))
}

ACTOR RLHellsReignBallA : RLHellsReignBall
{
  Speed 40
}

ACTOR RLHellsReignBallF : RLHellsReignBall
{
  +BOUNCEONACTORS
  States
  {
  Spawn:
    WPLZ G 2 Bright
    WPLZ FFGG 1 Bright A_SpawnItemEx ("RLHellsReignBallTrail2", frandom(1,3), frandom(-1,1), frandom(1,3), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    Loop
  Bounce:
	TNT1 A 0 A_SpawnItemEx ("RLHellsReignShockwave2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    Goto Spawn+1
  Bounce.Actor.Creature:
	TNT1 A 0 A_Stop
	TNT1 A 0 A_NoGravity
	TNT1 A 0 A_Die ("Mysterious")
  Death.Mysterious:
	TNT1 A 0 A_PlaySound("weapons/smallexp", CHAN_BODY)
    TNT1 A 0 A_Explode (32,96)
	TNT1 A 0 A_ChangeFlag ("THRUACTORS", 1)
    HE2X ABCDEF 3 Bright
    Stop
  Death:
	TNT1 A 0 A_NoGravity
	TNT1 A 0 A_PlaySound("weapons/hellsreignimpact", CHAN_BODY)
    WPLZ HIJ 4 Bright
    Stop
  }
}

ACTOR RLHellsReignBallS : RLHellsReignBall
{
  +NOGRAVITY
  Gravity 0
}

ACTOR RLHellsReignBallTrail
{
   Projectile
   Radius 8
   Height 8
   Speed 1
   Scale 0.3
   Damage 0
   RENDERSTYLE ADD
   Alpha 0.75
   +NOCLIP
   +NOINTERACTION
   States
   {
   Spawn:
   WPLX ABCDE 3 A_SetScale (ScaleX+0.2)
   Stop
   }
}

ACTOR RLHellsReignBallTrail2 : RLHellsReignBallTrail
{
   States
   {
   Spawn:
   WPLX FGHIJ 3 A_SetScale (ScaleX+0.2)
   Stop
   }
}

ACTOR RLHellsReignShockwave : PlasmaBall
{
  -SOLID
  +NOCLIP
  +THRUACTORS
  Translation "112:127=192:207"
  Speed 0
  Damage 0
  Alpha 0.85
  Scale 0.8
  VSpeed 0
  SeeSound ""
  DeathSound ""
  States
  {
  Spawn:
    SHOK ACEGIKMOQ 1 Bright A_FadeTo (0.1, 0.1, 0)
	Stop
  }
}

ACTOR RLHellsReignShockwave2 : RLHellsReignShockwave
{
  Translation "112:127=168:191"
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLHellsReignSelected : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLHellsReignSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLHellsReignHealingCooldown : Powerup
{
	Powerup.Duration -3
}

ACTOR RLHellsReignClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 25
   Inventory.Icon ""
}

ACTOR RLHellsReignPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		HELR X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLHellsReign",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/hellsreignpickup")
		TNT1 A 0 A_GiveInventory("RLHellsReign",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up \cdHell's Reign.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Hell's Reign =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLHellsReign
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		HELR X 1
		Loop
	Death:
		TNT1 A 0
		HELR X 1 A_SpawnItem("RLHellsReignPickup",0,0,0,0)
		Stop
	}
}
