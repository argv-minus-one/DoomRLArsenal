
ACTOR RLQuadShotgun : RLWeapon
{
  Inventory.Pickupsound "weapons/unique"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was pounded into the dust by %k's quad shotgun."
  Inventory.Pickupmessage "You picked up a Quad Shotgun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Quad Shotgun"
  Weapon.Kickback 200
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 3
  Weapon.AmmoUse1 4
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLQuadShotgunClip"
  Weapon.AmmoType2 "Shell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    SHT4 A 1 A_WeaponReady (48)
    Loop
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLQuadShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLQuadShotgun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLQuadShotgun",1)
	Stop
  AfterModDrop:
    SHT4 A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    SHT4 A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLQuadShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    SHT4 A 1 A_Lower
    Goto DeselectLoop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLQuadShotgunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    SHT4 A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
    SHT4 A 1
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunNanoMod",1,2)
    SHT4 A 2
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunNanoMod",1,"FireN")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunFirestormMod",1,"FireF")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunBulkMod",1,"FireB")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunAgilityMod",1,"FireA")
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_FireBullets (15, 7, 40, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_FireBullets (15, 7, 60, 5, "RLBulletPuff")
    Goto FireFinish
  FireP:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeP")
	TNT1 A 0 A_FireBullets (15, 7, 40, 6, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeP:
	TNT1 A 0 A_FireBullets (15, 7, 60, 6, "RLBulletPuff")
    Goto FireFinish
  FireA:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeA")
	TNT1 A 0 A_FireBullets (14.5, 6.5, 40, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeA:
	TNT1 A 0 A_FireBullets (14.5, 6.5, 60, 5, "RLBulletPuff")
    Goto FireFinish
  FireB:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeB")
	TNT1 A 0 A_FireBullets (15, 7, 44, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeB:
	TNT1 A 0 A_FireBullets (15, 7, 62, 5, "RLBulletPuff")
    Goto FireFinish
  FireF:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeF")
	TNT1 A 0 A_FireBullets (0, 0, 4, 50, "RLQuadImpactPuff", FBF_NOPITCH | FBF_NORANDOM, 128)
	TNT1 A 0 A_FireBullets (15, 7, 40, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeF:
	TNT1 A 0 A_FireBullets (0, 0, 4, 50, "RLQuadImpactPuff", FBF_NOPITCH | FBF_NORANDOM, 128)
	TNT1 A 0 A_FireBullets (15, 7, 60, 5, "RLBulletPuff")
    Goto FireFinish
  FireS:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeS")
	TNT1 A 0 A_FireBullets (6, 1, 40, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeS:
	TNT1 A 0 A_FireBullets (6, 1, 60, 5, "RLBulletPuff")
    Goto FireFinish
  FireN:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeN")
	TNT1 A 0 A_FireBullets (5, 5, 5, 5, "RLQuadShotgunSinglePuff", "None")
    Goto FireFinishN
  FireRenegadeN:
	TNT1 A 0 A_FireBullets (5, 5, 8, 5, "RLQuadShotgunSinglePuff", "None")
    Goto FireFinishN
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/quadshotgun4X", CHAN_WEAPON)
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -6, 0, Sin(Pitch) * 6, 1)
    SHT4 A 7 A_GunFlash
    Goto Ready
  FireFinishN:
    TNT1 A 0 A_PlaySound("weapons/quadshotgunsingle", CHAN_WEAPON)
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.4, 0, Sin(Pitch) * 0.4, 1)
    SHT4 A 2 A_GunFlash ("FlashNano")
    SHT4 KLK 1
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunBurst",0,2)
	TNT1 A 0 A_GiveInventory("RLQuadShotgunBurst",1)
    Goto Ready
	TNT1 A 0 A_TakeInventory("RLQuadShotgunBurst",0)
    Goto Ready
  Reload:
	SHT4 A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunClip", 4, "Ready")
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunClip", 3, 6)
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunClip", 2, 4)
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunClip", 1, 2)
	TNT1 A 0 A_JumpIfInventory("Shell", 4, "ReloadSequence")
	Goto Ready
	TNT1 A 0 A_JumpIfInventory("Shell", 3, "ReloadSequence")
	Goto Ready
	TNT1 A 0 A_JumpIfInventory("Shell", 2, "ReloadSequence")
	Goto Ready
	TNT1 A 0 A_JumpIfInventory("Shell", 1, "ReloadSequence")
	Goto Ready
  ReloadSequence:
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunTechnicalMod",1,"Reload1")
    SHT4 B 7
    SHT4 C 7
    SHT4 D 7 A_PlaySound("weapons/quadshotgunopen", 5)
    SHT4 E 7
    SHT4 F 7 A_PlaySound("weapons/quadshotgunload", 6)
	Goto ReloadWorking
  Reload1:
    SHT4 B 7
    SHT4 C 7
    SHT4 D 6 A_PlaySound("weapons/quadshotgunopen", 5)
    SHT4 E 6
    SHT4 F 6 A_PlaySound("weapons/quadshotgunload", 6)
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Shell", 1)
	TNT1 A 0 A_GiveInventory("RLQuadShotgunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunClip",4,2)
	Goto ReloadWorking+3
	TNT1 A 0 A_JumpIfInventory("Shell",1,2)
	TNT1 A 0
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunTechnicalMod",1,"ReloadFinish1")
    SHT4 G 6
    SHT4 H 6 A_PlaySound("weapons/quadshotgunclose", 7)
    SHT4 A 5 A_ReFire
	Goto Ready
  ReloadFinish1:
    SHT4 G 5
    SHT4 H 5 A_PlaySound("weapons/quadshotgunclose", 7)
    SHT4 A 4 A_ReFire
	Goto Ready
  Flash:
    SHT4 I 4 Bright A_Light1
    SHT4 J 3 Bright A_Light2
    Goto LightDone
  FlashNano:
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunBurst",1,3)
    SH4X A 1 Bright A_Light1
    SH4X E 1 Bright A_Light2
    Goto LightDone
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunBurst",2,3)
    SH4X B 1 Bright A_Light1
    SH4X F 1 Bright A_Light2
    Goto LightDone
	TNT1 A 0 A_JumpIfInventory("RLQuadShotgunBurst",3,3)
    SH4X C 1 Bright A_Light1
    SH4X G 1 Bright A_Light2
    Goto LightDone
    SH4X D 1 Bright A_Light1
    SH4X H 1 Bright A_Light2
    Goto LightDone
  Spawn:
    SGN4 A -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLQuadShotgunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLQuadShotgunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3,4,5,6)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNanoMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLOnyxMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLQuadShotgun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		PROJECTILES

ACTOR RLQuadImpactPuff : BulletPuff
{
  +EXTREMEDEATH
  +FORCEPAIN
  +PUFFONACTORS
  -ALLOWPARTICLES
  +THRUGHOST
  ProjectileKickBack 1000
  DamageType "Bullet"
  States
  {
  Spawn:
    TNT1 A 1
  Melee:
    TNT1 A 1
    Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLQuadShotgunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunBurst : Inventory
{
inventory.maxamount 3
}

Actor RLQuadShotgunModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLQuadShotgunSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLQuadShotgunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 4
   Inventory.Icon ""
}

ACTOR RLQuadShotgunPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		SGN4 A -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLQuadShotgun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/quadshotgunpickup")
		TNT1 A 0 A_GiveInventory("RLQuadShotgun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cdQuad Shotgun.")
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
		Stop
		TNT1 A 0 A_PlaySound("renegade/laugh", CHAN_VOICE)
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Quad Shotgun =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLQuadShotgun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		SGN4 A 1
		Loop
	Death:
		TNT1 A 0
		SGN4 A 1 A_SpawnItem("RLQuadShotgunPickup",0,0,0,0)
		Stop
	}
}
