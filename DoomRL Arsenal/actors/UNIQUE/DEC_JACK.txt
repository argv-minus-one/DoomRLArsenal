
ACTOR RLJackhammer : RLWeapon
{
  Inventory.Pickupsound "weapons/unique"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o was pounded into the dust by %k's jackhammer."
  Inventory.Pickupmessage "You picked up a Jackhammer."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Jackhammer"
  Weapon.Kickback 40
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 3
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLJackhammerClip"
  Weapon.AmmoType2 "Shell"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    SMAG A 1 A_WeaponReady (48)
    Loop
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLJackhammerModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLJackhammerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLJackhammer",0,0,0)
	TNT1 A 1 A_TakeInventory("RLJackhammer",1)
	Stop
  AfterModDrop:
    SMAG A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    SMAG A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLJackhammerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    SMAG A 1 A_Lower
    Goto DeselectLoop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLJackhammerSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    SMAG A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
    SMAG A 1
	TNT1 A 0 A_AlertMonsters
	TNT1 A 0 A_JumpIfInventory("RLJackhammerFirestormMod",1,"FireF")
	TNT1 A 0 A_JumpIfInventory("RLJackhammerSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLJackhammerPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLJackhammerAgilityMod",1,"FireA")
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_FireBullets (3.5, 3, 11, 5, "RLBulletPuff")
    Goto FireFinish
  FireP:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeP")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeP:
	TNT1 A 0 A_FireBullets (3.5, 3, 11, 6, "RLBulletPuff")
    Goto FireFinish
  FireA:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeA")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (3, 2.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,2)
	TNT1 A 0 A_FireBullets (3, 2.5, 7, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3, 2.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeA:
	TNT1 A 0 A_FireBullets (3, 2.5, 11, 5, "RLBulletPuff")
    Goto FireFinish
  FireS:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeS")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,6)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,4)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",1,2)
	TNT1 A 0 A_FireBullets (2.5, 2.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 1.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,4)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",1,2)
	TNT1 A 0 A_FireBullets (2.5, 2.5, 7, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 1.5, 7, 5, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, 7, 5, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeS:
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,4)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",1,2)
	TNT1 A 0 A_FireBullets (2.5, 2.5, 11, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 1.5, 11, 5, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0.5, 0.5, 11, 5, "RLBulletPuff")
    Goto FireFinish
  FireF:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegadeF")
	TNT1 A 0 A_JumpIfInventory("RLAmmochainPerk",1,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",3,2)
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff", "None")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (3.5, 3, 7, 6, "RLBulletPuff")
    Goto FireFinish
  FireRenegadeF:
	TNT1 A 0 A_FireBullets (3.5, 3, 11, 6, "RLBulletPuff")
    Goto FireFinish
  FireFinish:
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.2, 0, Sin(Pitch) * 0.2, 1)
    TNT1 A 0 A_PlaySound("weapons/jackhammer", CHAN_WEAPON)
    SMAG B 1 Bright A_GunFlash
	TNT1 A 0 A_JumpIfInventory("RLJackhammerFirestormMod",1,"FireFFinish")
    SMAG D 1 Bright
    SMAG G 1
	TNT1 A 0 A_GiveInventory("RLJackhammerBurst",1)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",0,1)
    Goto Fire
	TNT1 A 0 A_TakeInventory("RLJackhammerBurst",3)
    SMAG A 3
    SMAG A 4 A_Refire
    Goto Ready
  FireFFinish:
	TNT1 A 0 A_CheckFloor (2)
	TNT1 A 0 A_Jump(256,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingSteelBootsToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingProtectiveBootsToken",1,3)
	TNT1 A 0 A_JumpIfInventory("RLGrapplingPlasteelBootsToken",1,2)
    TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -0.4, 0, Sin(Pitch) * 0.4, 1)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",3,3)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",2,2)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",1,2)
    SMAG D 1 Bright
    Goto FireFFinish+11
    SMAG C 1 Bright
    SMAG G 1
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBurst",3,3)
	TNT1 A 0 A_GiveInventory("RLJackhammerBurst",1)
    SMAG A 0 A_Refire
    Goto Ready
	TNT1 A 0 A_TakeInventory("RLJackhammerBurst",3)
    SMAG A 0 A_Refire
    Goto Ready
  Reload:
	TNT1 A 0 A_JumpIfInventory("Shell", 1, 1)
	Goto AfterModDrop
	SMAG A 1 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerClip", 9, "Ready")
	Goto Reload+5
	TNT1 A 0 A_JumpIfInventory("RLJackhammerClip", 12, "Ready")
	TNT1 A 0 A_JumpIfInventory("Shell", 1, 1)
	Goto Ready
	TNT1 A 0 A_JumpIfInventory("RLJackhammerNanoMod",1,1)
	Goto ReloadNanoCheck
	TNT1 A 0 A_Jump(128,1)
	Goto ReloadNanoCheck
	TNT1 A 0 A_GiveInventory("RLJackhammerNanoToken",1)
	Goto ReloadNanoCheck
  ReloadNanoCheck:
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLJackhammerTechnicalMod",1,"Reload1")
    SMAG I 2
    SMAG J 2
    SMAG K 2
    SMAG L 2
    SMAG M 2
    SMAG N 2
	TNT1 A 0 A_PlaySound("weapons/jackhammerunload", 6)
    SMAG O 2
    SMAG P 2
    SMAG Q 2
    SMAG V 2
    SMAG Q 25
    SMAG R 2
    SMAG S 2
	Goto ReloadWorking
  Reload1:
    SMAG I 2
    SMAG J 2
    SMAG K 2
    SMAG L 2
    SMAG M 2
    SMAG N 2
	TNT1 A 0 A_PlaySound("weapons/jackhammerunload", 6)
    SMAG O 2
    SMAG P 2
    SMAG Q 2
    SMAG V 2
    SMAG Q 22
    SMAG R 2
    SMAG S 2
  ReloadWorking:
	TNT1 A 0 A_JumpIfInventory("RLJackhammerNanoToken",1,2)
	TNT1 A 0 A_TakeInventory("Shell", 1)
	TNT1 A 0 A_GiveInventory("RLJackhammerClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerClip",9,3)
	Goto ReloadWorking+6
	TNT1 A 0 A_JumpIfInventory("RLJackhammerClip",12,2)
	TNT1 A 0 A_JumpIfInventory("Shell",1,2)
	TNT1 A 0 A_TakeInventory("RLJackhammerBurst",3)
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_PlaySound("weapons/jackhammerload", 7)
	TNT1 A 0 A_TakeInventory("RLJackhammerNanoToken",1)
	TNT1 A 0 A_JumpIfInventory("RLJackhammerTechnicalMod",1,"ReloadFinish1")
    SMAG T 2
    SMAG U 2
    SMAG L 2
    SMAG K 2
    SMAG J 2
    SMAG I 2
    SMAG A 7 A_ReFire
	Goto Ready
  ReloadFinish1:
    SMAG T 2
    SMAG U 2
    SMAG L 2
    SMAG K 1
    SMAG J 1
    SMAG I 1
    SMAG A 7 A_ReFire
	Goto Ready
  Flash:
    TNT1 A 1 A_Light1
    TNT1 A 1 A_Light2
    Goto LightDone
  Spawn:
    SMAP A -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLJackhammerModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLJackhammerNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLJackhammerSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1,2,3,4,5,6)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNanoMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLOnyxMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLFirestormMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
	TNT1 A 0 A_FireCustomMissile("DroppedRLSniperMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLJackhammer",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLJackhammerReloadDone : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerSelected : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerBurst : Inventory
{
inventory.maxamount 3
}

Actor RLJackhammerNanoToken : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLJackhammerSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLJackhammerClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 12
   Inventory.Icon ""
}

ACTOR RLJackhammerPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		SMAP A -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLJackhammer",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/jackhammerpickup")
		TNT1 A 0 A_GiveInventory("RLJackhammer",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up a \cdJackhammer.")
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
		Stop
		TNT1 A 0 A_PlaySound("renegade/laugh", CHAN_VOICE)
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Jackhammer =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLJackhammer
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		SMAP A 1
		Loop
	Death:
		TNT1 A 0
		SMAP A 1 A_SpawnItem("RLJackhammerPickup",0,0,0,0)
		Stop
	}
}
