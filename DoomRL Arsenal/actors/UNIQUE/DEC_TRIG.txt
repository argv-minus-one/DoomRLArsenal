
ACTOR RLTrigun : RLWeapon
{
  Inventory.Pickupsound "weapons/unique"
  Weapon.UpSound "weapons/weaponholster"
  Obituary "%o did not draw in time against the fast hands of %k."
  Inventory.Pickupmessage "You picked up the Trigun."
  Decal BulletChip
  +AMMO_OPTIONAL
  +NOALERT
  +INVENTORY.UNTOSSABLE
  Tag "Trigun"
  Weapon.Kickback 200
  Weapon.SelectionOrder 11
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 1
  Weapon.AmmoGive1 0
  Weapon.AmmoType1 "RLTrigunClip"
  Weapon.AmmoType2 "Clip"
  States
  {
  Ready:
	TNT1 A 0 A_JumpIfInventory("RLRenegadeAssemblyCheck",1,"RenegadeAssemblyNoFire")
    TRIG A 1 A_WeaponReady (48)
    Loop
  ScavengerDrop:
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"WeaponDropConfirm")
	TNT1 A 0 A_GiveInventory("RLScavengerDrop",1)
	TNT1 A 0 A_Print("Press again to drop current weapon, or press Alt Fire to scrap it for a Mod Pack.")
	Goto AfterModDrop
  WeaponDropConfirm:
	TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1, 1)
	Goto WeaponDropConfirm+2
	TNT1 A 0 A_GiveInventory("RLRenegadeAssemblyCheck",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
    TNT1 A 0 A_TakeInventory("RLTrigunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLTrigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLTrigun",0,0,0)
	TNT1 A 1 A_TakeInventory("RLTrigun",1)
	Stop
  AfterModDrop:
    TRIG A 8 A_WeaponReady (16)
    Goto Ready
  RenegadeAssemblyNoFire:
	TNT1 A 0 A_TakeInventory("RLRenegadeAssemblyCheck",1)
    TRIG A 9 A_WeaponReady (WRF_NOFIRE | WRF_NOBOB)
    Goto Ready
  Deselect:
	TNT1 A 0
	TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
	TNT1 A 0 A_TakeInventory("RLWeaponDrop",1)
	TNT1 A 0 A_TakeInventory("RLUseBulkMod",1)
	TNT1 A 0 A_TakeInventory("RLUsePowerMod",1)
	TNT1 A 0 A_TakeInventory("RLUseAgilityMod",1)
	TNT1 A 0 A_TakeInventory("RLUseTechnicalMod",1)
	TNT1 A 0 A_TakeInventory("RLUseNanoMod",1)
	TNT1 A 0 A_TakeInventory("RLUseFirestormMod",1)
	TNT1 A 0 A_TakeInventory("RLUseSniperMod",1)
	TNT1 A 0 A_TakeInventory("RLTrigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
  DeselectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "DeselectRenegade")
    TNT1 A 0 A_Lower
    TRIG A 1 A_Lower
    Goto DeselectLoop
  DeselectRenegade:
    TNT1 A 0 A_Lower
    loop
  SelectRenegade: 
    TNT1 A 0 A_Raise
    loop
  SelectSetWeapon:
	TNT1 A 0 A_GiveInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_GiveInventory("RLTrigunSelected", 1)
    Goto SelectLoop
  SelectLoop:
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "SelectRenegade")
    TNT1 A 0 A_Raise
    TRIG A 1 A_Raise
    Loop
  Fire:
	TNT1 A 0 A_JumpIfNoAmmo("Reload")
	TNT1 A 0 A_AlertMonsters
    TRIG A 1
	TNT1 A 0 A_JumpIfInventory("RLTrigunFirestormMod",1,"FireF")
	TNT1 A 0 A_JumpIfInventory("RLTrigunNanoMod",1,"FireN")
	TNT1 A 0 A_JumpIfInventory("RLTrigunSniperMod",1,"FireS")
	TNT1 A 0 A_JumpIfInventory("RLTrigunPowerMod",1,"FireP")
	TNT1 A 0 A_JumpIfInventory("RLTrigunAgilityMod",1,"FireA")
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 1, -1, 15, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 1, -1, (120), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, 23, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (184), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireP:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 1, -1, 20, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 1, -1, (160), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, 30, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (240), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireA:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (1.5, 0.5, -1, 15, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (1.5, 0.5, -1, (120), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, 23, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (184), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireS:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
    TNT1 A 0 A_JumpIfInventory("RLShellshockPerk", 1, "FireRenegade")
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 1, 5, 15, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 1, 5, (120), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, 5, 23, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 5, (184), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireRenegade:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,2)
	TNT1 A 0 A_FireBullets (2, 1, 8, 15, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, 8, 23, "RLBulletPuff")
    Goto FireFinish
  FireF:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (2, 1, -1, 38, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (2, 1, -1, (300), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_FireBullets (0, 0, -1, 57, "RLBulletPuff")
    Goto FireFinish
	TNT1 A 0 A_FireBullets (0, 0, -1, (452), "RLBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
    Goto FireFinish
  FireN:
	TNT1 A 0 A_JumpIfInventory("RLWildWeaselPeacekeeperArmorToken",1,4)
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack (15, 0, 1, "None", "None", RGF_SILENT, 0, "RLBulletPuff", 2, 1, 0, 0)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((120), 0, 1, "None", "None", RGF_SILENT, 0, "RLBulletPuff", 2, 1, 0, 0)
    Goto FireFinish
	TNT1 A 0 A_JumpIfInventory("RLSharpshooterPerk",1,2)
	TNT1 A 0 A_RailAttack (23, 0, 1, "None", "None", RGF_SILENT, 0, "RLBulletPuff", 2, 1, 0, 0)
    Goto FireFinish
	TNT1 A 0 A_RailAttack ((184), 0, 1, "None", "None", RGF_SILENT, 0, "RLBulletPuff", 2, 1, 0, 0)
    Goto FireFinish
  FireFinish:
    TNT1 A 0 A_PlaySound("weapons/longcolt", CHAN_WEAPON)
    TRIG B 2 Bright A_GunFlash
    TRIG C 2 Bright
    TRIG D 1
    TRIG E 1
    TRIG A 1
    TRIG AAAAAAAAAAAAAAAAAAAAAAAAA 1 A_WeaponReady (WRF_NOBOB | WRF_NOSECONDARY | WRF_ALLOWRELOAD)
    Goto Ready
  Reload:
	TRIG A 2 A_WeaponReady (WRF_NOPRIMARY | WRF_ALLOWZOOM)
	TNT1 A 0 A_JumpIfInventory("RLTrigunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLTrigunClip", 6, "Ready")
	Goto Reload+4
	TNT1 A 0 A_JumpIfInventory("RLTrigunClip", 8, "Ready")
	TNT1 A 0 A_JumpIfInventory("Clip", 1, 1)
	Goto Ready
	TNT1 A 0 // Play the reload animation.
	TNT1 A 0 A_JumpIfInventory("RLTrigunTechnicalMod",1,"Reload1")
    TRIG F 2
    TRIG G 2
    TRIG H 2
    TRIG I 2
    TRIG J 2
    TRIG K 2
    TRIG L 2
    TRIG M 2
    TRIG N 2
    TRIG O 2
    TRIG P 2
    TRIG Q 2
    TNT1 A 15 A_PlaySound("weapons/trigunopen", 5)
    TNT1 A 35 A_PlaySound("weapons/trigunout", 6)
	Goto ReloadWorking
  Reload1:
    TRIG F 2
    TRIG G 2
    TRIG H 2
    TRIG I 2
    TRIG J 2
    TRIG K 2
    TRIG L 2
    TRIG M 2
    TRIG N 2
    TRIG O 2
    TRIG P 2
    TRIG Q 2
    TNT1 A 15 A_PlaySound("weapons/trigunopen", 5)
    TNT1 A 32 A_PlaySound("weapons/trigunout", 6)
  ReloadWorking:
	TNT1 A 0 A_TakeInventory("Clip", 1)
	TNT1 A 0 A_GiveInventory("RLTrigunClip", 1)
	TNT1 A 0 A_JumpIfInventory("RLTrigunBulkMod",1,2)
	TNT1 A 0 A_JumpIfInventory("RLTrigunClip",6,"ReloadFinish")
	Goto ReloadWorking+5
	TNT1 A 0 A_JumpIfInventory("RLTrigunClip",8,"ReloadFinish")
	TNT1 A 0 A_JumpIfInventory("Clip",1,1)
	Goto ReloadFinish
	TNT1 A 0
	Goto ReloadWorking
  ReloadFinish:
	TNT1 A 0 A_JumpIfInventory("RLTrigunTechnicalMod",1,"ReloadFinish1")
	TNT1 A 8 A_PlaySound("weapons/trigunclose", 7)
    TRIG Q 2
    TRIG P 2
    TRIG O 2
    TRIG N 2
    TRIG M 2
    TRIG L 2
    TRIG K 2
    TRIG J 2
    TRIG I 2
    TRIG H 2
    TRIG G 2
    TRIG F 2
    TRIG A 7 A_ReFire
	Goto Ready
  ReloadFinish1:
	TNT1 A 5 A_PlaySound("weapons/trigunclose", 7)
    TRIG Q 2
    TRIG P 2
    TRIG O 2
    TRIG N 2
    TRIG M 2
    TRIG L 2
    TRIG K 2
    TRIG J 2
    TRIG I 2
    TRIG H 2
    TRIG G 2
    TRIG F 2
    TRIG A 7 A_ReFire
	Goto Ready
  Flash:
    TNT1 A 3 A_Light1
    TNT1 A 3 A_Light2
    Goto LightDone
  Spawn:
    TRIG X -1
    Stop
  Altfire:
	TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1, "ArmorModConversion")
	TNT1 A 0 A_JumpIfInventory("RLScavengerDrop",1,"ScavengerTime")
	Goto Ready
  ScavengerTime:
	TNT1 A 0 A_Print("Mod pack extracted from discarded weapon.")
	TNT1 A 0 A_TakeInventory("RLScavengerDrop",1)
    TNT1 A 0 A_TakeInventory("RLTrigunModLimit", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunPowerMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunBulkMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunAgilityMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunTechnicalMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunSniperMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunFirestormMod", 1)
    TNT1 A 0 A_TakeInventory("RLTrigunNanoMod", 1)
	TNT1 A 0 A_TakeInventory("RLStandardWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLAssembledWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLExoticWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLUniqueWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLLegendaryWeaponToken", 1)
	TNT1 A 0 A_TakeInventory("RLTrigunSelected", 1)
	TNT1 A 0 A_TakeInventory("RLWeaponLimit",1)
	TNT1 A 0 A_Jump(256,1)
	TNT1 A 0 A_FireCustomMissile("DroppedRLNanoMod",0,0,0)
	Goto ScavengerTimeEnd
  ScavengerTimeEnd:
	TNT1 A 1 A_TakeInventory("RLTrigun",1)
	Stop
  }
}

//-------------------------------------------------------------------
//		MECHANICS

Actor RLTrigunSelected : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunModLimit : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunPowerMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunBulkMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunAgilityMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunTechnicalMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunNanoMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunFirestormMod : Inventory
{
inventory.maxamount 1
}

Actor RLTrigunSniperMod : Inventory
{
inventory.maxamount 1
}

ACTOR RLTrigunClip : Ammo
{
   +INVENTORY.IGNORESKILL
   Inventory.MaxAmount 8
   Inventory.Icon ""
}

ACTOR RLTrigunPickup : CustomInventory
{
    +INVENTORY.NEVERRESPAWN
	Radius 16
	Height 8
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
	Spawn:
		TRIG X -1
		Stop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLTrigun",1,"NotPickup") // If the player already has this weapon, they are not given the weapon
		TNT1 A 0 A_JumpIfInventory("RLWeaponLimit",0,"NotPickup") // The absolute max limit check for weapons
		TNT1 A 0 A_PlaySound("weapons/trigunpickup")
		TNT1 A 0 A_GiveInventory("RLTrigun",1)
		TNT1 A 0 A_GiveInventory("RLWeaponLimit",1)
		TNT1 A 0 A_Print("Picked up the \cdTrigun.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_WeaponAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_WeaponAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Trigun =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLTrigun
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		TRIG X 1
		Loop
	Death:
		TNT1 A 0
		TRIG X 1 A_SpawnItem("RLTrigunPickup",0,0,0,0)
		Stop
	}
}
