
Actor RL100ArmorWorn : Inventory
{
inventory.maxamount 1
}

Actor RL150ArmorWorn : Inventory
{
inventory.maxamount 1
}

Actor RL200ArmorWorn : Inventory
{
inventory.maxamount 1
}

Actor RL100RegenArmorWorn : Inventory
{
inventory.maxamount 1
}

Actor RLIndestructibleArmorWorn : Inventory
{
inventory.maxamount 1
}

Actor RLArmorInInventory : Inventory
{
inventory.maxamount 1
}

Actor RLEquippingArmor : Inventory
{
inventory.maxamount 1
}

Actor RLUnequippingArmor : Inventory
{
inventory.maxamount 1
}

Actor RLUnequippingHarmfulArmor : Inventory
{
inventory.maxamount 1
}

Actor RLDeathArmorCheck : Inventory
{
inventory.maxamount 1
}

Actor RLXDeathArmorCheck : Inventory
{
inventory.maxamount 1
}

Actor RLPlayerArmorRegeneration : Inventory
{
inventory.maxamount 1
}

Actor RLArmorModItemInInventory : Inventory
{
inventory.maxamount 1
}

Actor RLArmorModItemActivate : Inventory
{
inventory.maxamount 1
}

Actor RLArmorSpecialConfirm : Inventory
{
inventory.maxamount 1
}

//-------------------------------------------------------------------
//		ARMOR SPAWNERS

actor RLStandardArmorSpawner : RandomSpawner replaces GreenArmor
{
    DropItem "RLGreenArmorSpawner" 255 9
    DropItem "RLStandardBootsSpawner" 255 1
}

actor RLAdvancedArmorSpawner : RandomSpawner replaces BlueArmor
{
    DropItem "RLBlueArmorSpawner" 255 9
    DropItem "RLStandardBootsSpawner" 255 1
}

actor RLGreenArmorSpawner : RandomSpawner
{
    DropItem "RLGreenArmorPickup" 255 40
    DropItem "RLBlueArmorPickup" 255 22
    DropItem "RLExoticArmorSpawner" 255 8
    DropItem "RLAssembledArmorSpawner" 255 8
    DropItem "RLUniqueArmorSpawner" 255 1
}

actor RLBlueArmorSpawner : RandomSpawner
{
    DropItem "RLBlueArmorPickup" 255 30
    DropItem "RLRedArmorPickup" 255 22
    DropItem "RLExoticArmorSpawner" 255 18
    DropItem "RLAssembledArmorSpawner" 255 18
    DropItem "RLUniqueArmorSpawner" 255 10
    DropItem "RLLegendaryArmorSpawner" 255 1
}

actor RLExoticArmorSpawner : RandomSpawner
{
    DropItem "RLBallisticShieldArmorPickup" 255 2
    DropItem "RLBallisticVestArmorPickup" 255 5
    DropItem "RLBulletProofVestArmorPickup" 255 5
    DropItem "RLDuelistArmorPickup" 255 1
    DropItem "RLEnergyShieldedVestArmorPickup" 255 4
    DropItem "RLEnergyShieldArmorPickup" 255 2
    DropItem "RLGothicArmorPickup" 255 1
    DropItem "RLMedicalArmorPickup" 255 4
    DropItem "RLPhaseshiftArmorPickup" 255 1
    DropItem "RLPlasmaShieldArmorPickup" 255 2
    DropItem "RLOnyxArmorPickup" 255 3
    DropItem "RLRechargeableEnergyShieldArmorPickup" 255 3
    DropItem "RLOverchargeSystemArmorPickup" 255 3
    DropItem "RLCyberwarriorArmorPickup" 255 3
    DropItem "RLRepulsionWaveSuitArmorPickup" 255 3
    DropItem "RLSurvivalMediArmorPickup" 255 3
    DropItem "RLNuclearArmorPickup" 255 1
}

actor RLAssembledArmorSpawner : RandomSpawner
{
    DropItem "RLBallisticGreenArmorPickup" 255 11
    DropItem "RLBallisticBlueArmorPickup" 255 11
    DropItem "RLBallisticRedArmorPickup" 255 11
    DropItem "RLCerberusArmorPickup" 255 4
    DropItem "RLCybernanoGreenArmorPickup" 255 1
    DropItem "RLCybernanoBlueArmorPickup" 255 1
    DropItem "RLCybernanoRedArmorPickup" 255 1
    DropItem "RLFireproofGreenArmorPickup" 255 10
    DropItem "RLFireproofBlueArmorPickup" 255 10
    DropItem "RLFireproofRedArmorPickup" 255 10
    DropItem "RLFireshieldArmorPickup" 255 7
    DropItem "RLNanofiberGreenArmorPickup" 255 8
    DropItem "RLNanofiberBlueArmorPickup" 255 8
    DropItem "RLNanofiberRedArmorPickup" 255 8
    DropItem "RLNanofiberSkinGreenArmorPickup" 255 6
    DropItem "RLNanofiberSkinBlueArmorPickup" 255 6
    DropItem "RLNanofiberSkinRedArmorPickup" 255 6
    DropItem "RLTowerShieldArmorPickup" 255 8
    DropItem "RLPowerGreenArmorPickup" 255 9
    DropItem "RLPowerBlueArmorPickup" 255 9
    DropItem "RLPowerRedArmorPickup" 255 9
    DropItem "RLTacticalArmorPickup" 255 9
    DropItem "RLOnyxArmorSpawner" 255 7
    DropItem "RLAblativeGreenArmorPickup" 255 6
    DropItem "RLAblativeBlueArmorPickup" 255 6
    DropItem "RLAblativeRedArmorPickup" 255 6
}

actor RLOnyxArmorSpawner : RandomSpawner
{
    DropItem "RLOModGreenArmorPickup" 255 7
    DropItem "RLOModBlueArmorPickup" 255 6
    DropItem "RLOModRedArmorPickup" 255 5
    DropItem "RLOModBallisticVestArmorPickup" 255 5
    DropItem "RLOModBulletProofVestArmorPickup" 255 5
    DropItem "RLOModDuelistArmorPickup" 255 1
    DropItem "RLOModEnergyShieldedVestArmorPickup" 255 4
    DropItem "RLOModGothicArmorPickup" 255 1
    DropItem "RLOModMedicalArmorPickup" 255 4
    DropItem "RLOModPhaseshiftArmorPickup" 255 1
    DropItem "RLOModCyberwarriorArmorPickup" 255 1
    DropItem "RLOModRepulsionWaveSuitArmorPickup" 255 3
    DropItem "RLOModSurvivalMediArmorPickup" 255 2
}

actor RLUniqueArmorSpawner : RandomSpawner
{
//    DropItem "RLBerserkerArmorPickup" 255 4
    DropItem "RLCyberneticArmorPickup" 255 4
    DropItem "RLLavaArmorPickup" 255 3
    DropItem "RLMaleksArmorPickup" 255 3
    DropItem "RLMedicalPowerArmorPickup" 255 5
    DropItem "RLNecroArmorPickup" 255 5
    DropItem "RLShieldedArmorPickup" 255 4
    DropItem "RLEnergyDischargeHarnessArmorPickup" 255 5
    DropItem "RLPrototypeAssaultShieldArmorPickup" 255 4
    DropItem "RLJetpackArmorPickup" 255 3
    DropItem "RLBerserkPowersuitArmorPickup1" 255 5
    DropItem "RLGeosGoldenGauntletArmorPickup" 255 5
    DropItem "RLSoulshatterArmorPickup" 255 5
    DropItem "RLDemonicCarapaceArmorPickup" 255 4
    DropItem "RLNanoAblativeArmorPickup" 255 3
    DropItem "RLWildWeaselPeacekeeperArmorPickup" 255 4
    DropItem "RLXaserPowerArmorPickup" 255 3
    DropItem "RLBlazingPhoenixDeviceSuitArmorPickup" 255 5
    DropItem "RLKateMatterstormHarnessArmorPickup" 255 4
    DropItem "RLZeroDiamondAssaultforceArmorPickup" 255 5
    DropItem "RLKyleTeslaboltArmorPickup" 255 4
    DropItem "RLRyanCordellPsychicAmplifierSuitArmorPickup" 255 5
    DropItem "RLTerminusEst13BattlesuitArmorPickup" 255 5
    DropItem "RLRoystensCommandArmorPickup" 255 4
    DropItem "RLSoloOperativeSuitArmorPickup" 255 4
    DropItem "RLTorgueBlastplateArmorPickup" 255 3
    DropItem "RLFrontlineEngineerSuitArmorPickup" 255 4
    DropItem "RLTacticalAssemblerSuitArmorPickup" 255 4
    DropItem "RLNuclearPowerArmorPickup" 255 3
}

actor RLLegendaryArmorSpawner : RandomSpawner
{
    DropItem "RLAngelicArmorPickup" 255 1
    DropItem "RLTheBeeArmorPickup" 255 1
    DropItem "RLReactiveShieldSystemArmorPickup" 255 1
    DropItem "RLChronotrooperArmorPickup" 255 1
}

actor RLArmorBonusSpawner : RandomSpawner replaces ArmorBonus
{
    DropItem "RLArmorBonusPickup" 55 4
    DropItem "RLStandardBootsSpawner" 120 1
}

//-------------------------------------------------------------------
//		ARMOR BONUSES AND RESTORERS

ACTOR RLArmorBonusPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    Inventory.Pickupmessage "Picked up an armor bonus."
	Inventory.PickupSound "misc/armorbonuspickup"
	Inventory.UseSound ""
	States
	{
	Spawn:
		BON2 ABCDCB 6
		Loop
	Pickup:
		TNT1 A 0
    	TNT1 A 0 A_JumpIfInventory ("RLFireShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLTowerShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLBallisticShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLPlasmaShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLRechargeableEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLNanoAblativeArmorToken", 1, "200ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"150ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"200ArmorRepair")
		Goto NotPickup
	100ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus100",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	150ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus150",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	200ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus200",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	NotPickup:
		TNT1 A 0
		Fail
	}
}

ACTOR RLArmorBonus100 : ArmorBonus
{
  Radius 20
  Height 16
  Inventory.PickupMessage "Picked up an armor bonus."
  Inventory.Icon "ARM1A0"
  Armor.SavePercent 10
  Armor.SaveAmount 25
  Armor.MaxSaveAmount 100
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  States
  {
  Spawn:
    BON2 ABCDCB 6
    Loop
  }
}

ACTOR RLArmorBonus150 : RLArmorBonus100
{
  Armor.MaxSaveAmount 150
}

ACTOR RLArmorBonus200 : RLArmorBonus100
{
  Armor.MaxSaveAmount 200
}

ACTOR RLArmorBonus100Megasphere : RLArmorBonus100
{
  Armor.SaveAmount 100
}

ACTOR RLArmorBonus150Megasphere : RLArmorBonus150
{
  Armor.SaveAmount 150
}

ACTOR RLArmorBonus200Megasphere : RLArmorBonus200
{
  Armor.SaveAmount 200
}

ACTOR RLArmorRestorer100 : ArmorBonus
{
  Radius 20
  Height 16
  Inventory.PickupMessage ""
  Inventory.Icon "ARM1A0"
  Armor.SavePercent 10
  Armor.SaveAmount 1
  Armor.MaxSaveAmount 100
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  States
  {
  Spawn:
    BON2 ABCDCB 6
    Loop
  }
}

ACTOR RLArmorRestorer150 : RLArmorRestorer100
{
  Armor.MaxSaveAmount 150
}

ACTOR RLArmorRestorer200 : RLArmorRestorer100
{
  Armor.MaxSaveAmount 200
}

ACTOR RLIndestructibleArmorRestorer : RLArmorRestorer100
{
  Armor.SaveAmount 99999
  Armor.MaxSaveAmount 99999
}

ACTOR RLRestorerArmorRepair : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    Inventory.Pickupmessage ""
	Inventory.PickupSound ""
	Inventory.UseSound ""
	States
	{
	Spawn:
		TNT1 A 1
		Loop
	Pickup:
		TNT1 A 0
    	TNT1 A 0 A_JumpIfInventory ("RLFireShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLTowerShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLBallisticShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLPlasmaShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLRechargeableEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLNanoAblativeArmorToken", 1, "200ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"150ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"200ArmorRepair")
		Goto NotPickup
	100ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer100",1)
		Stop
	150ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer150",1)
		Stop
	200ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer200",1)
		Stop
	NotPickup:
		TNT1 A 0
		Fail
	}
}

//-------------------------------------------------------------------
//		ARMOR REMOVER

ACTOR RLArmorRemover : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
	+INVENTORY.KEEPDEPLETED
    Tag "Unequip Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "REMOV0"
    Inventory.Pickupmessage "how did you even... you know what, fuck you I don't care."
	Inventory.PickupSound "misc/armor_pkup"
	Inventory.UseSound "misc/armor_pkup"
	States
	{
	Spawn:
		ARM1 A -1
		Loop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLCyberwarriorArmorToken",1,"HarmfulArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitArmorToken",1,"HarmfulIndestructibleArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLRyanCordellPsychicAmplifierSuitArmorToken",1,"HarmfulIndestructibleArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLChronotrooperArmorToken",1,"HarmfulIndestructibleArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLOModCyberwarriorArmorToken",1,"HarmfulIndestructibleArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLUnequippingArmor",1,"ArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"IndestructibleArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_GiveInventory("RLUnequippingArmor", 1)
		TNT1 A 0 A_Print("Use this again to drop your currently equipped armor, or switch weapons to cancel.\n\cgYour currently equipped armor will be destroyed, however.", 10)
		Fail
	IndestructibleArmorEquipped:
		TNT1 A 0 A_GiveInventory("RLUnequippingArmor", 1)
		TNT1 A 0 A_Print("Use this again to drop your currently equipped armor, or switch weapons to cancel.", 5)
		Fail
	HarmfulIndestructibleArmorEquipped:
		TNT1 A 0 A_JumpIfInventory("RLUnequippingArmor",1,"HarmfulArmorUnequipConfirm")
		TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1, "IndestructibleArmorEquipped")
		TNT1 A 0 A_GiveInventory("RLUnequippingArmor", 1)
		TNT1 A 0 A_Print("Use this again to drop your currently equipped armor, or switch weapons to cancel.\n\cgRemoving this armor will damage you for 25 points if not removed by a Technician.", 5)
		Fail
	HarmfulArmorEquipped:
		TNT1 A 0 A_JumpIfInventory("RLUnequippingArmor",1,"HarmfulArmorUnequipConfirm")
		TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1, "ArmorEquipped")
		TNT1 A 0 A_GiveInventory("RLUnequippingArmor", 1)
		TNT1 A 0 A_Print("Use this again to drop your currently equipped armor, or switch weapons to cancel.\n\cgYour currently equipped armor will be destroyed, however.\n\cgRemoving this armor will damage you for 25 points if not removed by a Technician.", 5)
		Fail
	HarmfulArmorUnequipConfirm:
		TNT1 A 0 A_JumpIfInventory("RLScavengerPerk",1, 2)
		TNT1 A 0 A_SpawnItemEx ("RLArmorRemovalDamage", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		TNT1 A 0
		Goto ArmorUnequip
	NoArmorEquipped:
		TNT1 A 0 A_Print("You aren't wearing any armor.", 5)
		Fail
	ArmorUnequip:
		TNT1 A 0 A_TakeInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RL150ArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLUnequippingArmor",1)
		TNT1 A 0 A_GiveInventory("RLArmorRemover", 1)
		//First, the armor you can actually remove without smashing with your man-child hands.
		TNT1 A 0 A_JumpIfInventory("RLAngelicArmorToken",1,"AngelicArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLBerserkerArmorToken",1,"BerserkerArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorToken",1,"CyberneticArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLLavaArmorToken",1,"LavaArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLMaleksArmorToken",1,"MaleksArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLMedicalPowerArmorToken",1,"MedicalPowerArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLShieldedArmorToken",1,"ShieldedArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOnyxArmorToken",1,"OnyxArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoGreenArmorToken",1,"CybernanoGreenArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoBlueArmorToken",1,"CybernanoBlueArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoRedArmorToken",1,"CybernanoRedArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberGreenArmorToken",1,"NanofiberGreenArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberBlueArmorToken",1,"NanofiberBlueArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberRedArmorToken",1,"NanofiberRedArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinGreenArmorToken",1,"NanofiberSkinGreenArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinBlueArmorToken",1,"NanofiberSkinBlueArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinRedArmorToken",1,"NanofiberSkinRedArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModGreenArmorToken",1,"OModGreenArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModBlueArmorToken",1,"OModBlueArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModRedArmorToken",1,"OModRedArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModBallisticVestArmorToken",1,"OModBallisticVestArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModBulletProofVestArmorToken",1,"OModBulletProofVestArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModDuelistArmorToken",1,"OModDuelistArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModEnergyShieldedVestArmorToken",1,"OModEnergyShieldedVestArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModGothicArmorToken",1,"OModGothicArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModMedicalArmorToken",1,"OModMedicalArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModPhaseshiftArmorToken",1,"OModPhaseshiftArmorUnequip")
		// Woo update
		TNT1 A 0 A_JumpIfInventory("RLOverchargeSystemArmorToken",1,"OverchargeSystemArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessArmorToken",1,"EnergyDischargeHarnessArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLPrototypeAssaultShieldArmorToken",1,"PrototypeAssaultShieldArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLJetpackArmorToken",1,"JetpackArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitArmorToken",1,"BerserkPowersuitArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLGeosGoldenGauntletArmorToken",1,"GeosGoldenGauntletArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLSoulshatterArmorToken",1,"SoulshatterArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLDemonicCarapaceArmorToken",1,"DemonicCarapaceArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLXaserPowerArmorToken",1,"XaserPowerArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLKateMatterstormHarnessArmorToken",1,"KateMatterstormHarnessArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLZeroDiamondAssaultforceArmorToken",1,"ZeroDiamondAssaultforceArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLKyleTeslaboltArmorToken",1,"KyleTeslaboltArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLRyanCordellPsychicAmplifierSuitArmorToken",1,"RyanCordellPsychicAmplifierSuitArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLTerminusEst13BattlesuitArmorToken",1,"TerminusEst13BattlesuitArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLRoystensCommandArmorToken",1,"RoystensCommandArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLSoloOperativeSuitArmorToken",1,"SoloOperativeSuitArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLTorgueBlastplateArmorToken",1,"TorgueBlastplateArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNuclearArmorToken",1,"NuclearArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLNuclearPowerArmorToken",1,"NuclearPowerArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLTheBeeArmorToken",1,"TheBeeArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLReactiveShieldSystemArmorToken",1,"ReactiveShieldSystemArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLChronotrooperArmorToken",1,"ChronotrooperArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModCyberwarriorArmorToken",1,"OModCyberwarriorArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModRepulsionWaveSuitArmorToken",1,"OModRepulsionWaveSuitArmorUnequip")
		TNT1 A 0 A_JumpIfInventory("RLOModSurvivalMediArmorToken",1,"OModSurvivalMediArmorUnequip")
		//Now to smash your puny non-indestructible armors...
		TNT1 A 0 A_TakeInventory("RLGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBallisticGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBallisticBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBallisticRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLCerberusArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLFireproofGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLFireproofBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLFireproofRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLFireshieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLTowerShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLPowerGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLPowerBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLPowerRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLTacticalArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBallisticShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBallisticVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBulletProofVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLDuelistArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLEnergyShieldedVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLEnergyShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLGothicArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLMedicalArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLPhaseshiftArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLPlasmaShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLNecroArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLCerberusSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLCerberusSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("RLTacticalSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLTacticalSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("PowerRLTacticalSetBonusProtection",1)
		TNT1 A 0 A_TakeInventory("PowerRLTacticalArmorProtection",1)
		TNT1 A 0 A_TakeInventory("RLGothicSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLGothicSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("RLPhaseshiftSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLPhaseshiftSetBonusActive",1)
		// Oow update
		TNT1 A 0 A_TakeInventory("RLAblativeGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLAblativeBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLAblativeRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLRechargeableEnergyShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLCyberwarriorArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLSurvivalMediArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLRepulsionWaveSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLNanoAblativeArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLWildWeaselPeacekeeperArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLBlazingPhoenixDeviceSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLFrontlineEngineerSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLTacticalAssemblerSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("RLSentrySentinelSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLSentrySentinelSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("RLSensibleStrategistSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLSensibleStrategistSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
		TNT1 A 0 A_Print("The armor shatters to pieces as you take it off.")
		Fail
		TNT1 A 0 A_Print("Your armor has shattered.")
		Fail
		TNT1 A 0 A_Print("The armor was destroyed.")
		Fail
		TNT1 A 0 A_Print("Your horrible shovel-hands have broken the armor.")
		Fail
		TNT1 A 0 A_Print("Armor is ded. Not big surprise.")
		Fail
		TNT1 A 0 A_Print("You remove the armor in one piece. Then the other pieces.")
		Fail
		TNT1 A 0 A_Print("Well, the armor's gone.")
		Fail
		TNT1 A 0 A_Print("Your armor is now broken.")
		Fail
		TNT1 A 0 A_Print("Hope you didn't want that armor.")
		Fail
		TNT1 A 0 A_Print("Ever thought about using your brain instead of your muscles?")
		Fail
		TNT1 A 0 A_Print("You tear the armor off your chest like an old T-shirt. Hulkamania!")
		Fail
		TNT1 A 0 A_Print("You break it, you bought it.\n\nOh wait.")
		Fail
		TNT1 A 0 A_Print("This armor could have saved your life.\nJerk.")
		Fail
		TNT1 A 0 A_Print("That was not clever.")
		Fail
		TNT1 A 0 A_Print("You probably could've just lifted it off over your head.")
		Fail
		TNT1 A 0 A_Print("Your \cqArmor Smashing\c- skill ranked up to level \cn2\c-!")
		Fail
		TNT1 A 0 A_Print("The armor is now nothing but dust.")
		Fail
		TNT1 A 0 A_Print("Way to go. It exploded. Nice.")
		Fail
		TNT1 A 0 A_Print("inb4 the next thing wrecks you because you took that off.")
		Fail
	CybernanoGreenArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	CybernanoBlueArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	CybernanoRedArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	NanofiberGreenArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLNanofiberGreenArmor",0,0,0)
		Fail
	NanofiberBlueArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLNanofiberBlueArmor",0,0,0)
		Fail
	NanofiberRedArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLNanofiberRedArmor",0,0,0)
		Fail
	NanofiberSkinGreenArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	NanofiberSkinBlueArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	NanofiberSkinRedArmorUnequip:
		TNT1 A 0 A_Print("This armor cannot be removed by yourself,\nand you aren't likely to find a technician qualified anytime soon.", 5)
		Fail
	OnyxArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOnyxArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOnyxArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOnyxArmor",0,0,0)
		Fail
	AngelicArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLAngelicArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLAngelicAttireSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLAngelicAttireSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("PowerRLAngelicAttireSetBonusProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLAngelicArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLAngelicArmor",0,0,0)
		Fail
	BerserkerArmorUnequip:
		TNT1 A 0 A_Print("Take off your armor?\nSHUT THE HELL UP AND KILL THINGS!\nKILL KILL KILL BLOOD KILL ENEMY ENEMY KIIIILLL", 5)
		Fail
	CyberneticArmorUnequip:
		TNT1 A 0 A_Print("This armor is permanently integrated with your body.\nRemoving it would kill you.", 5)
		Fail
	LavaArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLLavaArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLLavaSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLLavaSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLLavaArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLLavaArmor",0,0,0)
		Fail
	MaleksArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLMaleksArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLInquisitorsSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLInquisitorsSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("PowerRLInquisitorsSetBonusProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLMaleksArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLMaleksArmor",0,0,0)
		Fail
	MedicalPowerArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLMedicalPowerArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLMedicalPowerArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLMedicalPowerArmor",0,0,0)
		Fail
	ShieldedArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLShieldedArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLShieldedArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLShieldedArmor",0,0,0)
		Fail
	OModGreenArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModGreenArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModGreenArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModGreenArmor",0,0,0)
		Fail
	OModBlueArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModBlueArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModBlueArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModBlueArmor",0,0,0)
		Fail
	OModRedArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModRedArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModRedArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModRedArmor",0,0,0)
		Fail
	OModBallisticVestArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModBallisticVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModBallisticVestArmor",0,0,0)
		Fail
	OModBulletProofVestArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModBulletProofVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModBulletProofVestArmor",0,0,0)
		Fail
	OModDuelistArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModDuelistArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModDuelistArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModDuelistArmor",0,0,0)
		Fail
	OModEnergyShieldedVestArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModEnergyShieldedVestArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModEnergyShieldedVestArmor",0,0,0)
		Fail
	OModGothicArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModGothicArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLGothicSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLGothicSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModGothicArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModGothicArmor",0,0,0)
		Fail
	OModMedicalArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModMedicalArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModMedicalArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModMedicalArmor",0,0,0)
		Fail
	OModPhaseshiftArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModPhaseshiftArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLPhaseshiftSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLPhaseshiftSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModPhaseshiftArmor",0,0,0)
		Fail
		// Woooow updates
	OverchargeSystemArmorUnequip:
		TNT1 A 0 A_TakeInventory("PowerRLOverchargeSystemDamage",1)
		TNT1 A 0 A_TakeInventory("PowerRLOverchargeSystemProtection",1)
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOverchargeSystemArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOverchargeSystemArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOverchargeSystemArmor",0,0,0)
		Fail
	EnergyDischargeHarnessArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLEnergyDischargeHarnessArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLEnergyDischargeHarnessArmor",0,0,0)
		Fail
	PrototypeAssaultShieldArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLPrototypeAssaultShieldArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("PowerRLPrototypeAssaultShieldProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLPrototypeAssaultShieldArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLPrototypeAssaultShieldArmor",0,0,0)
		Fail
	JetpackArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLJetpackArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("PowerRLJetpackFlight",1)
		TNT1 A 0 A_TakeInventory("PowerRLJetpackFlightPermanent",1)
		TNT1 A 0 A_TakeInventory("RLDeathFromAboveSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLDeathFromAboveSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLJetpackArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLJetpackArmor",0,0,0)
		Fail
	BerserkPowersuitArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,5)
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",3,"BerserkPowersuitArmorUnequip3")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",2,"BerserkPowersuitArmorUnequip2")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",1,"BerserkPowersuitArmorUnequip1")
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorPickup",1)
		Fail
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",3,"BerserkPowersuitArmorUnequipInventory3")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",2,"BerserkPowersuitArmorUnequipInventory2")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",1,"BerserkPowersuitArmorUnequipInventory1")
		TNT1 A 0 A_FireCustomMissile("DroppedRLBerserkPowersuitArmor",0,0,0)
		Fail
	BerserkPowersuitArmorUnequip1:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorPickup1",1)
		Fail
	BerserkPowersuitArmorUnequip2:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorPickup2",1)
		Fail
	BerserkPowersuitArmorUnequip3:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorPickup3",1)
		Fail
	BerserkPowersuitArmorUnequipInventory1:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_FireCustomMissile("DroppedRLBerserkPowersuitArmor1",0,0,0)
		Fail
	BerserkPowersuitArmorUnequipInventory2:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_FireCustomMissile("DroppedRLBerserkPowersuitArmor2",0,0,0)
		Fail
	BerserkPowersuitArmorUnequipInventory3:
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_FireCustomMissile("DroppedRLBerserkPowersuitArmor3",0,0,0)
		Fail
	GeosGoldenGauntletArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLGeosGoldenGauntletArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLGeosGoldenGauntletArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLGeosGoldenGauntletArmor",0,0,0)
		Fail
	SoulshatterArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLSoulshatterArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLSoulshatterArmor",0,0,0)
		Fail
	DemonicCarapaceArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLDemonicCarapaceArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLDemonicSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLDemonicSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLDemonicCarapaceArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLDemonicCarapaceArmor",0,0,0)
		Fail
	XaserPowerArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLXaserPowerArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLXaserPowerArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLXaserPowerArmor",0,0,0)
		Fail
	KateMatterstormHarnessArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLKateMatterstormHarnessArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLRainbowSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLRainbowSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLKateMatterstormHarnessArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLKateMatterstormHarnessArmor",0,0,0)
		Fail
	ZeroDiamondAssaultforceArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLZeroDiamondAssaultforceArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLZeroDiamondAssaultforceArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLZeroDiamondAssaultforceArmor",0,0,0)
		Fail
	KyleTeslaboltArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLKyleTeslaboltArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLKyleTeslaboltArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLKyleTeslaboltArmor",0,0,0)
		Fail
	RyanCordellPsychicAmplifierSuitArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLRyanCordellPsychicAmplifierSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("PowerRLRyanCordellPsychicAttack",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLRyanCordellPsychicAmplifierSuitArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLRyanCordellPsychicAmplifierSuitArmor",0,0,0)
		Fail
	TerminusEst13BattlesuitArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLTerminusEst13BattlesuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLTerminusEst13BattlesuitArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLTerminusEst13BattlesuitArmor",0,0,0)
		Fail
	RoystensCommandArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLRoystensCommandArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLRoystenSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLRoystenSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLRoystensCommandArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLRoystensCommandArmor",0,0,0)
		Fail
	SoloOperativeSuitArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLSoloOperativeSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLArchitectSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLArchitectSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLSoloOperativeSuitArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLSoloOperativeSuitArmor",0,0,0)
		Fail
	TorgueBlastplateArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLTorgueBlastplateArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLTorgueSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLTorgueSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLTorgueBlastplateArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLTorgueBlastplateArmor",0,0,0)
		Fail
	NuclearArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLNuclearArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("RLNuclearWeaponSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLNuclearWeaponSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLNuclearArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLNuclearArmor",0,0,0)
		Fail
	NuclearPowerArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLNuclearPowerArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLNuclearPowerBootsToken",1,"NuclearPowerBootsCheck")
	NuclearPowerArmorUnequipContinue:
		TNT1 A 0 A_TakeInventory("RLNuclearWeaponSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLNuclearWeaponSetBonusActive",1)
		TNT1 A 0 A_TakeInventory("RLEnclaveSetBonusArmor",1)
		TNT1 A 0 A_TakeInventory("RLEnclaveSetBonusActive",1)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLNuclearPowerArmor",0,0,0)
		Fail
	NuclearPowerBootsCheck:
		TNT1 A 0 A_TakeInventory("PowerRLAbsoluteBootsProtection",1)
		TNT1 A 0 A_GiveInventory("PowerRLNuclearPowerBootsProtection",1)
		Goto NuclearPowerArmorUnequipContinue
	TheBeeArmorUnequip:
		TNT1 A 0 A_TakeInventory("PowerRLTheBeeDamageAmp",1)
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLTheBeeArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLTheBeeArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLTheBeeArmor",0,0,0)
		Fail
	ReactiveShieldSystemArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLReactiveShieldSystemArmorToken",1)
		TNT1 A 0 A_TakeInventory("PowerRLReactiveShieldSystemMelee",1)
		TNT1 A 0 A_TakeInventory("PowerRLReactiveShieldSystemBullet",1)
		TNT1 A 0 A_TakeInventory("PowerRLReactiveShieldSystemFire",1)
		TNT1 A 0 A_TakeInventory("PowerRLReactiveShieldSystemPlasma",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLReactiveShieldSystemArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLReactiveShieldSystemArmor",0,0,0)
		Fail
	ChronotrooperArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLChronotrooperArmorToken",1)
		TNT1 A 0 A_TakeInventory("PowerRLChronotrooperFreeze",1)
		TNT1 A 0 A_GiveInventory("RLChronotrooperArmorSoundDeactivate",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLChronotrooperArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLChronotrooperArmor",0,0,0)
		Fail
	OModCyberwarriorArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModCyberwarriorArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModCyberwarriorArmor",0,0,0)
		Fail
	OModRepulsionWaveSuitArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModRepulsionWaveSuitArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModRepulsionWaveSuitArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModRepulsionWaveSuitArmor",0,0,0)
		Fail
	OModSurvivalMediArmorUnequip:
		TNT1 A 0 A_TakeInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_TakeInventory("RLOModSurvivalMediArmorToken",1)
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,2)
		TNT1 A 0 A_GiveInventory("RLOModSurvivalMediArmorPickup",1)
		Fail
		TNT1 A 0 A_FireCustomMissile("DroppedRLOModSurvivalMediArmor",0,0,0)
		Fail
	}
}

//-------------------------------------------------------------------
//		ARMOR SPECIAL

actor RL10CooldownGiver : PowerupGiver
{
  inventory.pickupmessage ""
  inventory.maxamount 0
  powerup.duration -10
  powerup.type "PowerRL10Cooldown"
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupSound ""
  states
  {
  Spawn:
    TNT1 A -1
    loop
  }
}

actor RL60CooldownGiver : RL10CooldownGiver
{
  powerup.duration -60
  powerup.type "PowerRL60Cooldown"
}

actor RL120CooldownGiver : RL10CooldownGiver
{
  powerup.duration -120
  powerup.type "PowerRL120Cooldown"
}

actor RL120KateCooldownGiver : RL10CooldownGiver
{
  powerup.duration -120
  powerup.type "PowerRL120KateCooldown"
}

actor RL180CooldownGiver : RL10CooldownGiver
{
  powerup.duration -180
  powerup.type "PowerRL180Cooldown"
}

actor RL300CooldownGiver : RL10CooldownGiver
{
  powerup.duration -300
  powerup.type "PowerRL300Cooldown"
}

actor RLSentryCooldownGiver : RL10CooldownGiver
{
  +INVENTORY.ADDITIVETIME
  powerup.duration -30
  powerup.type "PowerRLSentryCooldown"
}

ACTOR PowerRL10Cooldown : Powerup
{
	Powerup.Duration -10
}

ACTOR PowerRL60Cooldown : Powerup
{
	Powerup.Duration -60
}

ACTOR PowerRL120Cooldown : Powerup
{
	Powerup.Duration -120
}

ACTOR PowerRL120KateCooldown : Powerup
{
	Powerup.Duration -120
}

ACTOR PowerRL180Cooldown : Powerup
{
	Powerup.Duration -180
}

ACTOR PowerRL300Cooldown : Powerup
{
	Powerup.Duration -300
}

ACTOR PowerRLSentryCooldown : Powerup
{
	+INVENTORY.ADDITIVETIME
	Powerup.Duration -30
}

ACTOR RLArmorSpecial : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.UNTOSSABLE
    +INVENTORY.UNDROPPABLE
	+INVENTORY.KEEPDEPLETED
    Tag "Armor Special"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "TNT1A0"
    Inventory.Pickupmessage "stop doing things."
	Inventory.PickupSound "misc/armor_pkup"
	Inventory.UseSound "misc/armor_pkup"
	States
	{
	Spawn:
		TNT1 A -1
		Loop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorToken",1,"CyberneticArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLRechargeableEnergyShieldArmorToken",1,"RechargeableEnergyShieldArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLOverchargeSystemArmorToken",1,"OverchargeSystemArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLRepulsionWaveSuitArmorToken",1,"RepulsionWaveSuitArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLOModRepulsionWaveSuitArmorToken",1,"RepulsionWaveSuitArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessArmorToken",1,"EnergyDischargeHarnessArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLPrototypeAssaultShieldArmorToken",1,"PrototypeAssaultShieldArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLJetpackArmorToken",1,"JetpackArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitArmorToken",1,"BerserkPowersuitArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLSoulshatterArmorToken",1,"SoulshatterArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLDemonicSetBonusActive",1,"DemonicCarapaceArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLBlazingPhoenixDeviceSuitArmorToken",1,"BlazingPhoenixDeviceSuitArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLKateMatterstormHarnessArmorToken",1,"KateMatterstormHarnessArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLZeroDiamondAssaultforceArmorToken",1,"ZeroDiamondAssaultforceArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLKyleTeslaboltArmorToken",1,"KyleTeslaboltArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLRyanCordellPsychicAmplifierSuitArmorToken",1,"RyanCordellPsychicAmplifierSuitArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLTerminusEst13BattlesuitArmorToken",1,"TerminusEst13BattlesuitArmorSpecial")// Not done
		TNT1 A 0 A_JumpIfInventory("RLRoystenSetBonusActive",1,"RoystensCommandArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLArchitectSetBonusActive",1,"SoloOperativeSuitArmorSpecial")// Not done
		TNT1 A 0 A_JumpIfInventory("RLTorgueSetBonusActive",1,"TorgueBlastplateArmorSpecial")
		TNT1 A 0 A_JumpIfInventory("RLFrontlineEngineerSuitArmorToken",1,"FrontlineEngineerSuitArmorSpecial")// Not done
		TNT1 A 0 A_JumpIfInventory("RLTacticalAssemblerSuitArmorToken",1,"TacticalAssemblerSuitArmorSpecial")// Not done
		TNT1 A 0 A_JumpIfInventory("RLChronotrooperArmorToken",1,"ChronotrooperArmorSpecial")
		Fail
	Cooldown:
		TNT1 A 0 A_Print("Armor Special cooldown has not yet expired.", 10)
		Fail
	CooldownLevel:
		TNT1 A 0 A_Print("You may only use this Armor Special once per level.", 10)
		Fail
	SentryLimit1:
		TNT1 A 0 A_Print("You already have a sentry deployed.", 10)
		Fail
	SentryLimit2:
		TNT1 A 0 A_Print("You already have two sentries deployed.", 10)
		Fail
	RestorerLimit:
		TNT1 A 0 A_Print("You already have a restorer deployed.", 10)
		Fail
	ArmorDamaged:
		TNT1 A 0 A_Print("This armor is currently too damaged\nto activate it's armor special.", 10)
		Fail
	NoArmorSpecial:
		TNT1 A 0
		Fail
	CyberneticArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("RLCyberneticArmorModdedToken",1,"CyberneticArmorSpecialModded")
		TNT1 A 0 A_GiveInventory("RLCyberneticArmorModdingConfirm", 1)
		TNT1 A 0 A_Print("Use a modpack to apply it to the Cybernetic Armor.\nSwitch weapons to cancel.", 10)
		Fail
	CyberneticArmorSpecialModded:
		TNT1 A 0 A_Print("Your Cybernetic Armor is already modded.", 10)
		Fail
	RechargeableEnergyShieldArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"RechargeableEnergyShieldCharged")
		TNT1 A 0 A_JumpIfInventory("RLArmorSpecialConfirm",1,"RechargeableEnergyShieldConfirm")
		TNT1 A 0 A_GiveInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_JumpIfInventory("Cell",50,1)
		Goto RechargeableEnergyShieldCells
		TNT1 A 0 A_Print("Use this again to recharge your shield by 20%.\nSwitch weapons to cancel.", 10)
		Fail
	RechargeableEnergyShieldCells:
		TNT1 A 0 A_TakeInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_Print("You need 50 cells to recharge the shield.", 10)
		Fail
	RechargeableEnergyShieldConfirm:
		TNT1 A 0 A_JumpIfInventory("Cell",50,1)
		Goto RechargeableEnergyShieldCells
		TNT1 A 0 A_TakeInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_TakeInventory("Cell",50, TIF_NOTAKEINFINITE)
		TNT1 A 0 A_PlaySound("misc/rlshield", CHAN_WEAPON)
		TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_GiveInventory("RLArmorRestorer100", 1)
		TNT1 A 0 A_Print("Shield recharged 20%.", 10)
		Fail
	RechargeableEnergyShieldCharged:
		TNT1 A 0 A_Print("This shield is fully charged already.", 10)
		Fail
	OverchargeSystemArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_GiveInventory("PowerRLOverchargeSystemDamage", 1)
		TNT1 A 0 A_GiveInventory("PowerRLOverchargeSystemProtection", 1)
		TNT1 A 0 A_GiveInventory("PowerRL180Cooldown", 1)
		TNT1 A 0 A_Print("Plasma weapons overcharged temporarily.", 3)
		Fail
	RepulsionWaveSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_PlaySound("misc/repulsionwave", CHAN_WEAPON)
		TNT1 A 0 A_RadiusThrust(50000, 512, RTF_NOTMISSILE, 320)
		TNT1 A 0 Radius_Quake(3, 10, 0, 16, 0)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Print("Repulsion Wave activated.", 3)
		Fail
	EnergyDischargeHarnessArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessCounter",5,"EnergyDischargeHarnessCounter5")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessCounter",4,"EnergyDischargeHarnessCounter4")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessCounter",3,"EnergyDischargeHarnessCounter3")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessCounter",2,"EnergyDischargeHarnessCounter2")
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessCounter",1,"EnergyDischargeHarnessCounter1")
		Fail
	EnergyDischargeHarnessCounter1:
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessCounter", 5)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Recoil(10)
		TNT1 A 0 Radius_Quake(2, 18, 0, 16, 0)
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessPlasmaType",1,3)
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 1 Fire Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast1Fire", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 1 Plasma Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast1Plasma", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
	EnergyDischargeHarnessCounter2:
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessCounter", 5)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Recoil(15)
		TNT1 A 0 Radius_Quake(3, 18, 0, 16, 0)
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessPlasmaType",1,3)
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 2 Fire Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast2Fire", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 2 Plasma Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast2Plasma", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
	EnergyDischargeHarnessCounter3:
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessCounter", 5)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Recoil(20)
		TNT1 A 0 Radius_Quake(4, 18, 0, 16, 0)
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessPlasmaType",1,3)
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 3 Fire Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast3Fire", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 3 Plasma Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast3Plasma", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
	EnergyDischargeHarnessCounter4:
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessCounter", 5)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Recoil(25)
		TNT1 A 0 Radius_Quake(5, 18, 0, 16, 0)
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessPlasmaType",1,3)
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 4 Fire Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast4Fire", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 4 Plasma Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast4Plasma", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
	EnergyDischargeHarnessCounter5:
		TNT1 A 0 A_TakeInventory("RLEnergyDischargeHarnessCounter", 5)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		TNT1 A 0 A_Recoil(50)
		TNT1 A 0 Radius_Quake(8, 18, 0, 32, 0)
		TNT1 A 0 A_JumpIfInventory("RLEnergyDischargeHarnessPlasmaType",1,3)
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 5 Fire Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast5Fire", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
		TNT1 A 0 A_Print("Energy Discharge Harness activated.\nLevel 5 Plasma Explosion", 5)
		TNT1 A 0 A_SpawnItemEx ("RLEnergyDischargeHarnessBlast5Plasma", 5, 0, 20, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Fail
	PrototypeAssaultShieldArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRLPrototypeAssaultShieldProtection",1,"PrototypeAssaultShieldCharged")
		TNT1 A 0 A_JumpIfInventory("RLArmorSpecialConfirm",1,"PrototypeAssaultShieldConfirm")
		TNT1 A 0 A_GiveInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_JumpIfInventory("Cell",100,1)
		Goto PrototypeAssaultShieldCells
		TNT1 A 0 A_Print("Use this again to activate the \ctPrototype Assault Shield.\nSwitch weapons to cancel.", 10)
		Fail
	PrototypeAssaultShieldCells:
		TNT1 A 0 A_TakeInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_GiveInventory("PowerRLPrototypeAssaultShieldNoCells", 1)
		TNT1 A 0 A_Print("You need 100 cells to activate the Prototype Assault Shield.", 10)
		Fail
	PrototypeAssaultShieldConfirm:
		TNT1 A 0 A_JumpIfInventory("Cell",100,1)
		Goto PrototypeAssaultShieldCells
		TNT1 A 0 A_TakeInventory("RLArmorSpecialConfirm", 1)
		TNT1 A 0 A_TakeInventory("Cell",100, TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("PowerRLPrototypeAssaultShieldProtection", 1)
		TNT1 A 0 A_Print("The Prototype Assault Shield is now active.", 10)
		Fail
	PrototypeAssaultShieldCharged:
		TNT1 A 0 A_Print("This shield is already active.", 10)
		Fail
	JetpackArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("RLDeathFromAboveSetBonusActive",1,"JetpackPermanent")
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_PlaySound("misc/jetpackon", 7)
		TNT1 A 0 A_GiveInventory("PowerRLJetpackFlight", 1)
		TNT1 A 0 A_GiveInventory("PowerRL180Cooldown", 1)
		TNT1 A 0 A_Print("Jetpack activated.", 3)
		Fail
	JetpackPermanent:
		TNT1 A 0 A_JumpIfInventory("PowerRLJetpackFlightPermanent",1,"JetpackPermanentOff")
		TNT1 A 0 A_PlaySound("misc/jetpackon", 7)
		TNT1 A 0 A_GiveInventory("PowerRLJetpackFlightPermanent", 1)
		Fail
	JetpackPermanentOff:
		TNT1 A 0 A_PlaySound("misc/jetpackoff", 7)
		TNT1 A 0 A_TakeInventory("PowerRLJetpackFlightPermanent", 1)
		Fail
	BerserkPowersuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"BerserkPowersuitBerserk")
		TNT1 A 0 A_JumpIfInventory("RLBerserkPowersuitBerserkCounter",1,1)
		Goto BerserkPowersuitNoCharges
		TNT1 A 0 A_PlaySound("misc/berserkpowersuit", CHAN_VOICE)
		TNT1 A 0 A_TakeInventory("RLBerserkPowersuitBerserkCounter", 1)
		TNT1 A 0 A_GiveInventory("PowerStrength", 1)
		TNT1 A 0 HealThing(100, 0)
		TNT1 A 0 A_JumpIfInventory ("RLAmmoChainPerk", 1, 2)
		TNT1 A 0 A_GiveInventory("PowerBerserkResistance")
		Goto BerserkPowersuitFinish
		TNT1 A 0 A_GiveInventory("PowerBerserkResistanceMarine")
	BerserkPowersuitFinish:
		TNT1 A 0 A_Print("Berserk stimulants injected into bloodstream.", 3)
		Fail
	BerserkPowersuitNoCharges:
		TNT1 A 0 A_Print("The Berserk Powersuit has no berserk stimulants left.\nCollect a Berserk pack to get more.", 10)
		Fail
	BerserkPowersuitBerserk:
		TNT1 A 0 A_Print("You are already berserk.\nAdditional berserk stimulants would likely be fatal.", 10)
		Fail
	SoulshatterArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfHealthLower(2,"SoulshatterArmorLowHealth")
		TNT1 A 0 A_PlaySound("misc/soulshatter", CHAN_VOICE)
		TNT1 A 0 A_FireCustomMissile ("RLSoulshatterArmorAnimator", 0, 0)
		TNT1 A 0 A_FireCustomMissile ("RLSoulshatterArmorWave", 0, 0)
		TNT1 A 0 A_RadiusGive("RLSoulshatterHealthDrain", 512, RGF_MONSTERS, 1)
		TNT1 A 0 A_TakeInventory("BasicArmor", 99999)
		TNT1 A 0 DamageThing(health / 2, "MOD_WATER")
		TNT1 A 0 Radius_Quake(6, 30, 0, 16, 0)
		TNT1 A 0 A_GiveInventory("PowerRL300Cooldown", 1)
		TNT1 A 0 A_Print("Part of your soul is twisted into a deadly shockwave.\nYou and all nearby enemies lose half their current health.", 10)
		TNT1 A 0 A_JumpIfInventory ("RLShellshockPerk", 1, 2)
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmor")
		Fail
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmorRenegade")
		Fail
	SoulshatterArmorLowHealth:
		TNT1 A 0 A_Print("Your health is too low to use this armor.", 10)
		Fail
	DemonicCarapaceArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLDemonicSetBonusActive",1,1)
		Fail
		TNT1 A 0 A_JumpIfInventory("RLDemonicCarapaceSupercharge",1,"DemonicCarapaceSupercharge")
		TNT1 A 0 A_FireCustomMissile("RLDemonicCarapacePlasmaSkull", 0, 0)
		TNT1 A 0 A_GiveInventory("PowerRLDemonicCarapaceAttack", 1)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		Fail
	DemonicCarapaceSupercharge:
		TNT1 A 0 A_FireCustomMissile ("RLDemonicCarapaceAnimator", 0, 0)
		TNT1 A 0 A_TakeInventory("RLDemonicCarapaceSupercharge", 1)
		TNT1 A 0 A_GiveInventory("PowerRL10Cooldown", 1)
		Fail
	BlazingPhoenixDeviceSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("BasicArmor",26,1)
		Goto ArmorDamaged
		TNT1 A 0 A_JumpIfInventory("Cell",50,1)
		Goto BlazingPhoenixDeviceSuitCells
		TNT1 A 0 A_TakeInventory("Cell",50, TIF_NOTAKEINFINITE)
		TNT1 A 0 A_FireCustomMissile ("RLBlazingPhoenixDeviceSuitAnimator", 0, 0)
		TNT1 A 0 A_GiveInventory("PowerRL120Cooldown", 1)
		Fail
	BlazingPhoenixDeviceSuitCells:
		TNT1 A 0 A_Print("You need 50 cells to activate the Phoenix-B Device.", 10)
		Fail
	KateMatterstormHarnessArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 AAAAAAAAAAAA 0 A_FireCustomMissile ("RLKateMatterstormHarnessPlasmaball", random(0,359), 0, 0, 0, 0, random(30,-30))
		TNT1 A 0 A_GiveInventory("PowerRL120KateCooldown", 1)
		Fail
	ZeroDiamondAssaultforceArmorSpecial:
		TNT1 A 0 A_JumpIfInventory ("RLZeroDiamondAssaultforceArmorCounter", 1, "ZeroDiamondAssaultforceArmorAlreadyFiring")
		TNT1 A 0 A_JumpIfInventory ("RLAmmoChainPerk", 1, 2)
		TNT1 A 0 A_JumpIfInventory("Clip",80,"ZeroDiamondAssaultforceFiringSequence")
		Goto ZeroDiamondAssaultforceArmorNoAmmo
		TNT1 A 0 A_JumpIfInventory("Clip",20,"ZeroDiamondAssaultforceFiringSequence")
		Goto ZeroDiamondAssaultforceArmorNoAmmoMarine
	ZeroDiamondAssaultforceFiringSequence:
		TNT1 A 0 A_JumpIfInventory ("RLAmmoChainPerk", 1, 3)
		TNT1 A 0 A_TakeInventory("Clip",80, TIF_NOTAKEINFINITE)
		TNT1 A 0 A_FireCustomMissile ("RLZeroDiamondAssaultforceArmorAnimator", 0, 0)
		Fail
		TNT1 A 0 A_TakeInventory("Clip",20, TIF_NOTAKEINFINITE)
		TNT1 A 0 A_FireCustomMissile ("RLZeroDiamondAssaultforceArmorAnimator", 0, 0)
		Fail
	ZeroDiamondAssaultforceArmorNoAmmo:
		TNT1 A 0 A_Print("You need 80 bullets to fire the armor's minigun.", 10)
		Fail
	ZeroDiamondAssaultforceArmorNoAmmoMarine:
		TNT1 A 0 A_Print("You need 20 bullets to fire the armor's minigun.", 10)
		Fail
	ZeroDiamondAssaultforceArmorAlreadyFiring:
		TNT1 A 0 A_Print("You are already firing the minigun.", 5)
		Fail
	KyleTeslaboltArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_FireCustomMissile ("RLKyleTeslaboltArmorAnimator", 0, 0)
		TNT1 A 0 A_GiveInventory("PowerRL120Cooldown", 1)
		Fail
	RyanCordellPsychicAmplifierSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLRyanCordellPsychicAttack",1,"Cooldown")
		TNT1 A 0 A_PlaySound("misc/psychicamplifier", CHAN_VOICE)
		TNT1 A 0 A_GiveInventory("PowerRLRyanCordellPsychicAttack", 1)
		TNT1 A 0 A_RadiusGive("RLRyanCordellPsychicConversion", 256, RGF_MONSTERS, 1)
		TNT1 A 0 A_GiveInventory("PowerRL120Cooldown", 1)
		Fail
	TerminusEst13BattlesuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_FireCustomMissile ("RLTerminusMissile", -4, 0, 8, 8)
		TNT1 A 0 A_FireCustomMissile ("RLTerminusMissile", -2, 0, 4, 8)
		TNT1 A 0 A_FireCustomMissile ("RLTerminusMissile", 2, 0, -4, 8)
		TNT1 A 0 A_FireCustomMissile ("RLTerminusMissile", 4, 0, -8, 8)
		TNT1 A 0 A_GiveInventory("PowerRLTerminusAttack", 1)
		TNT1 A 0 A_GiveInventory("PowerRL60Cooldown", 1)
		Fail
	RoystensCommandArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLRoystenLevelCooldown",1,"CooldownLevel")
		TNT1 A 0 A_JumpIfInventory("RLRoystenSetBonusActive",1,1)
		Fail
		TNT1 A 0 A_SpawnItemEx ("RLSupplyCrate", 32, 0, 30, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION) 
		TNT1 A 0 A_SpawnItemEx ("TeleportFog", 32, 0, 30, 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
		TNT1 A 0 A_GiveInventory("PowerRL180Cooldown", 1)
		TNT1 A 0 A_GiveInventory("RLRoystenLevelCooldown", 1)
		Fail
	SoloOperativeSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLArchitectSetBonusActive",1,1)
		Fail
		TNT1 A 0 A_PlaySound("misc/solooperativesuit", CHAN_BODY)
		TNT1 A 0 A_GiveInventory("PowerRLSoloInvisibility", 1)
		TNT1 A 0 A_GiveInventory("PowerRLSoloDamage", 1)
		TNT1 A 0 A_RadiusGive("RLSoloTargetClearer", 2056, RGF_MONSTERS, 1)
		TNT1 A 0 A_GiveInventory("PowerRL180Cooldown", 1)
		Fail
	TorgueBlastplateArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLTorgueSetBonusActive",1,1)
		Fail
		TNT1 A 0 A_Jump(50, 2)
		TNT1 A 0 A_PlaySound("misc/torgue", CHAN_BODY, 5)
		Goto TorgueBlastplateArmorContinue
		TNT1 A 0 A_PlaySound("misc/torguemore", CHAN_BODY, 5)
		Goto TorgueBlastplateArmorContinue
	TorgueBlastplateArmorContinue:
		TNT1 A 0 A_GiveInventory("PowerRLTorgueExplosionProtection", 1)
		TNT1 A 0 A_FireCustomMissile ("RLTorgueExplosionMaker", 0, 0)
		TNT1 A 0 A_GiveInventory("PowerRL120Cooldown", 1)
		Fail
	FrontlineEngineerSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLSentrySentinelSetBonusActive",1,2)
		TNT1 A 0 A_JumpIfInventory("RLSentryLimit",1,"SentryLimit1")
		TNT1 A 0 A_JumpIfInventory ("RLSharpshooterPerk", 1, "FrontlineEngineerSuitScout")
		TNT1 A 0 A_JumpIfInventory ("RLShellshockPerk", 1, "FrontlineEngineerSuitRenegade")
		TNT1 A 0 A_JumpIfInventory ("RLScavengerPerk", 1, "FrontlineEngineerSuitTechnician")
	FrontlineEngineerSuitMarine:
		TNT1 A 0 A_JumpIfInventory("RLSentryLimit",2,"SentryLimit2")
		TNT1 A 0 A_SpawnItemEx ("RLFrontlineEngineerSentryMarine", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER)
		Fail
	FrontlineEngineerSuitScout:
		TNT1 A 0 A_JumpIfInventory("RLSentryLimit",2,"SentryLimit2")
		TNT1 A 0 A_SpawnItemEx ("RLFrontlineEngineerSentryScout", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
	FrontlineEngineerSuitRenegade:
		TNT1 A 0 A_JumpIfInventory("RLSentryLimit",2,"SentryLimit2")
		TNT1 A 0 A_SpawnItemEx ("RLFrontlineEngineerSentryRenegade", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
	FrontlineEngineerSuitTechnician:
		TNT1 A 0 A_JumpIfInventory("RLSentryLimit",2,"SentryLimit2")
		TNT1 A 0 A_SpawnItemEx ("RLFrontlineEngineerSentryTechnician", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
	TacticalAssemblerSuitArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("RLRestorerLimit",1,"RestorerLimit")
		TNT1 A 0 A_JumpIfInventory ("RLScavengerPerk", 1, "TacticalAssemblerSuitTechnician")
		TNT1 A 0 A_JumpIfInventory("RLSensibleStrategistSetBonusActive",1,2)
		TNT1 A 0 A_SpawnItemEx ("RLTacticalAssemblerRestorer", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
		TNT1 A 0 A_SpawnItemEx ("RLTacticalAssemblerRestorer2", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
	TacticalAssemblerSuitTechnician:
		TNT1 A 0 A_JumpIfInventory("RLSensibleStrategistSetBonusActive",1,2)
		TNT1 A 0 A_SpawnItemEx ("RLTacticalAssemblerRestorerTechnician", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
		TNT1 A 0 A_SpawnItemEx ("RLTacticalAssemblerRestorer2Technician", 60, 0, 5, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION | SXF_SETMASTER) 
		Fail
	ChronotrooperArmorSpecial:
		TNT1 A 0 A_JumpIfInventory("PowerRL300Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL180Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120KateCooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL120Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL60Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRL10Cooldown",1,"Cooldown")
		TNT1 A 0 A_JumpIfInventory("PowerRLSentryCooldown",1,"Cooldown")
		TNT1 A 0 A_FireCustomMissile ("RLChronotrooperArmorAnimator", 0, 0)
		TNT1 A 0 A_GiveInventory("PowerRLChronotrooperFreeze", 1)
		TNT1 A 0 A_GiveInventory("PowerRL300Cooldown", 1)
		Fail
	}
}

actor RLOverchargeSystemDamageGiver : RL10CooldownGiver
{
  powerup.duration -10
  powerup.type "PowerRLOverchargeSystemDamage"
}

actor PowerRLOverchargeSystemDamage : PowerDamage
{
   damagefactor "Plasma", 3
   inventory.icon ""
   Powerup.Duration -10
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLOverchargeSystemProtection : PowerProtection
{
   damagefactor "Plasma", 1.75
   inventory.icon ""
   Powerup.Duration -10
   +INVENTORY.PERSISTENTPOWER
}

Actor RLEnergyDischargeHarnessCounter : Inventory
{
inventory.maxamount 5
}

Actor RLEnergyDischargeHarnessPlasmaType : Inventory
{
inventory.maxamount 1
}

Actor RLEnergyDischargeHarnessFireType : Inventory
{
inventory.maxamount 1
}

ACTOR RLEnergyDischargeHarnessBlast1Fire : Rocket
{
   Radius 1
   Height 1
   -RANDOMIZE
   -DEHEXPLOSION
   -ROCKETTRAIL
   DamageType "Fire"
   Scale 0.9
   Speed 0
   Damage 0
   SeeSound ""
   DeathSound ""
   Obituary "%o was discharged by %k."
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (25, 128, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast1Plasma : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 0.9
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (25, 128, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast2Fire : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.2
   DamageType "Fire"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (50, 160, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast2Plasma : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.2
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (50, 160, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast3Fire : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.5
   DamageType "Fire"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (75, 192, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/mediumexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast3Plasma : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.5
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (75, 192, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/mediumexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast4Fire : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.8
   DamageType "Fire"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (100, 224, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/mediumexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast4Plasma : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.8
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (100, 224, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/mediumexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast5Fire : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 2.5
   DamageType "Fire"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (200, 512, "None", 1, 256)
    TNT1 A 0 A_PlaySound("weapons/largeexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLEnergyDischargeHarnessBlast5Plasma : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 2.5
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (200, 512, "None", 1, 256)
    TNT1 A 0 A_PlaySound("weapons/largeexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

actor RLPrototypeAssaultShieldProtectionGiver : RL10CooldownGiver
{
  powerup.duration -300
  powerup.type "PowerRLPrototypeAssaultShieldProtection"
}

actor PowerRLPrototypeAssaultShieldProtection : PowerProtection
{
   SeeSound "misc/prototypeassaultshieldon"
   DeathSound "misc/prototypeassaultshieldoff"
   inventory.icon ""
   Powerup.Duration -300
   +INVENTORY.PERSISTENTPOWER
   +NORADIUSDMG
   DamageFactor "Melee", 0.2
   DamageFactor "Bullet", 0.2
   DamageFactor "Fire", 0.2
   DamageFactor "Plasma", 0.2
}

ACTOR PowerRLPrototypeAssaultShieldNoCells : Powerup
{
	Powerup.Duration -3
}

actor PowerRLJetpackFlight : PowerFlight
{
   inventory.icon ""
   Powerup.Duration -20
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLJetpackFlightPermanent : PowerFlight
{
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

ACTOR RLSoulshatterHealthDrain : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 DamageThing(health / 2, "MOD_WATER")
    Stop
  }
}

actor RLSoulshatterArmorWave
{
    Radius 0
    Height 0
    Speed 0
    Scale 7.0
    +THRUGHOST
    +THRUACTORS
    PROJECTILE
    RENDERSTYLE Add 
    ALPHA 0.27 
    States
    {
    Spawn:
        TNT1 A 0
        NRXP ABCDEF 5 Bright
        Stop
    }
}

ACTOR RLSoulshatterArmorAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLSoulshatterArmorAnimation", 1)
    TNT1 A 5 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLSoulshatterArmorAnimation", 1)
    TNT1 A 5 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLSoulshatterArmorAnimation", 1)
    TNT1 A 5 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLSoulshatterArmorAnimation", 1)
    TNT1 A 5 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLSoulshatterArmorAnimation", 4)
	Stop
	}
}
	
Actor RLSoulshatterArmorAnimation : Inventory
{
inventory.maxamount 4
}

ACTOR RLDemonicCarapacePlasmaSkull : RevenantTracer
{
   +THRUGHOST
   Speed 15
   Scale 0.7
   Decal "Scorch"
   Damage 25
   DamageType "Plasma"
   Translation "168:191=112:123", "32:47=121:127", "192:207=112:127"
   SeeSound "misc/demoniccarapaceball"
   DeathSound "weapons/mediumexp"
  States
  {
  Spawn:
    NREB A 1 Bright A_SeekerMissile(0, 1, SMF_PRECISE | SMF_CURSPEED)
    NREB A 1 Bright A_ScaleVelocity(1.05)
    NREB A 1 Bright A_SeekerMissile(0, 1, SMF_PRECISE | SMF_CURSPEED)
    NREB A 1 Bright A_ScaleVelocity(1.05)
    NREB B 1 Bright A_SeekerMissile(0, 1, SMF_PRECISE | SMF_CURSPEED)
    NREB B 1 Bright A_ScaleVelocity(1.05)
    NREB B 1 Bright A_SeekerMissile(0, 1, SMF_PRECISE | SMF_CURSPEED)
    NREB B 1 Bright A_ScaleVelocity(1.05)
    Loop
  Death:
    TNT1 A 0 A_Explode (256, 512, 0)
    TNT1 A 0 A_SetScale (1.75)
    PULS ABCDEFEDCBA 2 Bright
    Stop
  }
}

ACTOR RLDemonicCarapaceAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
    TNT1 A 8 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("PowerRLDemonicCarapaceAttack", 1)
	TNT1 A 0 A_GiveToTarget("RLDemonicCarapaceBurstActivator", 1)
    TNT1 A 8 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("PowerRLDemonicCarapaceAttack", 1)
	TNT1 A 0 A_GiveToTarget("RLDemonicCarapaceBurstActivator", 1)
    TNT1 A 8 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("PowerRLDemonicCarapaceAttack", 1)
	TNT1 A 0 A_GiveToTarget("RLDemonicCarapaceBurstActivator", 1)
    TNT1 A 8 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("PowerRLDemonicCarapaceAttack", 1)
	TNT1 A 0 A_GiveToTarget("RLDemonicCarapaceBurstActivator", 1)
    TNT1 A 8 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("PowerRLDemonicCarapaceAttack", 1)
	TNT1 A 0 A_GiveToTarget("RLDemonicCarapaceBurstActivator", 1)
	Stop
	}
}

ACTOR RLDemonicCarapaceBurstActivator : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_FireCustomMissile ("RLDemonicCarapacePlasmaSkull", 0, 0)
    Stop
  }
}

ACTOR PowerRLDemonicCarapaceAttack : Powerup
{
	Powerup.Duration 10
}

Actor RLDemonicCarapaceSupercharge : Inventory
{
inventory.maxamount 1
}

ACTOR RLBlazingPhoenixDeviceSuitAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
    TNT1 A 0 A_PlaySound("misc/blazingphoenixdevicecharge", CHAN_WEAPON)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AAA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 AA 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 A 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitWave", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS) 
    TNT1 A 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
    TNT1 A 0 A_StopSound(CHAN_WEAPON)
	TNT1 A 0 A_JumpIfInTargetInventory("BasicArmor", 25, 1)
	Goto UnstableBlast
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitBlast", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS)
	TNT1 A 0 A_TakeFromTarget("BasicArmor", 25)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitBlender", 1)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitTeleport", 1)
    TNT1 A 2 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
    TNT1 A 2 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
    TNT1 A 3 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget("RLBlazingPhoenixDeviceSuitAnimation", 1)
    TNT1 A 4 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 6)
	Stop
  UnstableBlast:
	TNT1 A 0 A_SpawnItemEx ("RLBlazingPhoenixDeviceSuitBlast2", 5, 0, 25, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS)
	TNT1 A 0 A_TakeFromTarget("RLBlazingPhoenixDeviceSuitAnimation", 6)
	Stop
	}
}

Actor RLBlazingPhoenixDeviceSuitAnimation : Inventory
{
inventory.maxamount 6
}

actor RLBlazingPhoenixDeviceSuitWave
{
    Radius 0
    Height 0
    Speed 0
    Scale 7.0
    +THRUGHOST
    +THRUACTORS
    PROJECTILE
    RENDERSTYLE Add 
    ALPHA 0.22
    States
    {
    Spawn:
        NRXP FEDCBA 1 Bright
        Stop
    }
}

actor RLBlazingPhoenixDeviceSuitBlast
{
    Radius 0
    Height 0
    Speed 0
    Scale 6.0
    +THRUGHOST
    +THRUACTORS
    PROJECTILE
    RENDERSTYLE Add 
    ALPHA 0.98
    States
    {
    Spawn:
        TNT1 A 0
		TNT1 A 0 A_PlaySound("misc/blazingphoenixdevice", CHAN_WEAPON)
		TNT1 A 0 A_Explode (2000, 4096, "None", 0, 1024)
		K8B0 IJK 4 Bright
		K8B0 L 2 Bright A_SetScale (6.4, 6)
		K8B0 L 2 Bright A_SetScale (6.8, 6)
		K8B0 M 2 Bright A_SetScale (7.2, 6)
		K8B0 M 2 Bright A_SetScale (7.6, 6)
		K8B0 N 2 Bright A_SetScale (8.0, 6)
		K8B0 N 2 Bright A_SetScale (9.4, 6)
        Stop
    }
}

actor RLBlazingPhoenixDeviceSuitBlast2 : RLBlazingPhoenixDeviceSuitBlast
{
    States
    {
    Spawn:
        TNT1 A 0
		TNT1 A 0 A_PlaySound("misc/blazingphoenixdevice", CHAN_WEAPON)
		TNT1 A 0 A_Explode (2000, 4096, XF_HURTSOURCE, 0, 1024)
		K8B0 IJK 4 Bright
		K8B0 L 2 Bright A_SetScale (6.4, 6)
		K8B0 L 2 Bright A_SetScale (6.8, 6)
		K8B0 M 2 Bright A_SetScale (7.2, 6)
		K8B0 M 2 Bright A_SetScale (7.6, 6)
		K8B0 N 2 Bright A_SetScale (8.0, 6)
		K8B0 N 2 Bright A_SetScale (9.4, 6)
        Stop
    }
}

ACTOR RLBlazingPhoenixDeviceSuitTeleport : ArtiTeleport
{
  -COUNTITEM
  -INVENTORY.INVBAR
  -INVENTORY.PICKUPFLASH
  -INVENTORY.FANCYPICKUPSOUND
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.AUTOACTIVATE
  Inventory.DefMaxAmount
  Inventory.Icon ""
  Inventory.PickupSound ""
  Inventory.PickupMessage ""
  Tag ""
  States
  {
  Spawn:
    TNT1 A -1
    Loop
  }
}

ACTOR RLBlazingPhoenixDeviceSuitBlender : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_SetBlend ("Red", 1, 35)
    Stop
  }
}

ACTOR RLKateMatterstormHarnessPlasmaball : BFGBall
{
  Radius 13
  Height 8
  Speed 18
  Damage (25)
  DamageType "Plasma"
  Projectile
  +RANDOMIZE
  +THRUGHOST
  +ALLOWBOUNCEONACTORS
  +BOUNCEONACTORS
  +USEBOUNCESTATE
  RenderStyle Add
  Alpha 0.85
  Scale 0.6
  BounceType "Hexen"
  BounceFactor 1
  BounceSound "weapons/tantrumcannonbounce"
  SeeSound "misc/katefire"
  DeathSound "misc/kateexplode"
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Jump (256, 1,2,3,4,5,6)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
	Goto ASelectMain
  ASelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  ASelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "AViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "AIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "ABlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "AGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "AYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "AOrange")
    Goto ARed
  ARed:
    K8B0 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathRed
  AOrange:
    K8B1 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathOrange
  AYellow:
    K8B2 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathYellow
  AGreen:
    K8B3 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathGreen
  ABlue:
    K8B4 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathBlue
  AIndigo:
    K8B5 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelect", 0)
    Goto DeathIndigo
  AViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 A 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("BSelectMain", 0)
    Goto DeathViolet
  BSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  BSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "BViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "BIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "BBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "BGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "BYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "BOrange")
    Goto BRed
  BRed:
    K8B0 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathRed
  BOrange:
    K8B1 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathOrange
  BYellow:
    K8B2 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathYellow
  BGreen:
    K8B3 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathGreen
  BBlue:
    K8B4 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathBlue
  BIndigo:
    K8B5 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelect", 0)
    Goto DeathIndigo
  BViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 B 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("CSelectMain", 0)
    Goto DeathViolet
  CSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  CSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "CViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "CIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "CBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "CGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "CYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "COrange")
    Goto CRed
  CRed:
    K8B0 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathRed
  COrange:
    K8B1 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathOrange
  CYellow:
    K8B2 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathYellow
  CGreen:
    K8B3 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathGreen
  CBlue:
    K8B4 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathBlue
  CIndigo:
    K8B5 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelect", 0)
    Goto DeathIndigo
  CViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 C 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("DSelectMain", 0)
    Goto DeathViolet
  DSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  DSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "DViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "DIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "DBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "DGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "DYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "DOrange")
    Goto DRed
  DRed:
    K8B0 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathRed
  DOrange:
    K8B1 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathOrange
  DYellow:
    K8B2 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathYellow
  DGreen:
    K8B3 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathGreen
  DBlue:
    K8B4 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathBlue
  DIndigo:
    K8B5 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelect", 0)
    Goto DeathIndigo
  DViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 D 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ESelectMain", 0)
    Goto DeathViolet
  ESelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  ESelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "EViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "EIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "EBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "EGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "EYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "EOrange")
    Goto ERed
  ERed:
    K8B0 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathRed
  EOrange:
    K8B1 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathOrange
  EYellow:
    K8B2 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathYellow
  EGreen:
    K8B3 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathGreen
  EBlue:
    K8B4 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathBlue
  EIndigo:
    K8B5 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelect", 0)
    Goto DeathIndigo
  EViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 E 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("FSelectMain", 0)
    Goto DeathViolet
  FSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  FSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "FViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "FIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "FBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "FGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "FYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "FOrange")
    Goto FRed
  FRed:
    K8B0 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathRed
  FOrange:
    K8B1 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathOrange
  FYellow:
    K8B2 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathYellow
  FGreen:
    K8B3 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathGreen
  FBlue:
    K8B4 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathBlue
  FIndigo:
    K8B5 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelect", 0)
    Goto DeathIndigo
  FViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 F 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("GSelectMain", 0)
    Goto DeathViolet
  GSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  GSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "GViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "GIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "GBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "GGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "GYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "GOrange")
    Goto GRed
  GRed:
    K8B0 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathRed
  GOrange:
    K8B1 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathOrange
  GYellow:
    K8B2 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathYellow
  GGreen:
    K8B3 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathGreen
  GBlue:
    K8B4 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathBlue
  GIndigo:
    K8B5 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelect", 0)
    Goto DeathIndigo
  GViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 G 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("HSelectMain", 0)
    Goto DeathViolet
  HSelect:
    TNT1 A 0 A_GiveInventory ("RLKateMatterstormHarnessColorCounter", 1)
  HSelectMain:
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 6, "HViolet")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 5, "HIndigo")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 4, "HBlue")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 3, "HGreen")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 2, "HYellow")
    TNT1 A 0 A_JumpIfInventory ("RLKateMatterstormHarnessColorCounter", 1, "HOrange")
    Goto HRed
  HRed:
    K8B0 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathRed
  HOrange:
    K8B1 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathOrange
  HYellow:
    K8B2 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathYellow
  HGreen:
    K8B3 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathGreen
  HBlue:
    K8B4 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathBlue
  HIndigo:
    K8B5 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelect", 0)
    Goto DeathIndigo
  HViolet:
    TNT1 A 0 A_TakeInventory ("RLKateMatterstormHarnessColorCounter", 6)
    K8B6 H 1 Bright
    TNT1 A 0 A_JumpIfInTargetLOS ("ASelectMain", 0)
    Goto DeathViolet
  Bounce.Actor.Creature:
    K8B7 A 6 Bright A_PlaySound ("weapons/plasmashotgunspark", CHAN_WEAPON)
    Goto ASelectMain
  DeathRed:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B0 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B0 L 2 Bright A_SetScale (1.4, 1)
    K8B0 L 2 Bright A_SetScale (1.8, 1)
    K8B0 M 2 Bright A_SetScale (2.2, 1)
    K8B0 M 2 Bright A_SetScale (2.6, 1)
    K8B0 N 2 Bright A_SetScale (3.0, 1)
    K8B0 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathOrange:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B1 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B1 L 2 Bright A_SetScale (1.4, 1)
    K8B1 L 2 Bright A_SetScale (1.8, 1)
    K8B1 M 2 Bright A_SetScale (2.2, 1)
    K8B1 M 2 Bright A_SetScale (2.6, 1)
    K8B1 N 2 Bright A_SetScale (3.0, 1)
    K8B1 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathYellow:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B2 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B2 L 2 Bright A_SetScale (1.4, 1)
    K8B2 L 2 Bright A_SetScale (1.8, 1)
    K8B2 M 2 Bright A_SetScale (2.2, 1)
    K8B2 M 2 Bright A_SetScale (2.6, 1)
    K8B2 N 2 Bright A_SetScale (3.0, 1)
    K8B2 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathGreen:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B3 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B3 L 2 Bright A_SetScale (1.4, 1)
    K8B3 L 2 Bright A_SetScale (1.8, 1)
    K8B3 M 2 Bright A_SetScale (2.2, 1)
    K8B3 M 2 Bright A_SetScale (2.6, 1)
    K8B3 N 2 Bright A_SetScale (3.0, 1)
    K8B3 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathBlue:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B4 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B4 L 2 Bright A_SetScale (1.4, 1)
    K8B4 L 2 Bright A_SetScale (1.8, 1)
    K8B4 M 2 Bright A_SetScale (2.2, 1)
    K8B4 M 2 Bright A_SetScale (2.6, 1)
    K8B4 N 2 Bright A_SetScale (3.0, 1)
    K8B4 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathIndigo:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B5 IJK 4 Bright
    TNT1 A 0 A_Explode (1, 128, "None", 0, 128)
    K8B5 L 2 Bright A_SetScale (1.4, 1)
    K8B5 L 2 Bright A_SetScale (1.8, 1)
    K8B5 M 2 Bright A_SetScale (2.2, 1)
    K8B5 M 2 Bright A_SetScale (2.6, 1)
    K8B5 N 2 Bright A_SetScale (3.0, 1)
    K8B5 N 2 Bright A_SetScale (3.4, 1)
    Stop
  DeathViolet:
    TNT1 A 0 A_Stop
    TNT1 A 0 A_PlaySound ("misc/kateexplode", CHAN_WEAPON)
    TNT1 A 0 A_SetScale (1)
    TNT1 A 0 A_Explode (16, 96, "None")
    K8B6 IJK 4 Bright
    TNT1 A 0 A_Explode (128, 128, "None", 0, 128)
    K8B6 L 2 Bright A_SetScale (1.4, 1)
    K8B6 L 2 Bright A_SetScale (1.8, 1)
    K8B6 M 2 Bright A_SetScale (2.2, 1)
    K8B6 M 2 Bright A_SetScale (2.6, 1)
    K8B6 N 2 Bright A_SetScale (3.0, 1)
    K8B6 N 2 Bright A_SetScale (3.4, 1)
    Stop
  }
}

Actor RLKateMatterstormHarnessColorCounter : Inventory
{
inventory.maxamount 6
}

ACTOR RLZeroDiamondAssaultforceArmorAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
  FiringLoop:
	TNT1 A 0 A_JumpIfInventory ("RLZeroDiamondAssaultforceArmorCounter", 80, "Finish")
	TNT1 A 0 A_PlaySound ("misc/assaultforcearmorminigun", CHAN_VOICE, 1, 1, 0.7)
	TNT1 A 0 A_GiveToTarget ("RLZeroDiamondAssaultforceArmorFiringToken", 1)
	TNT1 A 0 A_GiveInventory ("RLZeroDiamondAssaultforceArmorCounter", 1)
    TNT1 A 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	Goto FiringLoop
  Finish:
	TNT1 A 0 A_StopSound (CHAN_VOICE)
	TNT1 A 0 A_TakeFromTarget ("RLZeroDiamondAssaultforceArmorCounter", 80)
	TNT1 A 0 A_PlaySound ("weapons/minigunwinddown", CHAN_VOICE)
	Stop
	}
}

ACTOR RLZeroDiamondAssaultforceArmorFiringToken : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_FireBullets (6, 2, -1, 5, "RLBulletPuff", FBF_NOFLASH)
	TNT1 A 0 A_GiveInventory ("RLZeroDiamondAssaultforceArmorCounter", 1)
    Stop
  }
}

Actor RLZeroDiamondAssaultforceArmorCounter : Inventory
{
inventory.maxamount 80
}

ACTOR RLKyleTeslaboltArmorAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
  FiringLoop:
	TNT1 A 0 A_JumpIfInventory ("RLKyleTeslaboltArmorCounter", 105, "Finish")
	TNT1 A 0 A_PlaySound ("misc/kyleteslaboltloop", CHAN_VOICE, 1, 1, 0.7)
	TNT1 A 0 A_GiveToTarget ("RLKyleTeslaboltArmorFiringToken", 1)
	TNT1 A 0 A_GiveInventory ("RLKyleTeslaboltArmorCounter", 1)
    TNT1 A 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	Goto FiringLoop
  Finish:
	TNT1 A 0 A_StopSound (CHAN_VOICE)
	TNT1 A 0 A_TakeFromTarget ("RLKyleTeslaboltArmorCounter", 105)
	TNT1 A 0 A_StopSound (CHAN_VOICE)
	Stop
	}
}

ACTOR RLKyleTeslaboltArmorFiringToken : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_RailAttack ((7*random(1,3)), 0, 0, "none", White, RGF_SILENT | RGF_FULLBRIGHT, 50, "RLKyleTeslaboltPuff", 0, 0, 0, 1, 0.75, 0, "none", -5)
	TNT1 A 0 A_GiveInventory ("RLKyleTeslaboltArmorCounter", 1)
    Stop
  }
}

ACTOR RLKyleTeslaboltPuff : BulletPuff
{
  -ALLOWPARTICLES
  -RANDOMIZE
  +PUFFONACTORS
  +ALWAYSPUFF
  +PUFFGETSOWNER
  +THRUGHOST
  +BLOODLESSIMPACT
  VSpeed 0
  Mass 5
  Damagetype "Plasma"
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_PlaySound("weapons/nullfieldwall", CHAN_BODY, 1, 0, 1.4)
	Stop
  Melee:
    Goto Spawn
  }
}

Actor RLKyleTeslaboltArmorCounter : Inventory
{
inventory.maxamount 105
}

ACTOR PowerRLRyanCordellPsychicAttack : PowerFrightener
{
  Powerup.Duration -20
  Powerup.Color Yellow, 0.15
}

ACTOR RLRyanCordellPsychicConversion : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_Jump (240, 3)
	TNT1 A 0 A_Changeflag ("FRIENDLY", 1)
	TNT1 A 0 A_SpawnItemEx ("RLSoulshatterArmorWave", 1, 0, 30, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
    Stop
	TNT1 A 0
    Stop
  }
}

ACTOR PowerRLTerminusAttack : Powerup
{
	Powerup.Duration 12
}

Actor RLTerminusMissile
{
  Radius 8
  Height 12
  Speed 24
  Damage 10
  DamageType "Fire"
  Scale 1.0
  Projectile
  RenderStyle Normal
  +THRUGHOST
  SeeSound "weapons/microlauncher"
  DeathSound "weapons/smallexp"
  Decal "Scorch"
  States
  {
  Spawn: 
    TEBM A 1 Bright
    TEBM A 1 Bright A_SpawnItemEx("RLTerminusMissileTrail",0,0,0,0,0,0,0,128)
    Loop
  Death:
    TNT1 A 0 A_SetTranslucent(0.67,1)
    TNT1 A 0 A_Explode(96,64)
    MISL B 6 Bright
    MISL C 6 Bright
    MISL D 6 Bright
    Stop
  }
}

Actor RLTerminusMissileTrail
{   
  Radius 3
  Height 3
  RenderStyle Translucent
  Alpha 0.67
  Projectile
  States
  {
  Spawn:
    TNT1 A 3
    PUFF ABCD 4 Bright
    Stop 
  }
}

Actor RLRoystenLevelCooldown : Inventory
{
Inventory.InterHubAmount 0
inventory.maxamount 1
}

actor PowerRLSoloDamage : PowerDamage
{
   damagefactor "Normal", 4
   inventory.icon ""
   Powerup.Duration -5
}

ACTOR PowerRLSoloInvisibility : PowerInvisibility
{
  +SHADOW
  +CANTSEEK
  Powerup.Duration -10
  Powerup.Strength 100
  Powerup.Mode "Translucent"
}

ACTOR RLSoloTargetClearer : CustomInventory
{
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_ClearTarget
    Stop
  }
}

ACTOR RLTorgueExplosionMaker
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_BFGSpray("RLTorgueExplosion", 40, 1)
	Stop
	}
}

ACTOR RLTorgueExplosion : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1.5
   DamageType "Fire"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_Explode (256, 128, "None", 1, 128)
    TNT1 A 0 A_PlaySound("weapons/torgueexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

actor PowerRLTorgueExplosionProtection : PowerProtection
{
   damagefactor "Fire", 0
   inventory.icon ""
   Powerup.Duration 2
   +INVENTORY.PERSISTENTPOWER
}

actor RLFrontlineEngineerSentryMarine
{
  obituary "%o was betrayed by a little sentry gun."
  health 250
  radius 16
  height 56
  mass 1000000
  speed 0
  MaxTargetRange 2048
  MONSTER
  +FLOORCLIP
  +FRIENDLY
  +NOBLOOD
  +LOOKALLAROUND
  +NEVERRESPAWN
  +PUSHABLE
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_ClearTarget
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryStartupToken", 1, 5)
    TNT1 A 0 A_PlaySound ("rlsentry/deploy", CHAN_BODY)
    TNT1 A 0 A_GiveInventory ("RLSentryLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryCountdown", 1)
    TNT1 A 0 A_StopSound (7)
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    SENT A 1 A_LookEx (LOF_NOSOUNDCHECK, 0, 2048, 0, 360, "Idle")
    Loop
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    SENT A 0 A_LookEx (LOF_NOSOUNDCHECK | LOF_NOJUMP, 0, 2048, 0, 360, "Idle")
    SENT A 1 A_JumpIfTargetInLOS ("TargetAcquired", 0, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35, "Reset")
    Loop
  Reset:
	TNT1 A 0 A_ClearTarget
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    Goto Spawn
  TargetAcquired:
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    TNT1 A 0 A_PlaySound ("rlsentry/tracking", 7, 1, 1)
    SENT A 1 A_FaceTarget (5, 5)
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck1", 5, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 70, "Reset")
    Goto TargetAcquired+2
  FiringCheck1:
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 0, JLOSF_DEADNOJUMP | JLOSF_ALLYNOJUMP)
    Goto Spawn
  FiringCheck2:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_CheckLOF ("Firing", CLOFF_JUMPENEMY, 2048)
    Goto NoFire
  Firing:
    TNT1 A 0 A_PlaySound("weapons/chaingun", CHAN_WEAPON)
    SENT B 2 Bright A_CustomBulletAttack (6, 2, 1, random(1,5) * 3, "RLBulletPuff", 0, CBAF_NORANDOM)
    SENT A 2 A_MonsterRefire (0, "Spawn") 
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  NoFire:
    SENT A 4
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_TakeInventory ("RLSentryLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRLSentryCooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 48)
    SENT C 512
  FadeOut:
    SENT C 2 A_FadeOut (0.1)
    loop
  }
}

actor RLFrontlineEngineerSentryScout : RLFrontlineEngineerSentryMarine
{
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_ClearTarget
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryStartupToken", 1, 5)
    TNT1 A 0 A_PlaySound ("rlsentry/deploy", CHAN_BODY)
    TNT1 A 0 A_GiveInventory ("RLSentryLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryCountdown", 1)
    TNT1 A 0 A_StopSound (7)
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    SENT D 1 A_LookEx (LOF_NOSOUNDCHECK, 0, 2048, 0, 360, "Idle")
    Loop
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    TNT1 A 0 A_LookEx (LOF_NOSOUNDCHECK | LOF_NOJUMP, 0, 2048, 0, 360, "Idle")
    SENT D 1 A_JumpIfTargetInLOS ("TargetAcquired", 0, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35, "Reset")
    Loop
  Reset:
	TNT1 A 0 A_ClearTarget
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    Goto Spawn
  TargetAcquired:
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    TNT1 A 0 A_PlaySound ("rlsentry/tracking", 7, 1, 1)
    SENT D 1 A_FaceTarget (5, 5)
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck1", 5, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 70, "Reset")
    Goto TargetAcquired+2
  FiringCheck1:
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 0, JLOSF_DEADNOJUMP | JLOSF_ALLYNOJUMP)
    Goto Spawn
  FiringCheck2:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_CheckLOF ("Firing", CLOFF_JUMPENEMY, 2048)
    Goto NoFire
  Firing:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryScoutCooldown", 1, "NoFire")
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryScoutCooldown", 1)
    TNT1 A 0 A_PlaySound("weapons/elephantgun", CHAN_WEAPON)
    SENT E 6 Bright A_CustomBulletAttack (1, 0, 1, random(1,5) * 10, "RLBulletPuff", 0, CBAF_NORANDOM)
    SENT D 10
    SENT D 2 A_MonsterRefire (0, "Spawn") 
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  NoFire:
    SENT D 1
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_TakeInventory ("RLSentryLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRLSentryCooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 48)
    SENT C 512
  FadeOut:
    SENT C 2 A_FadeOut (0.1)
    loop
  }
}

actor RLFrontlineEngineerSentryRenegade : RLFrontlineEngineerSentryMarine
{
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_ClearTarget
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryStartupToken", 1, 5)
    TNT1 A 0 A_PlaySound ("rlsentry/deploy", CHAN_BODY)
    TNT1 A 0 A_GiveInventory ("RLSentryLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryCountdown", 1)
    TNT1 A 0 A_StopSound (7)
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    SENT F 1 A_LookEx (LOF_NOSOUNDCHECK, 0, 2048, 0, 360, "Idle")
    Loop
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    TNT1 A 0 A_LookEx (LOF_NOSOUNDCHECK | LOF_NOJUMP, 0, 2048, 0, 360, "Idle")
    SENT F 1 A_JumpIfTargetInLOS ("TargetAcquired", 0, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35, "Reset")
    Loop
  Reset:
	TNT1 A 0 A_ClearTarget
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    Goto Spawn
  TargetAcquired:
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    TNT1 A 0 A_PlaySound ("rlsentry/tracking", 7, 1, 1)
    SENT F 1 A_FaceTarget (5, 5)
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck1", 5, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 70, "Reset")
    Goto TargetAcquired+2
  FiringCheck1:
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 0, JLOSF_DEADNOJUMP | JLOSF_ALLYNOJUMP)
    Goto Spawn
  FiringCheck2:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_CheckLOF ("Firing", CLOFF_JUMPENEMY, 2048)
    Goto NoFire
  Firing:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryRenegadeCooldown", 1, "NoFire")
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryRenegadeCooldown", 1)
    TNT1 A 0 A_PlaySound("weapons/sshotf", CHAN_WEAPON)
    SENT G 3 Bright A_CustomBulletAttack (14, 6, 14, random(1,5) * 3, "RLBulletPuff", 0, CBAF_NORANDOM)
    SENT F 5
    SENT F 2 A_MonsterRefire (0, "Spawn") 
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  NoFire:
    SENT F 1
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_TakeInventory ("RLSentryLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRLSentryCooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 48)
    SENT C 512
  FadeOut:
    SENT C 2 A_FadeOut (0.1)
    loop
  }
}

actor RLFrontlineEngineerSentryTechnician : RLFrontlineEngineerSentryMarine
{
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_ClearTarget
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryStartupToken", 1, 5)
    TNT1 A 0 A_PlaySound ("rlsentry/deploy", CHAN_BODY)
    TNT1 A 0 A_GiveInventory ("RLSentryLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLFrontlineEngineerSentryCountdown", 1)
    TNT1 A 0 A_StopSound (7)
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    SENT H 1 A_LookEx (LOF_NOSOUNDCHECK, 0, 2048, 0, 360, "Idle")
    Loop
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLFrontlineEngineerSentryCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_PlaySound ("rlsentry/loop", 6, 1, 1, 1.3)
    TNT1 A 0 A_LookEx (LOF_NOSOUNDCHECK | LOF_NOJUMP, 0, 2048, 0, 360, "Idle")
    SENT H 1 A_JumpIfTargetInLOS ("TargetAcquired", 0, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35, "Reset")
    Loop
  Reset:
	TNT1 A 0 A_ClearTarget
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    Goto Spawn
  TargetAcquired:
    TNT1 A 0 A_TakeInventory ("RLFrontlineEngineerSentryRetargetCountdown", 35)
    TNT1 A 0 A_PlaySound ("rlsentry/tracking", 7, 1, 1)
    SENT H 1 A_FaceTarget (5, 5)
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck1", 5, JLOSF_ALLYNOJUMP)
    TNT1 A 0 A_GiveInventory ("RLFrontlineEngineerSentryRetargetCountdown", 1)
	TNT1 A 0 A_JumpIfInventory ("RLFrontlineEngineerSentryRetargetCountdown", 70, "Reset")
    Goto TargetAcquired+2
  FiringCheck1:
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 0, JLOSF_DEADNOJUMP | JLOSF_ALLYNOJUMP)
    Goto Spawn
  FiringCheck2:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_CheckLOF ("Firing", CLOFF_JUMPENEMY, 2048)
    Goto NoFire
  Firing:
    SENT I 2 Bright A_CustomMissile("RLFrontlineEngineerSentryTechnicianPlasmaBall",36,0)
    SENT H 1 A_MonsterRefire (0, "Spawn") 
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  NoFire:
    SENT H 4
    TNT1 A 0 A_JumpIfTargetInLOS ("FiringCheck2", 5, JLOSF_ALLYNOJUMP)
    Goto FiringCheck1
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_TakeInventory ("RLSentryLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRLSentryCooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosionPlasma", 0, 48)
    SENT C 512
  FadeOut:
    SENT C 2 A_FadeOut (0.1)
    loop
  }
}

ACTOR RLFrontlineEngineerSentryTechnicianPlasmaBall : PlasmaBall
{
   +THRUGHOST
   Decal "PlasmaScorch"
   DamageType "Plasma"
   Damage 4
}

ACTOR RLConstructedObjectExplosion : RLEnergyDischargeHarnessBlast1Fire
{
   Scale 1
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    MISL B 8 Bright
    MISL C 6 Bright
    MISL D 4 Bright
    Stop
  }
}

ACTOR RLConstructedObjectExplosionPlasma : RLConstructedObjectExplosion
{
   Scale 1
   DamageType "Plasma"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_PlaySound("weapons/smallexp", CHAN_WEAPON)
    IXPL A 8 Bright
    IXPL B 6 Bright
    IXPL C 4 Bright
    Stop
  }
}

ACTOR PowerRLFrontlineEngineerSentryCountdown : Powerup
{
	Powerup.Duration -120
}

ACTOR PowerRLFrontlineEngineerSentryScoutCooldown : Powerup
{
	Powerup.Duration 25
}

ACTOR PowerRLFrontlineEngineerSentryRenegadeCooldown : Powerup
{
	Powerup.Duration 35
}

Actor RLSentryLimit : Inventory
{
Inventory.InterHubAmount 0
inventory.maxamount 2
}

Actor RLFrontlineEngineerSentryStartupToken : Inventory
{
inventory.maxamount 1
}

Actor RLFrontlineEngineerSentryRetargetCountdown : Inventory
{
inventory.maxamount 70
}

actor RLTacticalAssemblerRestorer
{
  obituary "%o hugged the restorer and died because reasons."
  health 600
  radius 20
  height 48
  mass 1000000
  speed 0
  MONSTER
  +FLOORCLIP
  +FRIENDLY
  +NOBLOOD
  +LOOKALLAROUND
  +NEVERRESPAWN
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_JumpIfInventory ("RLTacticalAssemblerRestorerStartupToken", 1, "Idle")
    TNT1 A 0 A_GiveInventory ("RLRestorerLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLTacticalAssemblerRestorerStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLTacticalAssemblerRestorerCountdown", 1)
	Goto Idle
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLTacticalAssemblerRestorerCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlrestorer/loop", 6, 1, 1, 1.1)
    TNT1 A 0 A_PlaySound ("rlrestorer/pulseloop", 7, 0.8, 1, 1.5)
    RSTR ABCABCAB 3 Bright
    TNT1 A 0 A_RadiusGive ("Health", 256, RGF_PLAYERS, 2)
    RSTR D 3 Bright
    Loop
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_TakeInventory ("RLRestorerLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRL120Cooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 32)
    TNT1 A 512
    Stop
  }
}

actor RLTacticalAssemblerRestorer2 : RLTacticalAssemblerRestorer
{
  health 800
  states
  {
  Spawn:
    TNT1 A 0
	TNT1 A 0 A_JumpIfInventory ("RLTacticalAssemblerRestorerStartupToken", 1, "Idle")
    TNT1 A 0 A_GiveInventory ("RLRestorerLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("RLTacticalAssemblerRestorerStartupToken", 1)
    TNT1 A 0 A_GiveInventory ("PowerRLTacticalAssemblerRestorerCountdown", 1)
	Goto Idle
  Idle:
	TNT1 A 0 A_JumpIfInventory ("PowerRLTacticalAssemblerRestorerCountdown", 1, 1)
    Goto DeathTimer
    TNT1 A 0 A_PlaySound ("rlrestorer/loop", 6, 1, 1, 1.1)
    TNT1 A 0 A_PlaySound ("rlrestorer/pulseloop", 7, 0.8, 1, 1.5)
    RSTR EFGEFGEF 3 Bright
    TNT1 A 0 A_RadiusGive ("Health", 256, RGF_PLAYERS, 5)
    TNT1 A 0 A_RadiusGive ("RLRestorerArmorRepair", 256, RGF_PLAYERS, 1)
    RSTR H 3 Bright
    Loop
  DeathTimer:
    TNT1 A 0 A_Die
    Goto Death
  Death:
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_TakeInventory ("RLRestorerLimit", 1, "None", AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRL120Cooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 32)
    TNT1 A 512
    Stop
  }
}

actor RLTacticalAssemblerRestorerTechnician : RLTacticalAssemblerRestorer
{
  states
  {
  Death:
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_TakeInventory ("RLRestorerLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRL60Cooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 32)
    TNT1 A 512
    Stop
  }
}

actor RLTacticalAssemblerRestorer2Technician : RLTacticalAssemblerRestorer
{
  health 800
  states
  {
  Death:
    TNT1 A 0 A_StopSound (6)
    TNT1 A 0 A_StopSound (7)
    TNT1 A 0 A_TakeInventory ("RLRestorerLimit", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_GiveInventory ("PowerRL60Cooldown", 1, AAPTR_FRIENDPLAYER)
    TNT1 A 0 A_SpawnItem ("RLConstructedObjectExplosion", 0, 32)
    TNT1 A 512
    Stop
  }
}

ACTOR PowerRLTacticalAssemblerRestorerCountdown : Powerup
{
	Powerup.Duration -120
}

Actor RLRestorerLimit : Inventory
{
Inventory.InterHubAmount 0
inventory.maxamount 1
}

Actor RLTacticalAssemblerRestorerStartupToken : Inventory
{
inventory.maxamount 1
}

ACTOR RLChronotrooperArmorAnimator
{
  Radius 5
  Height 5
  Projectile
  +NOGRAVITY
  +NOTELEPORT
  +THRUACTORS
  +NOTIMEFREEZE
  +NOEXPLODEFLOOR
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 0 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	TNT1 A 0 A_GiveToTarget ("RLChronotrooperArmorSoundActivate", 1)
  FiringLoop:
	TNT1 A 0 A_JumpIfInTargetInventory ("PowerRLChronotrooperFreeze", 1, 1)
	Goto Finish
    TNT1 A 1 A_Warp (AAPTR_TARGET, 1, 0, 20, 0, WARPF_NOCHECKPOSITION | WARPF_INTERPOLATE)
	Goto FiringLoop
  Finish:
	TNT1 A 0 A_GiveToTarget ("RLChronotrooperArmorSoundDeactivate", 1)
	Stop
	}
}

ACTOR RLChronotrooperArmorSoundActivate : CustomInventory
{
  -COUNTITEM
  +NOTIMEFREEZE
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0
    TNT1 A 0 A_PlaySound("misc/chronotrooperarmor", CHAN_VOICE | CHAN_NOPAUSE, 1, 1, 0.1)
    Stop
  }
}

ACTOR RLChronotrooperArmorSoundDeactivate : CustomInventory
{
  -COUNTITEM
  +NOTIMEFREEZE
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage ""
  Inventory.PickupSound ""
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Pickup:
    TNT1 A 0 
	TNT1 A 0 A_PlaySound("misc/chronotrooperarmorstop", CHAN_VOICE | CHAN_NOPAUSE, 1, 0, 0.1)
    Stop
  }
}

ACTOR PowerRLChronotrooperFreeze : PowerTimeFreezer
{
  Powerup.Duration -10
}

//-------------------------------------------------------------------
//		ARMOR MOD

ACTOR RLArmorModItem : CustomInventory 16509
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Armor Modpack"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "AMK1I0"
    Inventory.Pickupmessage "You picked up an Armor Mod Pack."
    Inventory.Pickupsound "misc/i_pkup"
    Inventory.UseSound "weapons/assembly"
	States
	{
	Spawn:
		AMK1 ABCDDDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemInInventory",1,"NoPickup") // If the player is carrying an Armor Mod already, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorModItemInInventory",1)
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_Print("\c-Press AltFire to configure this modpack into \chCombat \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Confirm:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1,"Activate")
		TNT1 A 0 A_Print("Activate this mod again to alter your currently held inventory armor to a \cdSecurity variant.\n\c-Press AltFire to configure this modpack into \chCombat \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Activate:
		TNT1 A 0 A_JumpIfInventory("RLBlueArmorPickup",1,"BlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLRedArmorPickup",1,"RedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticBlueArmorPickup",1,"BallisticBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticRedArmorPickup",1,"BallisticRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoBlueArmorPickup",1,"CybernanoBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoRedArmorPickup",1,"CybernanoRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofBlueArmorPickup",1,"FireproofBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofRedArmorPickup",1,"FireproofRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerBlueArmorPickup",1,"PowerBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerRedArmorPickup",1,"PowerRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberBlueArmorPickup",1,"NanofiberBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberRedArmorPickup",1,"NanofiberRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinBlueArmorPickup",1,"NanofiberSkinBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinRedArmorPickup",1,"NanofiberSkinRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModBlueArmorPickup",1,"OModBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModRedArmorPickup",1,"OModRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeBlueArmorPickup",1,"AblativeBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeRedArmorPickup",1,"AblativeRedArmorConfigure")
		TNT1 A 0 A_Print("This armor cannot be altered.")
		Fail
	BlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chCombat Armor \c-reconfigured into \cdSecurity Armor.")
		Stop
	RedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgCommando Armor \c-reconfigured into \cdSecurity Armor.")
		Stop
	BallisticBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chBallistic Combat Armor \c-reconfigured into \cdBallistic Security Armor.")
		Stop
	BallisticRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgBallistic Commando Armor \c-reconfigured into \cdBallistic Security Armor.")
		Stop
	CybernanoBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chCybernano Combat Armor \c-reconfigured into \cdCybernano Security Armor.")
		Stop
	CybernanoRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgCybernano Commando Armor \c-reconfigured into \cdCybernano Security Armor.")
		Stop
	FireproofBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chFireproof Combat Armor \c-reconfigured into \cdFireproof Security Armor.")
		Stop
	FireproofRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgFireproof Commando Armor \c-reconfigured into \cdFireproof Security Armor.")
		Stop
	PowerBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chPowered Combat Armor \c-reconfigured into \cdPowered Security Armor.")
		Stop
	PowerRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgPowered Commando Armor \c-reconfigured into \cdPowered Security Armor.")
		Stop
	NanofiberBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chNanofiber Combat Armor \c-reconfigured into \cdNanofiber Security Armor.")
		Stop
	NanofiberRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgNanofiber Commando Armor \c-reconfigured into \cdNanofiber Security Armor.")
		Stop
	NanofiberSkinBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chNanofiber Skin Combat Armor \c-reconfigured into \cdNanofiber Skin Security Armor.")
		Stop
	NanofiberSkinRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgNanofiber Skin Commando Armor \c-reconfigured into \cdNanofiber Skin Security Armor.")
		Stop
	OModBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chCombat Armor \c-reconfigured into \cdSecurity Armor.")
		Stop
	OModRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgCommando Armor \c-reconfigured into \cdSecurity Armor.")
		Stop
	AblativeBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLAblativeBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLAblativeGreenArmorPickup",1)
		TNT1 A 0 A_Print("\chAblative Combat Armor \c-reconfigured into \cdAblative Security Armor.")
		Stop
	AblativeRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmorPickup",1)
		TNT1 A 0 A_Print("\cgAblative Commando Armor \c-reconfigured into \cdAblative Security Armor.")
		Stop
	NoPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
		TNT1 A 0 A_Print("You are already carrying an Armor Modpack.", 2)
	NoPickup_NoPrint:
		TNT1 A 0
		Fail
	}
}

ACTOR RLArmorModItemBlue : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Armor Modpack"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "AMK2I0"
    Inventory.Pickupmessage "You picked up an Armor Mod Pack."
    Inventory.Pickupsound "misc/i_pkup"
    Inventory.UseSound "weapons/assembly"
	States
	{
	Spawn:
		AMK2 ABCDDDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemInInventory",1,"NoPickup") // If the player is carrying an Armor Mod already, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorModItemInInventory",1)
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeRedArmorPickup",1,"Confirm")
		TNT1 A 0 A_Print("\c-Press AltFire to configure this modpack into \cgCommando \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Confirm:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1,"Activate")
		TNT1 A 0 A_Print("Activate this mod again to alter your currently held inventory armor to a \chCombat variant.\n\c-Press AltFire to configure this modpack into \cgCommando \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Activate:
		TNT1 A 0 A_JumpIfInventory("RLGreenArmorPickup",1,"GreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLRedArmorPickup",1,"RedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticGreenArmorPickup",1,"BallisticGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticRedArmorPickup",1,"BallisticRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoGreenArmorPickup",1,"CybernanoGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoRedArmorPickup",1,"CybernanoRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofGreenArmorPickup",1,"FireproofGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofRedArmorPickup",1,"FireproofRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerGreenArmorPickup",1,"PowerGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerRedArmorPickup",1,"PowerRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberGreenArmorPickup",1,"NanofiberGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberRedArmorPickup",1,"NanofiberRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinGreenArmorPickup",1,"NanofiberSkinGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinRedArmorPickup",1,"NanofiberSkinRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModGreenArmorPickup",1,"OModGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModRedArmorPickup",1,"OModRedArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeGreenArmorPickup",1,"AblativeGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeRedArmorPickup",1,"AblativeRedArmorConfigure")
		TNT1 A 0 A_Print("This armor cannot be altered.")
		Fail
	GreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdSecurity Armor \c-reconfigured into \chCombat Armor.")
		Stop
	RedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgCommando Armor \c-reconfigured into \chCombat Armor.")
		Stop
	BallisticGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdBallistic Security Armor \c-reconfigured into \chBallistic Combat Armor.")
		Stop
	BallisticRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgBallistic Commando Armor \c-reconfigured into \chBallistic Combat Armor.")
		Stop
	CybernanoGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdCybernano Security Armor \c-reconfigured into \chCybernano Combat Armor.")
		Stop
	CybernanoRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgCybernano Commando Armor \c-reconfigured into \chCybernano Combat Armor.")
		Stop
	FireproofGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdFireproof Security Armor \c-reconfigured into \chFireproof Combat Armor.")
		Stop
	FireproofRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgFireproof Commando Armor \c-reconfigured into \chFireproof Combat Armor.")
		Stop
	PowerGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdPowered Security Armor \c-reconfigured into \chPowered Combat Armor.")
		Stop
	PowerRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgPowered Commando Armor \c-reconfigured into \chPowered Combat Armor.")
		Stop
	NanofiberGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdNanofiber Security Armor \c-reconfigured into \chNanofiber Combat Armor.")
		Stop
	NanofiberRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgNanofiber Commando Armor \c-reconfigured into \chNanofiber Combat Armor.")
		Stop
	NanofiberSkinGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdNanofiber Skin Security Armor \c-reconfigured into \chNanofiber Skin Combat Armor.")
		Stop
	NanofiberSkinRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgNanofiber Skin Commando Armor \c-reconfigured into \chNanofiber Skin Combat Armor.")
		Stop
	OModGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdSecurity Armor \c-reconfigured into \chCombat Armor.")
		Stop
	OModRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgCommando Armor \c-reconfigured into \chCombat Armor.")
		Stop
	AblativeGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLAblativeGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLAblativeBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cdAblative Security Armor \c-reconfigured into \chAblative Combat Armor.")
		Stop
	AblativeRedArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLAblativeRedArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLAblativeBlueArmorPickup",1)
		TNT1 A 0 A_Print("\cgAblative Commando Armor \c-reconfigured into \chAblative Combat Armor.")
		Stop
	NoPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
		TNT1 A 0 A_Print("You are already carrying an Armor Modpack.", 2)
	NoPickup_NoPrint:
		TNT1 A 0
		Fail
	}
}


ACTOR RLArmorModItemRed : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Armor Modpack"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "AMK3I0"
    Inventory.Pickupmessage "You picked up an Armor Mod Pack."
    Inventory.Pickupsound "misc/i_pkup"
    Inventory.UseSound "weapons/assembly"
	States
	{
	Spawn:
		AMK3 ABCDDDCB 3 Bright
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemInInventory",1,"NoPickup") // If the player is carrying an Armor Mod already, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorModItemInInventory",1)
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLBallisticGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLFireproofGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLPowerGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLOModGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeBlueArmorPickup",1,"Confirm")
		TNT1 A 0 A_JumpIfInventory("RLAblativeGreenArmorPickup",1,"Confirm")
		TNT1 A 0 A_Print("\c-Press AltFire to configure this modpack into \cdSecurity \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Confirm:
		TNT1 A 0 A_JumpIfInventory("RLArmorModItemActivate",1,"Activate")
		TNT1 A 0 A_Print("Activate this mod again to alter your currently held inventory armor to a \cgCommando variant.\n\c-Press AltFire to configure this modpack into \cdSecurity \c-mode.\nPress Drop Item to drop this modpack.\nSwitch weapons to cancel.", 8)
		TNT1 A 0 A_GiveInventory("RLArmorModItemActivate",1)
		Fail
	Activate:
		TNT1 A 0 A_JumpIfInventory("RLBlueArmorPickup",1,"BlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLGreenArmorPickup",1,"GreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticBlueArmorPickup",1,"BallisticBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLBallisticGreenArmorPickup",1,"BallisticGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoBlueArmorPickup",1,"CybernanoBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLCybernanoGreenArmorPickup",1,"CybernanoGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofBlueArmorPickup",1,"FireproofBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLFireproofGreenArmorPickup",1,"FireproofGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerBlueArmorPickup",1,"PowerBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLPowerGreenArmorPickup",1,"PowerGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberBlueArmorPickup",1,"NanofiberBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberGreenArmorPickup",1,"NanofiberGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinBlueArmorPickup",1,"NanofiberSkinBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLNanofiberSkinGreenArmorPickup",1,"NanofiberSkinGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModBlueArmorPickup",1,"OModBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLOModGreenArmorPickup",1,"OModGreenArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeBlueArmorPickup",1,"AblativeBlueArmorConfigure")
		TNT1 A 0 A_JumpIfInventory("RLAblativeGreenArmorPickup",1,"AblativeGreenArmorConfigure")
		TNT1 A 0 A_Print("This armor cannot be altered.")
		Fail
	BlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLRedArmorPickup",1)
		TNT1 A 0 A_Print("\chCombat Armor \c-reconfigured into \cgCommando Armor.")
		Stop
	GreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdSecurity Armor \c-reconfigured into \cgCommando Armor.")
		Stop
	BallisticBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticRedArmorPickup",1)
		TNT1 A 0 A_Print("\chBallistic Combat Armor \c-reconfigured into \cgBallistic Commando Armor.")
		Stop
	BallisticGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLBallisticGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLBallisticRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdBallistic Security Armor \c-reconfigured into \cgBallistic Commando Armor.")
		Stop
	CybernanoBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoRedArmorPickup",1)
		TNT1 A 0 A_Print("\chCybernano Combat Armor \c-reconfigured into \cgCybernano Commando Armor.")
		Stop
	CybernanoGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLCybernanoGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdCybernano Security Armor \c-reconfigured into \cgCybernano Commando Armor.")
		Stop
	FireproofBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofRedArmorPickup",1)
		TNT1 A 0 A_Print("\chFireproof Combat Armor \c-reconfigured into \cgFireproof Commando Armor.")
		Stop
	FireproofGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLFireproofGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLFireproofRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdFireproof Security Armor \c-reconfigured into \cgFireproof Commando Armor.")
		Stop
	PowerBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerRedArmorPickup",1)
		TNT1 A 0 A_Print("\chPowered Combat Armor \c-reconfigured into \cgPowered Commando Armor.")
		Stop
	PowerGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLPowerGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLPowerRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdPowered Security Armor \c-reconfigured into \cgPowered Commando Armor.")
		Stop
	NanofiberBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmorPickup",1)
		TNT1 A 0 A_Print("\chNanofiber Combat Armor \c-reconfigured into \cgNanofiber Commando Armor.")
		Stop
	NanofiberGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdNanofiber Security Armor \c-reconfigured into \cgNanofiber Commando Armor.")
		Stop
	NanofiberSkinBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinRedArmorPickup",1)
		TNT1 A 0 A_Print("\chNanofiber Skin Combat Armor \c-reconfigured into \cgNanofiber Skin Commando Armor.")
		Stop
	NanofiberSkinGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLNanofiberSkinGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdNanofiber Skin Security Armor \c-reconfigured into \cgNanofiber Skin Commando Armor.")
		Stop
	OModBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModRedArmorPickup",1)
		TNT1 A 0 A_Print("\chCombat Armor \c-reconfigured into \cgCommando Armor.")
		Stop
	OModGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLOModGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLOModRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdSecurity Armor \c-reconfigured into \cgCommando Armor.")
		Stop
	AblativeBlueArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLAblativeBlueArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLAblativeRedArmorPickup",1)
		TNT1 A 0 A_Print("\chAblative Combat Armor \c-reconfigured into \cgAblative Commando Armor.")
		Stop
	AblativeGreenArmorConfigure:
		TNT1 A 0 A_TakeInventory("RLArmorModItemActivate",1)
		TNT1 A 0 A_TakeInventory("RLArmorModItemInInventory",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_TakeInventory("RLAblativeGreenArmorPickup",1)
		TNT1 A 0 A_GiveInventory("RLAblativeRedArmorPickup",1)
		TNT1 A 0 A_Print("\cdAblative Security Armor \c-reconfigured into \cgAblative Commando Armor.")
		Stop
	NoPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ModsAntiLogFloodCheck",1,"NoPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ModsAntiLogFloodCheck")
		TNT1 A 0 A_Print("You are already carrying an Armor Modpack.", 2)
	NoPickup_NoPrint:
		TNT1 A 0
		Fail
	}
}

ACTOR DroppedRLArmorModItem
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		AMK1 ABCDDDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLArmorModItem",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLArmorModItemBlue : DroppedRLArmorModItem
{
	States
	{
	Spawn:
		AMK2 ABCDDDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLArmorModItemBlue",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLArmorModItemRed : DroppedRLArmorModItem
{
	States
	{
	Spawn:
		AMK3 ABCDDDCB 3 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLArmorModItemRed",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		STANDARD ARMORS

ACTOR RLGreenArmor : GreenArmor
{
  Inventory.Pickupmessage "Picked up the security armor."
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.85
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLGreenArmorRenegade : RLGreenArmor
{
  Armor.Savepercent 15
}

ACTOR RLGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ARM1I0"
    Inventory.Pickupmessage "Picked up the security armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		ARM1 A 6
		ARM1 B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cjSecurity Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLGreenArmorToken",1)
		TNT1 A 0 A_Print("\cjSecurity Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cj= Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLGreenArmor
{
	PROJECTILE
	-NOGRAVITY
	Damage 0
	Radius 16
	Height 8
	Speed 9
	DeathSound "weapons/gundrop"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ARM1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLBlueArmor : BlueArmor
{
  Inventory.Pickupmessage "Picked up the combat armor."
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Plasma", 0.8
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLBlueArmorRenegade : RLBlueArmor
{
  Armor.Savepercent 30
}

ACTOR RLBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ARM2I0"
    Inventory.Pickupmessage "Picked up the combat armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		ARM2 A 6
		ARM2 B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cjCombat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBlueArmorToken",1)
		TNT1 A 0 A_Print("\cjCombat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cj= Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ARM2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the commando armor."
  Inventory.Icon "HEVAB0"
  Armor.Savepercent 40
  Armor.Saveamount 100
  DamageFactor "Fire", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLRedArmorRenegade : RLRedArmor
{
  Armor.Savepercent 60
}

ACTOR RLRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "HEVAI0"
    Inventory.Pickupmessage "Picked up the commando armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		HEVA A 6
		HEVA B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cjCommando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLRedArmorToken",1)
		TNT1 A 0 A_Print("\cjCommando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cj= Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		HEVA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		ASSEMBLED ARMORS

ACTOR RLCerberusArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cerberus armor."
  Inventory.Icon "CERAA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.85
  DamageFactor "Fire", 0.30
  DamageFactor "Plasma", 0.50
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

ACTOR RLCerberusArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cerberus Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CERAI0"
    Inventory.Pickupmessage "Picked up the cerberus armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		CERA A 6
		CERA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvCerberus Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLCerberusArmor",1)
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCerberusArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLCerberusSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLCerberusSetBonusBoots",1,"SetBonusCheck")
		TNT1 A 0 A_JumpIfInventory("RLCerberusSetBonusTristarBlaster",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cvCerberus Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv=M= Cerberus Armor =M=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLCerberusSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_JumpIfInventory("RLCerberusSetBonusTristarBlaster",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLCerberusSetBonusActive",1)
		TNT1 A 0 A_Print("\cvCerberus Armor \c-equipped.\n\cf= TRINITY GUARDIAN =\n\cgTristar Blaster fires three times faster", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLCerberusArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCerberusArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CERA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCerberusArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLFireShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the fireshield."
  Inventory.Icon "FSHDA0"
  Armor.Savepercent 40
  Armor.Saveamount 200
  DamageFactor "Fire", 0.05
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLFireShieldArmorRenegade : RLFireShieldArmor
{
  Armor.Savepercent 60
}

ACTOR RLFireShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Fireshield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "FSHDI0"
    Inventory.Pickupmessage "Picked up the fireshield."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		FSHD A 6
		FSHD B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvFireshield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLFireShieldArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLFireShieldArmorToken",1)
		TNT1 A 0 A_Print("\cvFireshield \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLFireShieldArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Fireshield =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLFireShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLFireShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		FSHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFireShieldArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLTowerShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the tower shield."
  Inventory.Icon "TSHDA0"
  Armor.Savepercent 100
  Armor.Saveamount 150
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLTowerShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Tower Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "TSHDI0"
    Inventory.Pickupmessage "Picked up the tower shield."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		TSHD A 6
		TSHD A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvTower Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLTowerShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTowerShieldArmorToken",1)
		TNT1 A 0 A_Print("\cvTower Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Tower Shield =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLTowerShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTowerShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		TSHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTowerShieldArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLTacticalArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the tactical armor."
  Inventory.Icon "TACAA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

ACTOR RLTacticalArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Tactical Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "TACAI0"
    Inventory.Pickupmessage "Picked up the tactical armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		TACA A 6
		TACA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvTactical Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLTacticalArmor",1)
		TNT1 A 0 A_GiveInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTacticalArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLTacticalSetBonusArmor",1)
		TNT1 A 0 A_GiveInventory("PowerRLTacticalArmorProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLTacticalSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cvTactical Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Tactical Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLTacticalSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLTacticalSetBonusActive",1)
		TNT1 A 0 A_GiveInventory("PowerRLTacticalSetBonusProtection",1)
		TNT1 A 0 A_Print("\cvTactical Armor \c-equipped.\n\cf= TACTICAL READINESS =\n\cgImmunity to splash damage", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLTacticalArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTacticalArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		TACA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTacticalArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR PowerRLTacticalArmorProtection : PowerInvisibility
{
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   Powerup.Strength 0
   Powerup.Mode "Opaque"
   +INVENTORY.PERSISTENTPOWER
   +CANTSEEK
   -SHADOW
}

//-------------------------------------------------------------------
//		BALLISTIC ARMORS

ACTOR RLBallisticGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic security armor."
  Inventory.Icon "BLA1A0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.55
  DamageFactor "Melee", 0.7
  DamageFactor "Fire", 1.3
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLBallisticGreenArmorRenegade : RLBallisticGreenArmor
{
  Armor.Savepercent 15
}

ACTOR RLBallisticGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BLA1I0"
    Inventory.Pickupmessage "Picked up the ballistic security armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		BLA1 A 6
		BLA1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvBallistic Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvBallistic Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBallisticGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ballistic Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBallisticGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBallisticGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BLA1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBallisticGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLBallisticBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic combat armor."
  Inventory.Icon "BLA2A0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.7
  DamageFactor "Melee", 0.7
  DamageFactor "Fire", 1.3
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLBallisticBlueArmorRenegade : RLBallisticBlueArmor
{
  Armor.Savepercent 30
}

ACTOR RLBallisticBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BLA2I0"
    Inventory.Pickupmessage "Picked up the ballistic combat armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		BLA2 A 6
		BLA2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvBallistic Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBallisticBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBallisticBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvBallistic Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBallisticBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ballistic Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBallisticBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBallisticBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BLA2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBallisticBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLBallisticRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic commando armor."
  Inventory.Icon "BLA3A0"
  Armor.Savepercent 40
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.7
  DamageFactor "Melee", 0.7
  DamageFactor "Fire", 1.05
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLBallisticRedArmorRenegade : RLBallisticRedArmor
{
  Armor.Savepercent 60
}

ACTOR RLBallisticRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BLA3I0"
    Inventory.Pickupmessage "Picked up the ballistic commando armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		BLA3 A 6
		BLA3 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvBallistic Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBallisticRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBallisticRedArmorToken",1)
		TNT1 A 0 A_Print("\cvBallistic Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBallisticRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ballistic Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBallisticRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBallisticRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BLA3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBallisticRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		CYBERNANO ARMORS

ACTOR RLCybernanoGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cybernano security armor."
  Inventory.Icon "CYN1A0"
  Armor.Savepercent 50
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.85
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLCybernanoGreenArmorRenegade : RLCybernanoGreenArmor
{
  Armor.Savepercent 75
}

ACTOR RLCybernanoGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cybernano Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYN1I0"
    Inventory.Pickupmessage "Picked up the cybernano security armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		CYN1 ABC 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvCybernano Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLCybernanoGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvCybernano Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLCybernanoGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv=M= Cybernano Security Armor =M=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLCybernanoGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCybernanoGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYN1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCybernanoGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLCybernanoBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cybernano combat armor."
  Inventory.Icon "CYN2A0"
  Armor.Savepercent 60
  Armor.Saveamount 99999
  DamageFactor "Plasma", 0.80
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLCybernanoBlueArmorRenegade : RLCybernanoBlueArmor
{
  Armor.Savepercent 80
}

ACTOR RLCybernanoBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cybernano Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYN2I0"
    Inventory.Pickupmessage "Picked up the cybernano combat armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		CYN2 ABC 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvCybernano Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLCybernanoBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvCybernano Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLCybernanoBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv=M= Cybernano Combat Armor =M=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLCybernanoBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCybernanoBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYN2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCybernanoBlueArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLCybernanoRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cybernano commando armor."
  Inventory.Icon "CYN3A0"
  Armor.Savepercent 80
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLCybernanoRedArmorRenegade : RLCybernanoRedArmor
{
  Armor.Savepercent 80
}

ACTOR RLCybernanoRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cybernano Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYN3I0"
    Inventory.Pickupmessage "Picked up the cybernano commando armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		CYN3 ABC 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvCybernano Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLCybernanoRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCybernanoRedArmorToken",1)
		TNT1 A 0 A_Print("\cvCybernano Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLCybernanoRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv=M= Cybernano Commando Armor =M=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLCybernanoRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCybernanoRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYN3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCybernanoRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		FIREPROOF ARMORS

ACTOR RLFireproofGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the fireproof security armor."
  Inventory.Icon "FPA1A0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.85
  DamageFactor "Fire", 0.7
  DamageFactor "Melee", 1.3
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLFireproofGreenArmorRenegade : RLFireproofGreenArmor
{
  Armor.Savepercent 15
}

ACTOR RLFireproofGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Fireproof Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "FPA1I0"
    Inventory.Pickupmessage "Picked up the fireproof security armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		FPA1 A 6
		FPA1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvFireproof Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLFireproofGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLFireproofGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvFireproof Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLFireproofGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Fireproof Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLFireproofGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLFireproofGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		FPA1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFireproofGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLFireproofBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the fireproof combat armor."
  Inventory.Icon "FPA2A0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Plasma", 0.8
  DamageFactor "Fire", 0.7
  DamageFactor "Melee", 1.3
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLFireproofBlueArmorRenegade : RLFireproofBlueArmor
{
  Armor.Savepercent 30
}

ACTOR RLFireproofBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Fireproof Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "FPA2I0"
    Inventory.Pickupmessage "Picked up the fireproof combat armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		FPA2 A 6
		FPA2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvFireproof Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLFireproofBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLFireproofBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvFireproof Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLFireproofBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Fireproof Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLFireproofBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLFireproofBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		FPA2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFireproofBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLFireproofRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the fireproof commando armor."
  Inventory.Icon "FPA3A0"
  Armor.Savepercent 40
  Armor.Saveamount 100
  DamageFactor "Fire", 0.45
  DamageFactor "Melee", 1.3
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLFireproofRedArmorRenegade : RLFireproofRedArmor
{
  Armor.Savepercent 60
}

ACTOR RLFireproofRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Fireproof Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "FPA3I0"
    Inventory.Pickupmessage "Picked up the fireproof commando armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		FPA3 A 6
		FPA3 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvFireproof Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLFireproofRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLFireproofRedArmorToken",1)
		TNT1 A 0 A_Print("\cvFireproof Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLFireproofRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Fireproof Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLFireproofRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLFireproofRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		FPA3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFireproofRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		NANOFIBER ARMORS

ACTOR RLNanofiberGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber security armor."
  Inventory.Icon "NFA1A0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.925
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLNanofiberGreenArmorRenegade : RLNanofiberGreenArmor
{
  Armor.Savepercent 5
}

ACTOR RLNanofiberGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFA1I0"
    Inventory.Pickupmessage "Picked up the nanofiber security armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		NFA1 A 6
		NFA1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFA1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLNanofiberBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber combat armor."
  Inventory.Icon "NFA2A0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Plasma", 0.90
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLNanofiberBlueArmorRenegade : RLNanofiberBlueArmor
{
  Armor.Savepercent 15
}

ACTOR RLNanofiberBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFA2I0"
    Inventory.Pickupmessage "Picked up the nanofiber combat armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		NFA2 A 6
		NFA2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFA2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberBlueArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLNanofiberRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber commando armor."
  Inventory.Icon "NFA3A0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.875
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNanofiberRedArmorRenegade : RLNanofiberRedArmor
{
  Armor.Savepercent 30
}

ACTOR RLNanofiberRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFA3I0"
    Inventory.Pickupmessage "Picked up the nanofiber commando armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		NFA3 A 6
		NFA3 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFA3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		NANOFIBER SKIN ARMORS

ACTOR RLNanofiberSkinGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber skin security armor."
  Inventory.Icon "NFS1A0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.60
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.75
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLNanofiberSkinGreenArmorRenegade : RLNanofiberSkinGreenArmor
{
  Armor.Savepercent 15
}

ACTOR RLNanofiberSkinGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Skin Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFS1I0"
    Inventory.Pickupmessage "Picked up the nanofiber skin security armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		NFS1 B 10
		NFS1 A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Skin Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Skin Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Skin Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberSkinGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberSkinGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFS1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberSkinGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLNanofiberSkinBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber skin combat armor."
  Inventory.Icon "NFS2A0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.75
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.55
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    Loop
  }
}

Actor RLNanofiberSkinBlueArmorRenegade : RLNanofiberSkinGreenArmor
{
  Armor.Savepercent 30
}

ACTOR RLNanofiberSkinBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Skin Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFS2I0"
    Inventory.Pickupmessage "Picked up the nanofiber skin combat armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		NFS2 B 10
		NFS2 A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Skin Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Skin Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Skin Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberSkinBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberSkinBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFS2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberSkinBlueArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLNanofiberSkinRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nanofiber skin commando armor."
  Inventory.Icon "NFS3A0"
  Armor.Savepercent 40
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.75
  DamageFactor "Fire", 0.50
  DamageFactor "Plasma", 0.75
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNanofiberSkinRedArmorRenegade : RLNanofiberSkinRedArmor
{
  Armor.Savepercent 60
}

ACTOR RLNanofiberSkinRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nanofiber Skin Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NFS3I0"
    Inventory.Pickupmessage "Picked up the nanofiber skin commando armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		NFS3 B 10
		NFS3 A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvNanofiber Skin Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinRedArmorToken",1)
		TNT1 A 0 A_Print("\cvNanofiber Skin Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNanofiberSkinRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Nanofiber Skin Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanofiberSkinRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanofiberSkinRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NFS3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanofiberSkinRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		POWER ARMORS

ACTOR RLPowerGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the powered security armor."
  Inventory.Icon "PWR1A0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.70
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLPowerGreenArmorRenegade : RLPowerGreenArmor
{
  Armor.Savepercent 30
}

ACTOR RLPowerGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Powered Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PWR1I0"
    Inventory.Pickupmessage "Picked up the powered security armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		PWR1 A 6
		PWR1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvPowered Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLPowerGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPowerGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvPowered Security Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLPowerGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Powered Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLPowerGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPowerGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PWR1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPowerGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLPowerBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the powered combat armor."
  Inventory.Icon "PWR2A0"
  Armor.Savepercent 30
  Armor.Saveamount 100
  DamageFactor "Plasma", 0.6
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLPowerBlueArmorRenegade : RLPowerBlueArmor
{
  Armor.Savepercent 45
}

ACTOR RLPowerBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Powered Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PWR2I0"
    Inventory.Pickupmessage "Picked up the powered combat armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		PWR2 A 6
		PWR2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvPowered Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLPowerBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPowerBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvPowered Combat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Powered Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLPowerBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPowerBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PWR2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPowerBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLPowerRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the powered commando armor."
  Inventory.Icon "PWR3A0"
  Armor.Savepercent 50
  Armor.Saveamount 100
  DamageFactor "Fire", 0.5
  DamageFactor "Melee", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLPowerRedArmorRenegade : RLPowerRedArmor
{
  Armor.Savepercent 75
}

ACTOR RLPowerRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Powered Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PWR3I0"
    Inventory.Pickupmessage "Picked up the powered commando armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		PWR3 A 6
		PWR3 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvPowered Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLPowerRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPowerRedArmorToken",1)
		TNT1 A 0 A_Print("\cvPowered Commando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLPowerRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Powered Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLPowerRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPowerRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PWR3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPowerRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		EXOTIC ARMORS

Actor RLBallisticShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic shield."
  Inventory.Icon "BSHDA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  DamageFactor "Melee", 0.05
  DamageFactor "Bullet", 0.05
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLBallisticShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BSHDI0"
    Inventory.Pickupmessage "Picked up the ballistic shield."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		BSHD A 6
		BSHD B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctBallistic Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLBallisticShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBallisticShieldArmorToken",1)
		TNT1 A 0 A_Print("\ctBallistic Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Ballistic Shield =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBallisticShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBallisticShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BSHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBallisticShieldArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLBallisticVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic vest."
  Inventory.Icon "BALVA0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLBallisticVestArmorRenegade : RLBallisticVestArmor
{
  Armor.Savepercent 15
}

ACTOR RLBallisticVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Vest"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BALVI0"
    Inventory.Pickupmessage "Picked up the ballistic vest."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		BALV A 6
		BALV A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctBallistic Vest.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBallisticVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBallisticVestArmorToken",1)
		TNT1 A 0 A_Print("\ctBallistic Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBallisticVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Ballistic Vest =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBallisticVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBallisticVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BALV A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBallisticVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLBulletProofVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the bullet-proof vest."
  Inventory.Icon "BPFVA0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Bullet", 0.20
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLBulletProofVestArmorRenegade : RLBulletProofVestArmor
{
  Armor.Savepercent 15
}

ACTOR RLBulletProofVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Bullet-proof Vest"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BPFVI0"
    Inventory.Pickupmessage "Picked up the bullet-proof vest."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		BPFV A 6
		BPFV A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctBullet-proof Vest.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBulletProofVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBulletProofVestArmorToken",1)
		TNT1 A 0 A_Print("\ctBullet-proof Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBulletProofVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Bullet-proof Vest =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBulletProofVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBulletProofVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BPFV A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBulletProofVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLDuelistArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the duelist armor."
  Inventory.Icon "DUEAA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLDuelistArmorRenegade : RLDuelistArmor
{
  Armor.Savepercent 30
}

ACTOR RLDuelistArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Duelist Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "DUEAI0"
    Inventory.Pickupmessage "Picked up the duelist armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		DUEA A 6
		DUEA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctDuelist Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLDuelistArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLDuelistArmorToken",1)
		TNT1 A 0 A_Print("\ctDuelist Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLDuelistArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Duelist Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLDuelistArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLDuelistArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		DUEA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLDuelistArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLEnergyShieldedVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the energy-shielded vest."
  Inventory.Icon "ESVAA0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Fire", 0.50
  DamageFactor "Plasma", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLEnergyShieldedVestArmorRenegade : RLEnergyShieldedVestArmor
{
  Armor.Savepercent 30
}

ACTOR RLEnergyShieldedVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Energy-Shielded Vest"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ESVAI0"
    Inventory.Pickupmessage "Picked up the energy-shielded vest."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		ESVA A 6
		ESVA B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctEnergy-Shielded Vest.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLEnergyShieldedVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLEnergyShieldedVestArmorToken",1)
		TNT1 A 0 A_Print("\ctEnergy-Shielded Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLEnergyShieldedVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Energy-Shielded Vest =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLEnergyShieldedVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLEnergyShieldedVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ESVA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLEnergyShieldedVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLEnergyShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the energy shield."
  Inventory.Icon "ESHDA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  DamageFactor "Fire", 0.20
  DamageFactor "Plasma", 0.20
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLEnergyShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Energy Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ESHDI0"
    Inventory.Pickupmessage "Picked up the energy shield."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		ESHD A 6
		ESHD B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctEnergy Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLEnergyShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLEnergyShieldArmorToken",1)
		TNT1 A 0 A_Print("\ctEnergy Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Energy Shield =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLEnergyShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLEnergyShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ESHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLEnergyShieldArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLGothicArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Gothic armor."
  Inventory.Icon "GOTAA0"
  Armor.Savepercent 70
  Armor.Saveamount 200
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLGothicArmorRenegade : RLGothicArmor
{
  Armor.Savepercent 80
}

ACTOR RLGothicArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Gothic Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "GOTAI0"
    Inventory.Pickupmessage "Picked up the Gothic armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		GOTA A 6
		GOTA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctGothic Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLGothicArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLGothicArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLGothicSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLGothicSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\ctGothic Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLGothicArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Gothic Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLGothicSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLGothicSetBonusActive",1)
		TNT1 A 0 A_Print("\ctGothic Armor \c-equipped.\n\cf= GOTHIC ARMS =\n\cgMassively increases unarmed melee damage", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLGothicArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLGothicArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		GOTA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLGothicArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLMedicalArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the medical armor."
  Inventory.Icon "MED1A0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.80
  DamageFactor "Bullet", 0.80
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLMedicalArmorRenegade : RLMedicalArmor
{
  Armor.Savepercent 30
}

ACTOR RLMedicalArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Medical Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "MED1I0"
    Inventory.Pickupmessage "Picked up the medical armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		MED1 A 6
		MED1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctMedical Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLMedicalArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLMedicalArmorToken",1)
		TNT1 A 0 A_Print("\ctMedical Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLMedicalArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Medical Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLMedicalArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLMedicalArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		MED1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLMedicalArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLPhaseshiftArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the phaseshift armor."
  Inventory.Icon "PSHAA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  DamageFactor "Bullet", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLPhaseshiftArmorRenegade : RLPhaseshiftArmor
{
  Armor.Savepercent 30
}

ACTOR RLPhaseshiftArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Phaseshift Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PSHAI0"
    Inventory.Pickupmessage "Picked up the phaseshift armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		PSHA A 6
		PSHA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctPhaseshift Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLPhaseshiftArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPhaseshiftArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLPhaseshiftSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLPhaseshiftSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\ctPhaseshift Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLPhaseshiftArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Phaseshift Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLPhaseshiftSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLPhaseshiftSetBonusActive",1)
		TNT1 A 0 A_Print("\ctPhaseshift Armor \c-equipped.\n\cf= PHASESHIFT SUIT =\n\cgYou phase out for a short time after being hit", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLPhaseshiftArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPhaseshiftArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PSHA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPhaseshiftArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLPlasmaShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the plasma shield."
  Inventory.Icon "PSHDA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  DamageFactor "Plasma", 0.05
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLPlasmaShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Plasma Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PSHDI0"
    Inventory.Pickupmessage "Picked up the plasma shield."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		PSHD A 6
		PSHD B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctPlasma Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLPlasmaShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPlasmaShieldArmorToken",1)
		TNT1 A 0 A_Print("\ctPlasma Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Plasma Shield =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLPlasmaShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPlasmaShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PSHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPlasmaShieldArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOnyxArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the onyx armor."
  Inventory.Icon "ONXAA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOnyxArmorRenegade : RLOnyxArmor
{
  Armor.Savepercent 30
}

ACTOR RLOnyxArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Onyx Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ONXAI0"
    Inventory.Pickupmessage "Picked up the onyx armor."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		ONXA A 6
		ONXA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctOnyx Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOnyxArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOnyxArmorToken",1)
		TNT1 A 0 A_Print("\ctOnyx Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOnyxArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Onyx Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOnyxArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOnyxArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ONXA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOnyxArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		UNIQUE ARMORS

ACTOR RLBerserkerArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Berserker armor."
  Inventory.Icon "GOTAA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLBerserkerArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Berserker Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "GOTAI0"
    Inventory.Pickupmessage "Picked up the Berserker armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		GOTA A 6
		GOTA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdBerserker Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_Print("I haven't made this yet. How you got it is suspicious.", 1, "CONFONT")
		Fail
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLBerserkerArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBerserkerArmorToken",1)
		TNT1 A 0 A_Print("\cdBerserker Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Berserker Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBerserkerArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBerserkerArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		GOTA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBerserkerArmorPickup",0,0,0,0)
		Stop
	}
}

actor PowerRLCyberneticArmorRegen : PowerRegeneration
{
   Powerup.Strength 1
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

ACTOR RLCyberneticArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cybernetic armor."
  Inventory.Icon "CYNAA0"
  Armor.Savepercent 70
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLCyberneticArmorBulk : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Plasma", 0.25
}

Actor RLCyberneticArmorPower : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.25
}

Actor RLCyberneticArmorAgility : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.75
}

Actor RLCyberneticArmorTechnical : RLCyberneticArmor
{
  DamageFactor "Melee", 0.75
  DamageFactor "Bullet", 0.50
}

Actor RLCyberneticArmorSniper : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Plasma", 0.75
}

Actor RLCyberneticArmorFirestorm : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.75
}

Actor RLCyberneticArmorNano : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
}

Actor RLCyberneticArmorOnyx : RLCyberneticArmor
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.50
  DamageFactor "Plasma", 0.50
}

Actor RLCyberneticArmorRenegade : RLCyberneticArmor
{
  Armor.Savepercent 80
}

Actor RLCyberneticArmorRenegadeBulk : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Plasma", 0.25
}

Actor RLCyberneticArmorRenegadePower : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.25
}

Actor RLCyberneticArmorRenegadeAgility : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.75
}

Actor RLCyberneticArmorRenegadeTechnical : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.75
  DamageFactor "Bullet", 0.50
}

Actor RLCyberneticArmorRenegadeSniper : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Plasma", 0.75
}

Actor RLCyberneticArmorRenegadeFirestorm : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.75
}

Actor RLCyberneticArmorRenegadeNano : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
}

Actor RLCyberneticArmorRenegadeOnyx : RLCyberneticArmorRenegade
{
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.50
  DamageFactor "Plasma", 0.50
}

Actor RLCyberneticArmorBulkToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorPowerToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorAgilityToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorTechnicalToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorSniperToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorFirestormToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorNanoToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorOnyxToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorModdedToken : Inventory
{
inventory.maxamount 1
}

Actor RLCyberneticArmorModdingConfirm : Inventory
{
inventory.maxamount 1
}

ACTOR RLCyberneticArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cybernetic Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYNAI0"
    Inventory.Pickupmessage "Picked up the cybernetic armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		CYNA A 6
		CYNA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdCybernetic Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.\n\cgThis armor cannot be removed once worn.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLCyberneticArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCyberneticArmorToken",1)
		TNT1 A 0 A_Print("\cdCybernetic Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLCyberneticArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Cybernetic Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLCyberneticArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCyberneticArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYNA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCyberneticArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLLavaArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the lava armor."
  Inventory.Icon "LAVUA0"
  Armor.Savepercent 40
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.25
  DamageFactor "Plasma", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLLavaArmorRenegade : RLLavaArmor
{
  Armor.Savepercent 60
}

ACTOR RLLavaArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Lava Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "LAVUI0"
    Inventory.Pickupmessage "Picked up the lava armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		LAVU ABCD 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdLava Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLLavaArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLLavaArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLLavaSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLLavaSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdLava Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLLavaArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Lava Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLLavaSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLLavaSetBonusActive",1)
		TNT1 A 0 A_Print("\cdLava Armor \c-equipped.\n\cf= UNSTABLE ELEMENTAL =\n\cgChance of temporary invincibility when taking damage", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLLavaArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLLavaArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		LAVU ABCD 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLLavaArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLMaleksArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Malek's armor."
  Inventory.Icon "MALKA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.70
  DamageFactor "Plasma", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLMaleksArmorRenegade : RLMaleksArmor
{
  Armor.Savepercent 45
}

ACTOR RLMaleksArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Malek's Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "MALKI0"
    Inventory.Pickupmessage "Picked up Malek's armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		MALK A 70
		MALK B 3 Bright
		MALK A 1
		MALK B 3 Bright
		MALK A 1
		MALK B 3 Bright
		MALK A 1
		MALK B 3 Bright
		MALK A 1
		MALK B 3 Bright
		MALK A 1
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up \cdMalek's Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLMaleksArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLMaleksArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLInquisitorsSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLInquisitorsSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdMalek's Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLMaleksArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Malek's Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLInquisitorsSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLInquisitorsSetBonusActive",1)
		TNT1 A 0 A_GiveInventory("PowerRLInquisitorsSetBonusProtection",1)
		TNT1 A 0 A_Print("\cdMalek's Armor \c-equipped.\n\cf= INQUISITOR'S JUDGEMENT =\n\cgImmunity to fire damage", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLMaleksArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLMaleksArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		MALK A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLMaleksArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLMedicalPowerArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the medical powerarmor."
  Inventory.Icon "MED2A0"
  Armor.Savepercent 40
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLMedicalPowerArmorRenegade : RLMedicalPowerArmor
{
  Armor.Savepercent 60
}

ACTOR RLMedicalPowerArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Medical Powerarmor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "MED2I0"
    Inventory.Pickupmessage "Picked up the medical powerarmor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		MED2 A 6
		MED2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdMedical Powerarmor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLMedicalPowerArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLMedicalPowerArmorToken",1)
		TNT1 A 0 A_Print("\cdMedical Powerarmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLMedicalPowerArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Medical Powerarmor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLMedicalPowerArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLMedicalPowerArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		MED2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLMedicalPowerArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLNecroArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the necroarmor."
  Inventory.Icon "NECRA0"
  Armor.Savepercent 60
  Armor.Saveamount 100
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNecroArmorRenegade : RLNecroArmor
{
  Armor.Savepercent 80
}

ACTOR RLNecroArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Necroarmor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NECRI0"
    Inventory.Pickupmessage "Picked up the necroarmor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		NECR A 6
		NECR A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdNecroarmor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNecroArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNecroArmorToken",1)
		TNT1 A 0 A_Print("\cdNecroarmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNecroArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Necroarmor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNecroArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNecroArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NECR A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNecroArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLShieldedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the shielded armor."
  Inventory.Icon "SSHDA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.10
  DamageFactor "Bullet", 0.10
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLShieldedArmorRenegade : RLShieldedArmor
{
  Armor.Savepercent 30
}

ACTOR RLShieldedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Shielded Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "SSHDI0"
    Inventory.Pickupmessage "Picked up the shielded armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		SSHD A 6
		SSHD B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdShielded Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLShieldedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLShieldedArmorToken",1)
		TNT1 A 0 A_Print("\cdShielded Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLShieldedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Shielded Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLShieldedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLShieldedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		SSHD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLShieldedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		LEGENDARY ARMORS

Actor RLAngelicArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Angelic Armor."
  Inventory.Icon "ANGAA0"
  Armor.Savepercent 70
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLAngelicArmorRenegade : RLAngelicArmor
{
  Armor.Savepercent 80
}

ACTOR RLAngelicArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Angelic Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ANGAI0"
    Inventory.Pickupmessage "Picked up the angelic armor."
	Inventory.PickupSound "misc/rlarmorlegendary"
	Inventory.UseSound "misc/rlarmorlegendary"
	States
	{
	Spawn:
		ANGA A 6
		ANGA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ckAngelic Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLAngelicArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLAngelicArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLAngelicAttireSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLAngelicAttireSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\ckAngelic Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLAngelicArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ck=L= Angelic Armor =L=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLAngelicAttireSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLAngelicAttireSetBonusActive",1)
		TNT1 A 0 A_Print("\ckAngelic Armor \c-equipped.\n\cf= ANGELIC ATTIRE =\n\cgImmunity to corruption\n\cgGetting hit causes an AOE heal on players\n\cgGetting hit causes AOE damage to monsters", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLAngelicArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLAngelicArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ANGA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLAngelicArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		ONYX-MODDED ARMORS

ACTOR RLOModGreenArmor : GreenArmor
{
  Inventory.Pickupmessage "Picked up the security armor [O]."
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.85
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModGreenArmorRenegade : RLOModGreenArmor
{
  Armor.Savepercent 15
}

ACTOR RLOModGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Security Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ARM1I0"
    Inventory.Pickupmessage "Picked up the security armor [O]."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		ARM1 A 2
		ARM1 B 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuSecurity Armor [O].")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModGreenArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModGreenArmorToken",1)
		TNT1 A 0 A_Print("\cuSecurity Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOMODGreenArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Security Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ARM1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLOModBlueArmor : BlueArmor
{
  Inventory.Pickupmessage "Picked up the combat armor [O]."
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Plasma", 0.8
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModBlueArmorRenegade : RLOModBlueArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Combat Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ARM2I0"
    Inventory.Pickupmessage "Picked up the combat armor [O]."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		ARM2 A 2
		ARM2 B 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuCombat Armor [O].")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModBlueArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModBlueArmorToken",1)
		TNT1 A 0 A_Print("\cuCombat Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModBlueArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Combat Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ARM2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the commando armor [O]."
  Inventory.Icon "HEVAB0"
  Armor.Savepercent 40
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModRedArmorRenegade : RLOModRedArmor
{
  Armor.Savepercent 60
}

ACTOR RLOModRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Commando Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "HEVAI0"
    Inventory.Pickupmessage "Picked up the commando armor [O]."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		HEVA A 2
		HEVA B 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuCommando Armor [O].")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModRedArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModRedArmorToken",1)
		TNT1 A 0 A_Print("\cuCommando Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModRedArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Commando Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		HEVA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModRedArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModBallisticVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ballistic vest. [O]"
  Inventory.Icon "BALVA0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModBallisticVestArmorRenegade : RLOModBallisticVestArmor
{
  Armor.Savepercent 15
}

ACTOR RLOModBallisticVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ballistic Vest [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BALVI0"
    Inventory.Pickupmessage "Picked up the ballistic vest. [O]"
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		BALV A 2
		BALV A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuBallistic Vest. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmorToken",1)
		TNT1 A 0 A_Print("\cuBallistic Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModBallisticVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Ballistic Vest [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModBallisticVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModBallisticVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BALV A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModBallisticVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModBulletProofVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the bullet-proof vest. [O]"
  Inventory.Icon "BPFVA0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.20
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModBulletProofVestArmorRenegade : RLOModBulletProofVestArmor
{
  Armor.Savepercent 15
}

ACTOR RLOModBulletProofVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Bullet-proof Vest [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BPFVI0"
    Inventory.Pickupmessage "Picked up the bullet-proof vest. [O]"
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		BPFV A 2
		BPFV A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuBullet-proof Vest. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmorToken",1)
		TNT1 A 0 A_Print("\cuBullet-proof Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModBulletProofVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Bullet-proof Vest [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModBulletProofVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModBulletProofVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BPFV A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModBulletProofVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModDuelistArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the duelist armor. [O]"
  Inventory.Icon "DUEAA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModDuelistArmorRenegade : RLOModDuelistArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModDuelistArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Duelist Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "DUEAI0"
    Inventory.Pickupmessage "Picked up the duelist armor. [O]"
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		DUEA A 2
		DUEA A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuDuelist Armor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModDuelistArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModDuelistArmorToken",1)
		TNT1 A 0 A_Print("\cuDuelist Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModDuelistArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Duelist Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModDuelistArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModDuelistArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		DEUA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModDuelistArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModEnergyShieldedVestArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the energy-shielded vest. [O]"
  Inventory.Icon "ESVAA0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.50
  DamageFactor "Plasma", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModEnergyShieldedVestArmorRenegade : RLOModEnergyShieldedVestArmor
{
  Armor.Savepercent 15
}

ACTOR RLOModEnergyShieldedVestArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Energy-Shielded Vest [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ESVAI0"
    Inventory.Pickupmessage "Picked up the energy-shielded vest. [O]"
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		ESVA A 2
		ESVA B 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuEnergy-Shielded Vest. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmorToken",1)
		TNT1 A 0 A_Print("\cuEnergy-Shielded Vest \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModEnergyShieldedVestArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Energy-Shielded Vest [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModEnergyShieldedVestArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModEnergyShieldedVestArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ESVA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModEnergyShieldedVestArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModGothicArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Gothic armor. [O]"
  Inventory.Icon "GOTAA0"
  Armor.Savepercent 70
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.50
  DamageFactor "Bullet", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModGothicArmorRenegade : RLOModGothicArmor
{
  Armor.Savepercent 80
}

ACTOR RLOModGothicArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Gothic Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "GOTAI0"
    Inventory.Pickupmessage "Picked up the Gothic armor. [O]"
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		GOTA A 2
		GOTA A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuGothic Armor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModGothicArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModGothicArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLGothicSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLGothicSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cuGothic Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModGothicArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Gothic Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLGothicSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLGothicSetBonusActive",1)
		TNT1 A 0 A_Print("\cuGothic Armor \c-equipped.\n\cf= GOTHIC ARMS =\n\cgMassively increases unarmed melee damage", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLOModGothicArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModGothicArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		GOTA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModGothicArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModMedicalArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the medical armor. [O]"
  Inventory.Icon "MED1A0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.80
  DamageFactor "Bullet", 0.80
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModMedicalArmorRenegade : RLOModMedicalArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModMedicalArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Medical Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "MED1I0"
    Inventory.Pickupmessage "Picked up the medical armor. [O]"
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		MED1 A 2
		MED1 A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuMedical Armor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModMedicalArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModMedicalArmorToken",1)
		TNT1 A 0 A_Print("\cuMedical Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModMedicalArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Medical Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModMedicalArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModMedicalArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		MED1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModMedicalArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModPhaseshiftArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the phaseshift armor. [O]"
  Inventory.Icon "PSHAA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.70
  DamageFactor "Bullet", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModPhaseshiftArmorRenegade : RLOModPhaseshiftArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModPhaseshiftArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Phaseshift Armor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PSHAI0"
    Inventory.Pickupmessage "Picked up the phaseshift armor. [O]"
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		PSHA A 2
		PSHA A 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuPhaseshift Armor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLPhaseshiftSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLPhaseshiftSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cuPhaseshift Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModPhaseshiftArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Phaseshift Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLPhaseshiftSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLPhaseshiftSetBonusActive",1)
		TNT1 A 0 A_Print("\cuPhaseshift Armor \c-equipped.\n\cf= PHASESHIFT SUIT =\n\cgYou phase out for a short time after being hit", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLOModPhaseshiftArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModPhaseshiftArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PSHA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModPhaseshiftArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		BETA 1.7 ARMORS

//-------------------------------------------------------------------
//		ABLATIVE ARMORS

ACTOR RLAblativeGreenArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ablative security armor."
  Inventory.Icon "ABL1A0"
  Armor.Savepercent 95
  Armor.Saveamount 200
  DamageFactor "Bullet", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

ACTOR RLAblativeGreenArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ablative Security Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ABL1I0"
    Inventory.Pickupmessage "Picked up the ablative security armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		ABL1 A 6
		ABL1 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvAblative Security Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLAblativeGreenArmor",1)
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLAblativeGreenArmorToken",1)
		TNT1 A 0 A_Print("\cvAblative Security Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ablative Security Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLAblativeGreenArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLAblativeGreenArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ABL1 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLAblativeGreenArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLAblativeBlueArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ablative combat armor."
  Inventory.Icon "ABL2A0"
  Armor.Savepercent 95
  Armor.Saveamount 200
  DamageFactor "Plasma", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

ACTOR RLAblativeBlueArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ablative Combat Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ABL2I0"
    Inventory.Pickupmessage "Picked up the ablative combat armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		ABL2 A 6
		ABL2 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvAblative Combat Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLAblativeBlueArmor",1)
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLAblativeBlueArmorToken",1)
		TNT1 A 0 A_Print("\cvAblative Combat Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ablative Combat Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLAblativeBlueArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLAblativeBlueArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ABL2 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLAblativeBlueArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLAblativeRedArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the ablative commando armor."
  Inventory.Icon "ABL3A0"
  Armor.Savepercent 95
  Armor.Saveamount 200
  DamageFactor "Fire", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLAblativeRedArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Ablative Commando Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ABL3I0"
    Inventory.Pickupmessage "Picked up the ablative commando armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		ABL3 A 6
		ABL3 A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cvAblative Commando Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLAblativeRedArmor",1)
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLAblativeRedArmorToken",1)
		TNT1 A 0 A_Print("\cvAblative Commando Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cv= Ablative Commando Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLAblativeRedArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLAblativeRedArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ABL3 A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLAblativeRedArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		EXOTIC ARMORS

Actor RLRechargeableEnergyShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the rechargeable energy shield."
  Inventory.Icon "RESHA0"
  Armor.Savepercent 0
  Armor.Saveamount 100
  DamageFactor "Fire", 0.3
  DamageFactor "Plasma", 0.3
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLRechargeableEnergyShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Rechargeable Energy Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "RESHI0"
    Inventory.Pickupmessage "Picked up the rechargeable energy shield."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		RESH A 6
		RESH B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctRechargeable Energy Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLRechargeableEnergyShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLRechargeableEnergyShieldArmorToken",1)
		TNT1 A 0 A_Print("\ctRechargeable Energy Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Rechargeable Energy Shield =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLRechargeableEnergyShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLRechargeableEnergyShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		RESH A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLRechargeableEnergyShieldArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLOverchargeSystemArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the overcharge system."
  Inventory.Icon "OVESA0"
  Armor.Savepercent 10
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

Actor RLOverchargeSystemArmorRenegade : RLOverchargeSystemArmor
{
  Armor.Savepercent 15
}

ACTOR RLOverchargeSystemArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Overcharge System"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "OVESI0"
    Inventory.Pickupmessage "Picked up the overcharge system."
	Inventory.PickupSound "misc/rlarmor1"
	Inventory.UseSound "misc/rlarmor1"
	States
	{
	Spawn:
		OVES A 6
		OVES A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctOvercharge System.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOverchargeSystemArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOverchargeSystemArmorToken",1)
		TNT1 A 0 A_Print("\ctOvercharge System \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOverchargeSystemArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Overcharge System =", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOverchargeSystemArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOverchargeSystemArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		OVES A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOverchargeSystemArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLCyberwarriorArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cyberwarrior armor."
  Inventory.Icon "CYWAA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.40
  DamageFactor "Bullet", 0.60
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLCyberwarriorArmorRenegade : RLCyberwarriorArmor
{
  Armor.Savepercent 30
}

ACTOR RLCyberwarriorArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cyberwarrior Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYWAI0"
    Inventory.Pickupmessage "Picked up the cyberwarrior armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		CYWA A 6
		CYWA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctCyberwarrior Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLCyberwarriorArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLCyberwarriorArmorToken",1)
		TNT1 A 0 A_Print("\ctCyberwarrior Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLCyberwarriorArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Cyberwarrior Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLCyberwarriorArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLCyberwarriorArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYWA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLCyberwarriorArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLRepulsionWaveSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the repulsion wave suit."
  Inventory.Icon "REPWA0"
  Armor.Savepercent 30
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLRepulsionWaveSuitArmorRenegade : RLRepulsionWaveSuitArmor
{
  Armor.Savepercent 45
}

ACTOR RLRepulsionWaveSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Repulsion Wave Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "REPWI0"
    Inventory.Pickupmessage "Picked up the repulsion wave suit."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		REPW A 6
		REPW A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctRepulsion Wave Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLRepulsionWaveSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLRepulsionWaveSuitArmorToken",1)
		TNT1 A 0 A_Print("\ctRepulsion Wave Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLRepulsionWaveSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Repulsion Wave Suit =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLRepulsionWaveSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLRepulsionWaveSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		REPW A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLRepulsionWaveSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLSurvivalMediArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the survival mediarmor."
  Inventory.Icon "SURVA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLSurvivalMediArmorRenegade : RLSurvivalMediArmor
{
  Armor.Savepercent 30
}

ACTOR RLSurvivalMediArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Survival MediArmor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "SURVJ0"
    Inventory.Pickupmessage "Picked up the survival mediarmor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		SURV A 6
		SURV A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctSurvival MediArmor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLSurvivalMediArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLSurvivalMediArmorToken",1)
		TNT1 A 0 A_Print("\ctSurvival MediArmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLSurvivalMediArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Survival MediArmor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLSurvivalMediArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLSurvivalMediArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		SURV A 6
		SURV A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLSurvivalMediArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		UNIQUE ARMORS

ACTOR RLEnergyDischargeHarnessArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the energy discharge harness."
  Inventory.Icon "EDHXA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.90
  DamageFactor "Plasma", 0.90
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLEnergyDischargeHarnessArmorRenegade : RLEnergyDischargeHarnessArmor
{
  Armor.Savepercent 30
}

ACTOR RLEnergyDischargeHarnessArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Energy Discharge Harness"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "EDHXI0"
    Inventory.Pickupmessage "Picked up the energy discharge harness."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		EDHX A 6
		EDHX A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdEnergy Discharge Harness.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLEnergyDischargeHarnessArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLEnergyDischargeHarnessArmorToken",1)
		TNT1 A 0 A_Print("\cdEnergy Discharge Harness \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLEnergyDischargeHarnessArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Energy Discharge Harness =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLEnergyDischargeHarnessArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLEnergyDischargeHarnessArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		EDHX A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLEnergyDischargeHarnessArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLPrototypeAssaultShieldArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the prototype assault shield."
  Inventory.Icon "PASSA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLPrototypeAssaultShieldArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Prototype Assault Shield"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "PASSI0"
    Inventory.Pickupmessage "Picked up the prototype assault shield."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		PASS A 6
		PASS A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdPrototype Assault Shield.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLPrototypeAssaultShieldArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLPrototypeAssaultShieldArmorToken",1)
		TNT1 A 0 A_Print("\cdPrototype Assault Shield \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Prototype Assault Shield =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLPrototypeAssaultShieldArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLPrototypeAssaultShieldArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		PASS A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLPrototypeAssaultShieldArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLJetpackArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the jetpack."
  Inventory.Icon "PASSA0"
  Armor.Savepercent 5
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLJetpackArmorRenegade : RLJetpackArmor
{
  Armor.Savepercent 8
}

ACTOR RLJetpackArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Jetpack"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "JETPI0"
    Inventory.Pickupmessage "Picked up the jetpack."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		JETP BCB 2
		JETP A 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdJetpack.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLJetpackArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLJetpackArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLDeathFromAboveSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLDeathFromAboveSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdJetpack \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLJetpackArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Jetpack =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLDeathFromAboveSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLDeathFromAboveSetBonusActive",1)
		TNT1 A 0 A_Print("\cdJetpack \c-equipped.\n\cf= DEATH FROM ABOVE =\n\cgJetpack can fly indefinitely", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLJetpackArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLJetpackArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		JETP BCB 2
		JETP A 4 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLJetpackArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLBerserkPowersuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the berserk powersuit."
  Inventory.Icon "BEPSA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.25
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLBerserkPowersuitArmorRenegade : RLBerserkPowersuitArmor
{
  Armor.Savepercent 45
}

ACTOR RLBerserkPowersuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Berserk Powersuit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BEPSI0"
    Inventory.Pickupmessage "Picked up the berserk powersuit."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		BEPS A 6
		BEPS A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdBerserk Powersuit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorToken",1)
		TNT1 A 0 A_Print("\cdBerserk Powersuit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Berserk Powersuit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

ACTOR RLBerserkPowersuitArmorPickup1 : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Berserk Powersuit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BEPSI0"
    Inventory.Pickupmessage "Picked up the berserk powersuit."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		BEPS A 30
		BEPS B 2 Bright
		BEPS A 2
		BEPS B 2 Bright
		BEPS A 2
		BEPS B 2 Bright
		BEPS A 2
		BEPS B 2 Bright
		BEPS A 2
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdBerserk Powersuit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitBerserkCounter",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorToken",1)
		TNT1 A 0 A_Print("\cdBerserk Powersuit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Berserk Powersuit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

ACTOR RLBerserkPowersuitArmorPickup2 : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Berserk Powersuit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BEPSI0"
    Inventory.Pickupmessage "Picked up the berserk powersuit."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		BEPS A 30
		BEPS C 2 Bright
		BEPS A 2
		BEPS C 2 Bright
		BEPS A 2
		BEPS C 2 Bright
		BEPS A 2
		BEPS C 2 Bright
		BEPS A 2
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdBerserk Powersuit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitBerserkCounter",2)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorToken",1)
		TNT1 A 0 A_Print("\cdBerserk Powersuit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Berserk Powersuit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

ACTOR RLBerserkPowersuitArmorPickup3 : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Berserk Powersuit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BEPSI0"
    Inventory.Pickupmessage "Picked up the berserk powersuit."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		BEPS A 30
		BEPS D 2 Bright
		BEPS A 2
		BEPS D 2 Bright
		BEPS A 2
		BEPS D 2 Bright
		BEPS A 2
		BEPS D 2 Bright
		BEPS A 2
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdBerserk Powersuit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitBerserkCounter",3)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorToken",1)
		TNT1 A 0 A_Print("\cdBerserk Powersuit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBerserkPowersuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Berserk Powersuit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBerserkPowersuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBerserkPowersuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BEPS A 4
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBerserkPowersuitArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLBerserkPowersuitArmor1 : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BEPS A 4
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBerserkPowersuitArmorPickup1",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLBerserkPowersuitArmor2 : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BEPS A 4
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBerserkPowersuitArmorPickup2",0,0,0,0)
		Stop
	}
}

ACTOR DroppedRLBerserkPowersuitArmor3 : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BEPS A 4
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBerserkPowersuitArmorPickup3",0,0,0,0)
		Stop
	}
}

Actor RLBerserkPowersuitBerserkCounter : Inventory
{
inventory.maxamount 3
}

Actor RLGeosGoldenGauntletArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up Geo's golden gauntlet."
  Inventory.Icon "GGGXA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLGeosGoldenGauntletArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Geo's Golden Gauntlet"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "GGGXI0"
    Inventory.Pickupmessage "Picked up Geo's golden gauntlet."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		GGGX A 6
		GGGX A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up \cdGeo's Golden Gauntlet.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLGeosGoldenGauntletArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLGeosGoldenGauntletArmorToken",1)
		TNT1 A 0 A_Print("\cdGeo's Golden Gauntlet \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Geo's Golden Gauntlet =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLGeosGoldenGauntletArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLGeosGoldenGauntletArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		GGGX A 6
		GGGX A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLGeosGoldenGauntletArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLSoulshatterArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the soulshatter armor."
  Inventory.Icon "SOLSA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.90
  DamageFactor "Bullet", 0.90
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLSoulshatterArmorRenegade : RLSoulshatterArmor
{
  Armor.Savepercent 45
}

ACTOR RLSoulshatterArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Soulshatter Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "SOLSI0"
    Inventory.Pickupmessage "Picked up the soulshatter armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		SOLS A 6
		SOLS A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdSoulshatter Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmorToken",1)
		TNT1 A 0 A_Print("\cdSoulshatter Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLSoulshatterArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Soulshatter Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLSoulshatterArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLSoulshatterArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		SOLS A 6
		SOLS A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLSoulshatterArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLDemonicCarapaceArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the demonic carapace."
  Inventory.Icon "DEMAA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.90
  DamageFactor "Bullet", 0.90
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLDemonicCarapaceArmorRenegade : RLDemonicCarapaceArmor
{
  Armor.Savepercent 45
}

ACTOR RLDemonicCarapaceArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Demonic Carapace"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "DEMAI0"
    Inventory.Pickupmessage "Picked up the demonic carapace."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		DEMA A 6
		DEMA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdDemonic Carapace.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLDemonicCarapaceArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLDemonicCarapaceArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLDemonicSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLDemonicSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdDemonic Carapace \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLDemonicCarapaceArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Demonic Carapace =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLDemonicSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLDemonicSetBonusActive",1)
		TNT1 A 0 A_Print("\cdDemonic Carapace \c-equipped.\n\cf= DEMONIC VENGEANCE =\n\cgCan fire homing plasmatic doom from your armor", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLDemonicCarapaceArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLDemonicCarapaceArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		DEMA A 6
		DEMA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLDemonicCarapaceArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR RLNanoAblativeArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nano ablative armor."
  Inventory.Icon "NABLA0"
  Armor.Savepercent 80
  Armor.Saveamount 200
  DamageFactor "Melee", 0.0
  DamageFactor "Bullet", 0.0
  DamageFactor "Fire", 0.0
  DamageFactor "Plasma", 0.0
  States
  {
  Spawn:
    NOIC A 10
    loop
	}
}

ACTOR RLNanoAblativeArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nano Ablative Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NABLI0"
    Inventory.Pickupmessage "Picked up the nano ablative armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		NABL A 6
		NABL A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdNano Ablative Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it. Press Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLNanoAblativeArmor",1)
		TNT1 A 0 A_GiveInventory("RL100RegenArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNanoAblativeArmorToken",1)
		TNT1 A 0 A_Print("\cdNano Ablative Armor \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Nano Ablative Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:	
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLNanoAblativeArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNanoAblativeArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NABL A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNanoAblativeArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLWildWeaselPeacekeeperArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the WW-41 peacekeeper armor."
  Inventory.Icon "WWPKA0"
  Armor.Savepercent 10
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  DamageFactor "Bullet", 0.30
  DamageFactor "Fire", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLWildWeaselPeacekeeperArmorRenegade : RLWildWeaselPeacekeeperArmor
{
  Armor.Savepercent 30
}

ACTOR RLWildWeaselPeacekeeperArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "WW-41 Peacekeeper Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "WWPKI0"
    Inventory.Pickupmessage "Picked up the WW-41 peacekeeper armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		WWPK A 6
		WWPK A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdWW-41 Peacekeeper Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLWildWeaselPeacekeeperArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL100ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLWildWeaselPeacekeeperArmorToken",1)
		TNT1 A 0 A_Print("\cdWW-41 Peacekeeper Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLWildWeaselPeacekeeperArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= WW-41 Peacekeeper Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLWildWeaselPeacekeeperArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLWildWeaselPeacekeeperArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		WWPK A 6
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLWildWeaselPeacekeeperArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLXaserPowerArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Xaser inc. powerarmor."
  Inventory.Icon "XASPA0"
  Armor.Savepercent 50
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.79
  DamageFactor "Bullet", 0.68
  DamageFactor "Fire", 0.57
  DamageFactor "Plasma", 0.46
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLXaserPowerArmorRenegade : RLXaserPowerArmor
{
  Armor.Savepercent 75
}

ACTOR RLXaserPowerArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Xaser Inc. Powerarmor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "XASPI0"
    Inventory.Pickupmessage "Picked up the Xaser inc. powerarmor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		XASP A 5 Bright
		XASP BCB 5
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdXaser Inc. Powerarmor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLXaserPowerArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLXaserPowerArmorToken",1)
		TNT1 A 0 A_Print("\cdXaser Inc. Powerarmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLXaserPowerArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Xaser Inc. Powerarmor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLXaserPowerArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLXaserPowerArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		XASP A 5 Bright
		XASP BCB 5
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLXaserPowerArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLBlazingPhoenixDeviceSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the phoenix-B device suit."
  Inventory.Icon "BPHDA0"
  Armor.Savepercent 20
  Armor.Saveamount 150
  DamageFactor "Fire", 0.55
  DamageFactor "Plasma", 0.20
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLBlazingPhoenixDeviceSuitArmorRenegade : RLBlazingPhoenixDeviceSuitArmor
{
  Armor.Savepercent 30
}

ACTOR RLBlazingPhoenixDeviceSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Phoenix-B Device Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BPHDI0"
    Inventory.Pickupmessage "Picked up the phoenix-B device suit."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		BPHD A 6
		BPHD A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdPhoenix-B Device Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLBlazingPhoenixDeviceSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL150ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLBlazingPhoenixDeviceSuitArmorToken",1)
		TNT1 A 0 A_Print("\cdPhoenix-B Device Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLBlazingPhoenixDeviceSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Phoenix-B Device Suit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLBlazingPhoenixDeviceSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLBlazingPhoenixDeviceSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BPHD A 6
		BPHD A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLBlazingPhoenixDeviceSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLKateMatterstormHarnessArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the K-8 matterstorm harness."
  Inventory.Icon "K8MHA0"
  Armor.Savepercent 15
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.70
  DamageFactor "Plasma", 0.55
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLKateMatterstormHarnessArmorRenegade : RLKateMatterstormHarnessArmor
{
  Armor.Savepercent 13
}

ACTOR RLKateMatterstormHarnessArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "K-8 Matterstorm Harness"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "K8MHI0"
    Inventory.Pickupmessage "Picked up the K-8 matterstorm harness."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		K8MH ABCDEF 2 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdK-8 Matterstorm Harness.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLKateMatterstormHarnessArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLKateMatterstormHarnessArmorToken",1)
		TNT1 A 0 A_Print("\cdK-8 Matterstorm Harness \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLKateMatterstormHarnessArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= K-8 Matterstorm Harness =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLKateMatterstormHarnessArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLKateMatterstormHarnessArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		K8MH ABCDEF 2 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLKateMatterstormHarnessArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLZeroDiamondAssaultforceArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the 0D-1a ssaultforce armor."
  Inventory.Icon "0DAFA0"
  Armor.Savepercent 65
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.65
  DamageFactor "Bullet", 0.65
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLZeroDiamondAssaultforceArmorRenegade : RLZeroDiamondAssaultforceArmor
{
  Armor.Savepercent 80
}

ACTOR RLZeroDiamondAssaultforceArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "0D-1a Assaultforce Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "0DAFI0"
    Inventory.Pickupmessage "Picked up the 0D-1a assaultforce armor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		0DAF A 6
		0DAF A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cd0D-1a Assaultforce Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLZeroDiamondAssaultforceArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLZeroDiamondAssaultforceArmorToken",1)
		TNT1 A 0 A_Print("\cd0D-1a Assaultforce Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLZeroDiamondAssaultforceArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= 0D-1a Assaultforce Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLZeroDiamondAssaultforceArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLZeroDiamondAssaultforceArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		0DAF A 6
		0DAF A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLZeroDiamondAssaultforceArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLKyleTeslaboltArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the K1-L3 teslabolt armor."
  Inventory.Icon "KTESA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Plasma", 0.30
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLKyleTeslaboltArmorRenegade : RLKyleTeslaboltArmor
{
  Armor.Savepercent 45
}

ACTOR RLKyleTeslaboltArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "K1-L3 Teslabolt Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "KTESI0"
    Inventory.Pickupmessage "Picked up the K1-L3 teslabolt armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		KTES A 6
		KTES B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdK1-L3 Teslabolt Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLKyleTeslaboltArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLKyleTeslaboltArmorToken",1)
		TNT1 A 0 A_Print("\cdK1-L3 Teslabolt Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLKyleTeslaboltArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= K1-L3 Teslabolt Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLKyleTeslaboltArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLKyleTeslaboltArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		KTES A 6
		KTES B 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLKyleTeslaboltArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLRyanCordellPsychicAmplifierSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the R11-n psychic amplifier suit."
  Inventory.Icon "RCPAA0"
  Armor.Savepercent 15
  Armor.Saveamount 99999
  DamageFactor "Melee", 1.25
  DamageFactor "Fire", 0.60
  DamageFactor "Plasma", 0.50
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLRyanCordellPsychicAmplifierSuitArmorRenegade : RLRyanCordellPsychicAmplifierSuitArmor
{
  Armor.Savepercent 23
}

ACTOR RLRyanCordellPsychicAmplifierSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "R11-n Psychic Amplifier Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "RCPAI0"
    Inventory.Pickupmessage "Picked up the R11-n psychic amplifier suit."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		RCPA A 6
		RCPA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdR11-n Psychic Amplifier Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLRyanCordellPsychicAmplifierSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLRyanCordellPsychicAmplifierSuitArmorToken",1)
		TNT1 A 0 A_Print("\cdR11-n Psychic Amplifier Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLRyanCordellPsychicAmplifierSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= R11-n Psychic Amplifier Suit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLRyanCordellPsychicAmplifierSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLRyanCordellPsychicAmplifierSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		RCPA A 6
		RCPA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLRyanCordellPsychicAmplifierSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLTerminusEst13BattlesuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the terminus battlesuit."
  Inventory.Icon "TEBSA0"
  Armor.Savepercent 45
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.70
  DamageFactor "Bullet", 0.70
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.90
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLTerminusEst13BattlesuitArmorRenegade : RLTerminusEst13BattlesuitArmor
{
  Armor.Savepercent 68
}

ACTOR RLTerminusEst13BattlesuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Terminus Battlesuit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "TEBSI0"
    Inventory.Pickupmessage "Picked up the terminus battlesuit."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		TEBS A 6
		TEBS B 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdTerminus Battlesuit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLTerminusEst13BattlesuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTerminusEst13BattlesuitArmorToken",1)
		TNT1 A 0 A_Print("\cdTerminus Battlesuit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLTerminusEst13BattlesuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Terminus Battlesuit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLTerminusEst13BattlesuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTerminusEst13BattlesuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		TEBS A 6
		TEBS B 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTerminusEst13BattlesuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLRoystensCommandArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up Roysten's command armor."
  Inventory.Icon "ROYAA0"
  Armor.Savepercent 15
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.50
  DamageFactor "Fire", 0.65
  DamageFactor "Plasma", 0.85
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLRoystensCommandArmorRenegade : RLRoystensCommandArmor
{
  Armor.Savepercent 23
}

ACTOR RLRoystensCommandArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Roysten's Command Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ROYAI0"
    Inventory.Pickupmessage "Picked up Roysten's command armor."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		ROYA A 6
		ROYA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up \cdRoysten's Command Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLRoystensCommandArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLRoystensCommandArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLRoystenSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLRoystenSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdRoysten's Command Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLRoystensCommandArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Roysten's Command Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLRoystenSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLRoystenSetBonusActive",1)
		TNT1 A 0 A_Print("\cdRoysten's Command Armor \c-equipped.\n\cf= ROYSTEN'S REVENGE =\n\cgYou can call in Supply Crates\n\cgonce per level", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLRoystensCommandArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLRoystensCommandArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ROYA A 6
		ROYA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLRoystensCommandArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLSoloOperativeSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the solo operative suit."
  Inventory.Icon "SSOSA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.10
  DamageFactor "Fire", 0.90
  DamageFactor "Plasma", 0.90
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLSoloOperativeSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Solo Operative Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "SSOSI0"
    Inventory.Pickupmessage "Picked up the solo operative suit."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		SSOS A 6
		SSOS A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdSolo Operative Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLSoloOperativeSuitArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLSoloOperativeSuitArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLArchitectSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLArchitectSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdSolo Operative Suit \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Solo Operative Suit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLArchitectSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLArchitectSetBonusActive",1)
		TNT1 A 0 A_Print("\cdSolo Operative Suit \c-equipped.\n\cf= ARCHITECT OF DEATH =\n\cgYou can turn invisible, confuse monsters and\n\cgdeal additional damage for a few seconds", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLSoloOperativeSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLSoloOperativeSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		SSOS A 6
		SSOS A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLSoloOperativeSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLTorgueBlastplateArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the Torgue blastplate armor."
  Inventory.Icon "TORAA0"
  Armor.Savepercent 25
  Armor.Saveamount 99999
  DamageFactor "Fire", 0.15
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLTorgueBlastplateArmorRenegade : RLTorgueBlastplateArmor
{
  Armor.Savepercent 68
}

ACTOR RLTorgueBlastplateArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Torgue Blastplate Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "TORAI0"
    Inventory.Pickupmessage "Picked up the Torgue blastplate armor."
	Inventory.PickupSound "misc/rlarmor4"
	Inventory.UseSound "misc/rlarmor4"
	States
	{
	Spawn:
		TORA A 6
		TORA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdTorgue Blastplate Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLTorgueBlastplateArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTorgueBlastplateArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLTorgueSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLTorgueSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdTorgue Blastplate Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLTorgueBlastplateArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Torgue Blastplate Armor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLTorgueSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLTorgueSetBonusActive",1)
		TNT1 A 0 A_Print("\cdTorgue Blastplate Armor \c-equipped.\n\cf= EXPLOOOOOSSSIONS =\n\cgAdvanced Torgue explosion technology is activated in\n\cgboth the armor and boots", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLTorgueBlastplateArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTorgueBlastplateArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		TORA A 6
		TORA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTorgueBlastplateArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLFrontlineEngineerSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the frontline engineer suit."
  Inventory.Icon "BLUAA0"
  Armor.Savepercent 20
  Armor.Saveamount 200
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.40
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLFrontlineEngineerSuitArmorRenegade : RLFrontlineEngineerSuitArmor
{
  Armor.Savepercent 30
}

ACTOR RLFrontlineEngineerSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Frontline Engineer Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BLUAI0"
    Inventory.Pickupmessage "Picked up the frontline engineer suit."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		BLUA A 6
		BLUA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdFrontline Engineer Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLFrontlineEngineerSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLFrontlineEngineerSuitArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLSentrySentinelSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLSentrySentinelSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdFrontline Engineer Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLFrontlineEngineerSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Frontline Engineer Suit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLSentrySentinelSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLSentrySentinelSetBonusActive",1)
		TNT1 A 0 A_Print("\cdFrontline Engineer Suit \c-equipped.\n\cf= SENTRY SENTINEL =\n\cgAllows you to deploy two Sentries at once", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLFrontlineEngineerSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLFrontlineEngineerSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BLUA A 6
		BLUA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLFrontlineEngineerSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLTacticalAssemblerSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the tactical assembler suit."
  Inventory.Icon "REDAA0"
  Armor.Savepercent 20
  Armor.Saveamount 200
  DamageFactor "Fire", 0.40
  DamageFactor "Plasma", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLTacticalAssemblerSuitArmorRenegade : RLTacticalAssemblerSuitArmor
{
  Armor.Savepercent 30
}

ACTOR RLTacticalAssemblerSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Tactical Assembler Suit"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "REDAI0"
    Inventory.Pickupmessage "Picked up the tactical assembler suit."
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		REDA A 6
		REDA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdTactical Assembler Suit.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLTacticalAssemblerSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RL200ArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTacticalAssemblerSuitArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLSensibleStrategistSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLSensibleStrategistSetBonusBoots",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdTactical Assembler Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLTacticalAssemblerSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Tactical Assembler Suit =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLSensibleStrategistSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLSensibleStrategistSetBonusActive",1)
		TNT1 A 0 A_Print("\cdTactical Assembler Suit \c-equipped.\n\cf= SENSIBLE STRATEGIST =\n\cgRestorer heals more health and repairs armor", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLTacticalAssemblerSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTacticalAssemblerSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		REDA A 6
		REDA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTacticalAssemblerSuitArmorPickup",0,0,0,0)
		Stop
	}
}

//Nuclear armor is here because fuck you
Actor RLNuclearArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nuclear armor."
  Inventory.Icon "NUKAA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Bullet", 0.9
  DamageFactor "Fire", 0.8
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNuclearArmorRenegade : RLNuclearArmor
{
  Armor.Savepercent 30
}

ACTOR RLNuclearArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nuclear Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "NUKAI0"
    Inventory.Pickupmessage "Picked up the nuclear armor."
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		NUKA A 6
		NUKA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ctNuclear Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNuclearArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNuclearArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLNuclearWeaponSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLNuclearWeaponSetBonusWeapon",1,"SetBonusCheck")
	ArmorFinish:
		TNT1 A 0 A_Print("\ctNuclear Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNuclearArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ct= Nuclear Armor =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLNuclearWeaponSetBonusWeapon",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLNuclearWeaponSetBonusActive",1)
		TNT1 A 0 A_Print("\cdNuclear Armor \c-equipped.\n\cf= FURIOUS FUSION =\n\cgNuclear weaponry recharges twice as fast", 8, "CONFONT")
		TNT1 A 0
		Stop
	}
}

Actor RLNuclearArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNuclearArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		NUKA A 6
		NUKA A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNuclearArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLNuclearPowerArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nuclear powerarmor."
  Inventory.Icon "ENUKA0"
  Armor.Savepercent 50
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.8
  DamageFactor "Bullet", 0.6
  DamageFactor "Fire", 0.8
  DamageFactor "Plasma", 0.9
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNuclearPowerArmorRenegade : RLNuclearPowerArmor
{
  Armor.Savepercent 75
}

Actor RLNuclearPowerArmorComplete : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the nuclear powerarmor."
  Inventory.Icon "ENUKB0"
  Armor.Savepercent 50
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.3
  DamageFactor "Bullet", 0.05
  DamageFactor "Fire", 0.75
  DamageFactor "Plasma", 0.75
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLNuclearPowerArmorCompleteRenegade : RLNuclearPowerArmor
{
  Armor.Savepercent 75
}

ACTOR RLNuclearPowerArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Nuclear Powerarmor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "ENUKI0"
    Inventory.Pickupmessage "Picked up the nuclear powerarmor."
	Inventory.PickupSound "misc/rlarmor5"
	Inventory.UseSound "misc/rlarmor5"
	States
	{
	Spawn:
		ENUK A 6
		ENUK A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cdNuclear Powerarmor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorToken",1)
		TNT1 A 0 A_GiveInventory("RLNuclearWeaponSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLNuclearWeaponSetBonusWeapon",1,"SetBonusCheck")
	ArmorFinishAlmost:
		TNT1 A 0 A_GiveInventory("RLEnclaveSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLEnclaveSetBonusBoots",1,"SetBonusCheck2")
	ArmorFinish:
		TNT1 A 0 A_Print("\cdNuclear Powerarmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cd=U= Nuclear Powerarmor =U=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	SetBonusCheck:
		TNT1 A 0 A_JumpIfInventory("RLNuclearWeaponSetBonusWeapon",1,1)
		Goto ArmorFinishAlmost
		TNT1 A 0 A_GiveInventory("RLNuclearWeaponSetBonusActive",1)
		TNT1 A 0 A_GiveInventory("RLEnclaveSetBonusArmor",1)
		TNT1 A 0 A_JumpIfInventory("RLEnclaveSetBonusBoots",1,"SetBonusCheck3")
		TNT1 A 0 A_Print("\cdNuclear Powerarmor \c-equipped.\n\cf= FURIOUS FUSION =\n\cgNuclear weaponry recharges twice as fast", 8, "CONFONT")
		TNT1 A 0
		Stop
	SetBonusCheck2:
		TNT1 A 0 A_JumpIfInventory("RLEnclaveSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLEnclaveSetBonusActive",1)
		TNT1 A 0 A_Print("\cdNuclear Powerarmor \c-equipped.\n\cf= ENCLAVE ENFORCER =\n\cgImproved stats for Nuclear Powerarmor", 8, "CONFONT")
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("PowerRLNuclearPowerBootsProtection",1)
		TNT1 A 0 A_GiveInventory("PowerRLAbsoluteBootsProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,2)
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorComplete",1)
		Stop
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorCompleteRenegade",1)
		Stop
	SetBonusCheck3:
		TNT1 A 0 A_JumpIfInventory("RLEnclaveSetBonusBoots",1,1)
		Goto ArmorFinish
		TNT1 A 0 A_GiveInventory("RLEnclaveSetBonusActive",1)
		TNT1 A 0 A_Print("\cdNuclear Powerarmor \c-equipped.\n\cf= FURIOUS FUSION =\n\cgNuclear weaponry recharges twice as fast\n\n\cf= ENCLAVE ENFORCER =\n\cgImproved stats for Nuclear Powerarmor", 8, "CONFONT")
		TNT1 A 0 A_TakeInventory("BasicArmor",99999)
		TNT1 A 0 A_TakeInventory("PowerRLNuclearPowerBootsProtection",1)
		TNT1 A 0 A_GiveInventory("PowerRLAbsoluteBootsProtection",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,2)
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorComplete",1)
		Stop
		TNT1 A 0 A_GiveInventory("RLNuclearPowerArmorCompleteRenegade",1)
		Stop
	}
}

Actor RLNuclearPowerArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLNuclearPowerArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		ENUK A 6
		ENUK A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLNuclearPowerArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		LEGENDARY ARMORS

actor PowerRLTheBeeDamageAmp : PowerDamage
{
   damagefactor "Melee", 3
   damagefactor "Bullet", 3
   damagefactor "Fire", 3
   damagefactor "Plasma", 3
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

ACTOR RLTheBeeArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up The Bee."
  Inventory.Icon "BEESA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  DamageFactor "Melee", 2.0
  DamageFactor "Bullet", 2.0
  DamageFactor "Fire", 2.0
  DamageFactor "Plasma", 2.0
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLTheBeeArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "The Bee"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "BEESI0"
    Inventory.Pickupmessage "Picked up The Bee."
	Inventory.PickupSound "misc/rlarmorlegendary"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		BEES B 6
		BEES A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ckThe Bee.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("PowerRLTheBeeDamageAmp",1)
		TNT1 A 0 A_GiveInventory("RLTheBeeArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLTheBeeArmorToken",1)
		TNT1 A 0 A_Print("\ckThe Bee \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ck=L= The Bee =L=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLTheBeeArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLTheBeeArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		BEES A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLTheBeeArmorPickup",0,0,0,0)
		Stop
	}
}

ACTOR PowerRLReactiveShieldSystemActiveToken : Powerup
{
	Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLReactiveShieldSystemMelee : PowerProtection
{
   damagefactor "Melee", 0.1
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLReactiveShieldSystemBullet : PowerProtection
{
   damagefactor "Bullet", 0.1
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLReactiveShieldSystemFire : PowerProtection
{
   damagefactor "Fire", 0.1
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

actor PowerRLReactiveShieldSystemPlasma : PowerProtection
{
   damagefactor "Plasma", 0.1
   inventory.icon ""
   Powerup.Duration -0x7FFFFFFF
   +INVENTORY.PERSISTENTPOWER
}

Actor RLReactiveShieldSystemArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the reactive shield system."
  Inventory.Icon "RSSDA0"
  Armor.Savepercent 0
  Armor.Saveamount 99999
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

ACTOR RLReactiveShieldSystemArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Reactive Shield System"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "RSSDI0"
    Inventory.Pickupmessage "Picked up the reactive shield system."
	Inventory.PickupSound "misc/rlarmorlegendary"
	Inventory.UseSound "misc/rlshield"
	States
	{
	Spawn:
		RSSD A 6
		RSSD A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ckReactive Shield System.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_GiveInventory("RLReactiveShieldSystemArmor",1)
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLReactiveShieldSystemArmorToken",1)
		TNT1 A 0 A_Print("\ckReactive Shield System \c-equipped.")
		Stop
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ck=L= Reactive Shield System =L=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLReactiveShieldSystemArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLReactiveShieldSystemArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		RSSD A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLReactiveShieldSystemArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLChronotrooperArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the chronotrooper armor."
  Inventory.Icon "CHROA0"
  Armor.Savepercent 30
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.85
  DamageFactor "Bullet", 0.85
  DamageFactor "Fire", 0.85
  DamageFactor "Plasma", 0.85
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLChronotrooperArmorRenegade : RLChronotrooperArmor
{
  Armor.Savepercent 45
}

ACTOR RLChronotrooperArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Chronotrooper Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CHROI0"
    Inventory.Pickupmessage "Picked up the chronotrooper armor."
	Inventory.PickupSound "misc/rlarmorlegendary"
	Inventory.UseSound "misc/rlarmorlegendary"
	States
	{
	Spawn:
		CHRO ABCB 4 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \ckChronotrooper Armor.")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLChronotrooperArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLChronotrooperArmorToken",1)
		TNT1 A 0 A_Print("\ckChronotrooper Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLChronotrooperArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\ck=L= Chronotrooper Armor =L=", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLChronotrooperArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLChronotrooperArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CHRO ABCB 4 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLChronotrooperArmorPickup",0,0,0,0)
		Stop
	}
}

//-------------------------------------------------------------------
//		ONYX ARMORS

Actor RLOModCyberwarriorArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the cyberwarrior armor. [O]"
  Inventory.Icon "CYWAA0"
  Armor.Savepercent 20
  Armor.Saveamount 99999
  DamageFactor "Melee", 0.40
  DamageFactor "Bullet", 0.60
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModCyberwarriorArmorRenegade : RLOModCyberwarriorArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModCyberwarriorArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Cyberwarrior Armor"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "CYWAI0"
    Inventory.Pickupmessage "Picked up the cyberwarrior armor. [O]"
	Inventory.PickupSound "misc/rlarmor3"
	Inventory.UseSound "misc/rlarmor3"
	States
	{
	Spawn:
		CYWA A 6
		CYWA A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuCyberwarrior Armor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmorToken",1)
		TNT1 A 0 A_Print("\cuCyberwarrior Armor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLOModCyberwarriorArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Cyberwarrior Armor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModCyberwarriorArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModCyberwarriorArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		CYWA A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModCyberwarriorArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModRepulsionWaveSuitArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the repulsion wave suit. [O]"
  Inventory.Icon "REPWA0"
  Armor.Savepercent 30
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModRepulsionWaveSuitArmorRenegade : RLOModRepulsionWaveSuitArmor
{
  Armor.Savepercent 45
}

ACTOR RLOModRepulsionWaveSuitArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Repulsion Wave Suit [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "REPWI0"
    Inventory.Pickupmessage "Picked up the repulsion wave suit. [O]"
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		REPW A 6
		REPW A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuRepulsion Wave Suit. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModRepulsionWaveSuitArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModRepulsionWaveSuitArmorToken",1)
		TNT1 A 0 A_Print("\cuRepulsion Wave Suit \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLRepulsionWaveSuitArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Repulsion Wave Suit [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModRepulsionWaveSuitArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModRepulsionWaveSuitArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		REPW A 1
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModRepulsionWaveSuitArmorPickup",0,0,0,0)
		Stop
	}
}

Actor RLOModSurvivalMediArmor : BasicArmorPickup
{
  Radius 20
  Height 16
  Inventory.Pickupmessage "Picked up the survival mediarmor. [O]"
  Inventory.Icon "SURVA0"
  Armor.Savepercent 20
  Armor.Saveamount 100
  DamageFactor "Melee", 0.70
  States
  {
  Spawn:
    NOIC A 10
    loop
  }
}

Actor RLOModSurvivalMediArmorRenegade : RLOModSurvivalMediArmor
{
  Armor.Savepercent 30
}

ACTOR RLOModSurvivalMediArmorPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.INVBAR
    +INVENTORY.UNTOSSABLE
    Tag "Survival MediArmor [O]"
    Inventory.InterHubAmount 1
    Inventory.MaxAmount 1
    Inventory.Icon "SURVJ0"
    Inventory.Pickupmessage "Picked up the survival mediarmor. [O]"
	Inventory.PickupSound "misc/rlarmor2"
	Inventory.UseSound "misc/rlarmor2"
	States
	{
	Spawn:
		SURV A 6
		SURV A 6 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLArmorInInventory",1,"NotPickup") // If the player is carrying armor, they cannot pick it up
		TNT1 A 0 A_GiveInventory("RLArmorInInventory",1)
		TNT1 A 0 A_Print("Picked up the \cuSurvival MediArmor. [O]")
		Stop
	Use:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("RLEquippingArmor",1,"ArmorEquip")
		TNT1 A 0 A_GiveInventory("RLEquippingArmor", 1)
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"ArmorEquipped")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"ArmorEquipped")
		Goto NoArmorEquipped
	ArmorEquipped:
		TNT1 A 0 A_Print("Press Drop Weapon to drop the selected armor, or switch weapons to cancel.", 5)
		Fail
	NoArmorEquipped:
		TNT1 A 0 A_Print("Use the armor again to wear it.\nPress Drop Weapon to drop it, or switch weapons to cancel.", 5)
		Fail
	ArmorEquip:
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"NotEquip") // If the player is already wearing armor, they cannot equip it
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"NotEquip")
		TNT1 A 0 A_JumpIfInventory("RLIndestructibleArmorWorn",1,"NotEquip")
		TNT1 A 0 A_TakeInventory("RLEquippingArmor",1)
		TNT1 A 0 A_TakeInventory("RLArmorInInventory",1)
		TNT1 A 0 A_JumpIfInventory("RLShellshockPerk",1,"RenegadeEquip")
		TNT1 A 0 A_GiveInventory("RLOModSurvivalMediArmor",1)
	EquipContinue:
		TNT1 A 0 A_GiveInventory("RLIndestructibleArmorWorn",1)
		TNT1 A 0 A_GiveInventory("RLOModSurvivalMediArmorToken",1)
		TNT1 A 0 A_Print("\cuSurvival MediArmor \c-equipped.")
		Stop
	RenegadeEquip:
		TNT1 A 0 A_GiveInventory("RLSurvivalMediArmorRenegade",1)
		Goto EquipContinue
	NotPickup:
		TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup_NoPrint")
		TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
		TNT1 A 0 A_Print("\cu= Survival MediArmor [O] =", 2, "CONFONT")
	 NotPickup_NoPrint:
		TNT1 A 0
		Fail
	NotEquip:
		TNT1 A 0 A_Print("You are already wearing armor.", 1, "CONFONT")
		TNT1 A 0
		Fail
	}
}

Actor RLOModSurvivalMediArmorToken : Inventory
{
inventory.maxamount 1
}

ACTOR DroppedRLOModSurvivalMediArmor : DroppedRLGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_ScaleVelocity (frandom(0.5, 1.5))
	FallingLoop:
		SURV A 6
		SURV A 6 Bright
		Loop
	Death:
		TNT1 A 0
		TNT1 A 1 A_SpawnItem("RLOModSurvivalMediArmorPickup",0,0,0,0)
		Stop
	}
}
